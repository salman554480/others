-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Nov 18, 2024 at 08:58 AM
-- Server version: 10.4.32-MariaDB
-- PHP Version: 8.0.30

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `toolsdb`
--

-- --------------------------------------------------------

--
-- Table structure for table `admin`
--

CREATE TABLE `admin` (
  `admin_id` int(11) NOT NULL,
  `admin_name` varchar(1000) NOT NULL,
  `admin_email` varchar(1000) NOT NULL,
  `admin_password` varchar(1000) NOT NULL,
  `admin_image` int(11) NOT NULL,
  `admin_role` varchar(1000) NOT NULL,
  `admin_status` varchar(1000) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

--
-- Dumping data for table `admin`
--

INSERT INTO `admin` (`admin_id`, `admin_name`, `admin_email`, `admin_password`, `admin_image`, `admin_role`, `admin_status`) VALUES
(1, 'Naveed ', 'admin@gmail.com', 'pass', 1, 'admin', 'publish'),
(2, 'Ali', 'ali@gmail.com', '123', 2, 'admin', 'draft'),
(3, '', '', '', 0, '', ''),
(4, '', '', '', 0, '', ''),
(5, '', '', '', 0, '', ''),
(6, '', '', '', 0, '', '');

-- --------------------------------------------------------

--
-- Table structure for table `category`
--

CREATE TABLE `category` (
  `category_id` int(11) NOT NULL,
  `category_name` varchar(500) NOT NULL,
  `category_url` varchar(500) NOT NULL,
  `category_content` text NOT NULL,
  `meta_title` varchar(500) NOT NULL,
  `meta_description` varchar(500) NOT NULL,
  `meta_keywords` varchar(500) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `category`
--

INSERT INTO `category` (`category_id`, `category_name`, `category_url`, `category_content`, `meta_title`, `meta_description`, `meta_keywords`) VALUES
(1, 'Generator', 'generator', '<p>content for category page</p>', 'content for category page', 'content for category page', 'content for category page'),
(2, 'Converter', 'converter', '', '', '', ''),
(3, 'Others', 'others', '', '', '', ''),
(4, 'Checker', 'checker', '', 'checker', 'checker', 'checker');

-- --------------------------------------------------------

--
-- Table structure for table `contactform`
--

CREATE TABLE `contactform` (
  `contactform_id` int(11) NOT NULL,
  `user_name` varchar(255) NOT NULL,
  `user_email` varchar(255) NOT NULL,
  `user_message` varchar(1000) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `contactform`
--

INSERT INTO `contactform` (`contactform_id`, `user_name`, `user_email`, `user_message`) VALUES
(1, 'Salman Ansari', 'salman@gmail.com', 'Testing');

-- --------------------------------------------------------

--
-- Table structure for table `menu`
--

CREATE TABLE `menu` (
  `menu_id` int(11) NOT NULL,
  `page_id` int(11) NOT NULL,
  `menu_location` varchar(200) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `menu`
--

INSERT INTO `menu` (`menu_id`, `page_id`, `menu_location`) VALUES
(1, 1, 'header'),
(2, 2, 'header'),
(3, 3, 'footer'),
(4, 4, 'footer'),
(5, 6, 'header');

-- --------------------------------------------------------

--
-- Table structure for table `meta`
--

CREATE TABLE `meta` (
  `meta_id` int(11) NOT NULL,
  `meta_title` varchar(500) NOT NULL,
  `meta_description` varchar(1000) NOT NULL,
  `meta_keyword` varchar(500) NOT NULL,
  `meta_source` varchar(255) NOT NULL,
  `meta_source_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `meta`
--

INSERT INTO `meta` (`meta_id`, `meta_title`, `meta_description`, `meta_keyword`, `meta_source`, `meta_source_id`) VALUES
(1, 'Me ipsum esse dicerem, inquam, nisi mihi viderer habere bene cognitam voluptatem et satis firme ', 'Me ipsum esse dicerem, inquam, nisi mihi viderer habere bene cognitam voluptatem et satis firme ', 'ashdjkshad,ajsdklsajkd,asjdhklsajd', 'post', 3),
(2, 'change Ut perspiciatis omnisSit delectus est illum optio et accusantium beatae. In sunt sim', 'change aliquam doloremque sed repudiandae eni', 'change  reiciendis officiis quo repudiandae voluptate. At dolorem aliquid', 'post', 4),
(3, 'change Ut perspiciatis omnisSit delectus est illum optio et accusantium beatae. In sunt sim', 'change  aliquam doloremque sed repudiandae eni', 'change  reiciendis officiis quo repudiandae voluptate. At dolorem aliquid', 'post', 5);

-- --------------------------------------------------------

--
-- Table structure for table `page`
--

CREATE TABLE `page` (
  `page_id` int(11) NOT NULL,
  `page` varchar(200) NOT NULL,
  `page_title` varchar(500) NOT NULL,
  `page_url` varchar(400) NOT NULL,
  `page_content` text NOT NULL,
  `meta_title` varchar(500) NOT NULL,
  `meta_description` varchar(1000) NOT NULL,
  `meta_keywords` varchar(500) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `page`
--

INSERT INTO `page` (`page_id`, `page`, `page_title`, `page_url`, `page_content`, `meta_title`, `meta_description`, `meta_keywords`) VALUES
(1, 'about', 'About', 'about-us', '<p>About Us Content.</p>\r\n<h3>The standard Lorem Ipsum passage, used since the 1500s</h3>\r\n<p>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"</p>\r\n<h3>Section 1.10.32 of \"de Finibus Bonorum et Malorum\", written by Cicero in 45 BC</h3>\r\n<p>\"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\"</p>\r\n<h3>1914 translation by H. Rackham</h3>\r\n<p>\"But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?\"</p>\r\n<h3>Section 1.10.33 of \"de Finibus Bonorum et Malorum\", written by Cicero in 45 BC</h3>\r\n<p>\"At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.\"</p>\r\n<h3>1914 translation by H. Rackham</h3>\r\n<p>\"On the other hand, we denounce with righteous indignation and dislike men who are so beguiled and demoralized by the charms of pleasure of the moment, so blinded by desire, that they cannot foresee the pain and trouble that are bound to ensue; and equal blame belongs to those who fail in their duty through weakness of will, which is the same as saying through shrinking from toil and pain. These cases are perfectly simple and easy to distinguish. In a free hour, when our power of choice is untrammelled and when nothing prevents our being able to do what we like best, every pleasure is to be welcomed and every pain avoided. But in certain circumstances and owing to the claims of duty or the obligations of business it will frequently occur that pleasures have to be repudiated and annoyances accepted. The wise man therefore always holds in these matters to this principle of selection: he rejects pleasures to secure other greater pleasures, or else he endures pains to avoid worse pains.\"</p>', 'about us meta title.', 'about us meta description.', 'about us,'),
(2, 'contact-us', 'Contact', 'contact-us', '<p>abc</p>', 'Contact Us', 'Contact Us', 'Contact Us'),
(3, 'privacy-policy', 'Privacy Policy', 'privacy-policy', '<p>abc</p>', 'Privacy Policy', 'Privacy Policy', 'Privacy Policy'),
(4, 'terms-and-conditions', 'Terms & Conditions', 'terms-conditions', '<p>abc</p>', 'Terms & Conditions', 'Terms & Conditions', ''),
(5, 'homepage', 'Homepage', '', '<h3>The standard Lorem Ipsum passage, used since the 1500s</h3>\r\n<p>\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"</p>\r\n<h3>Section 1.10.32 of \"de Finibus Bonorum et Malorum\", written by Cicero in 45 BC</h3>\r\n<p>\"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\"</p>\r\n<h3>1914 translation by H. Rackham</h3>\r\n<p>\"But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?\"</p>\r\n<h3>Section 1.10.33 of \"de Finibus Bonorum et Malorum\", written by Cicero in 45 BC</h3>\r\n<p>\"At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.\"</p>\r\n<h3>1914 translation by H. Rackham</h3>\r\n<p>\"On the other hand, we denounce with righteous indignation and dislike men who are so beguiled and demoralized by the charms of pleasure of the moment, so blinded by desire, that they cannot foresee the pain and trouble that are bound to ensue; and equal blame belongs to those who fail in their duty through weakness of will, which is the same as saying through shrinking from toil and pain. These cases are perfectly simple and easy to distinguish. In a free hour, when our power of choice is untrammelled and when nothing prevents our being able to do what we like best, every pleasure is to be welcomed and every pain avoided. But in certain circumstances and owing to the claims of duty or the obligations of business it will frequently occur that pleasures have to be repudiated and annoyances accepted. The wise man therefore always holds in these matters to this principle of selection: he rejects pleasures to secure other greater pleasures, or else he endures pains to avoid worse pains.\"</p>', 'Homepage Meta Title', 'Homepage Meta Description', 'calculator'),
(6, '', 'Blog', 'blog', '<p>Blog Content</p>', 'meta title', 'meta description', 'meta keyword');

-- --------------------------------------------------------

--
-- Table structure for table `post`
--

CREATE TABLE `post` (
  `post_id` int(11) NOT NULL,
  `category_id` int(11) NOT NULL,
  `post_title` varchar(500) NOT NULL,
  `post_url` varchar(500) NOT NULL,
  `post_content` varchar(2000) NOT NULL,
  `post_thumbnail` varchar(500) NOT NULL,
  `post_views` int(11) NOT NULL,
  `post_date` varchar(255) NOT NULL,
  `post_status` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `post`
--

INSERT INTO `post` (`post_id`, `category_id`, `post_title`, `post_url`, `post_content`, `post_thumbnail`, `post_views`, `post_date`, `post_status`) VALUES
(1, 1, 'Core Principles Of Design Thinking', 'core-principles-of-design-thinking', '&lt;p&gt;&amp;nbsp;&lt;/p&gt;', 'asdsad.png', 0, '2024-11-18', 'publish'),
(2, 1, 'Data as a Product: Data Architecture Principles for Management Blueprint', 'data-as-a-product-data-architecture-principles-for-management-blueprint', '&lt;p&gt;Est asperiores rerum et minus tenetur vel ipsam quasi.&lt;/p&gt;&lt;p&gt;Lorem ipsum dolor sit amet. Est reprehenderit galisum ut neque harum eum voluptates delectus. Sed ullam obcaecati aut pariatur modi aut voluptatem aliquam ut maiores quod. Aut dicta aliquam in veritatis galisum vel deleniti optio in eius incidunt.&lt;/p&gt;&lt;h2&gt;Est voluptatem amet ut ipsam expedita nam suscipit laudantium.&lt;/h2&gt;&lt;p&gt;Qui molestiae dolor eos incidunt exercitationem et esse excepturi eum sint eveniet vel voluptas repellat aut saepe illum quo nihil voluptatem? Eos voluptatibus omnis qui suscipit molestias in voluptate voluptas est temporibus iusto ut aperiam recusandae et recusandae quidem.&lt;/p&gt;&lt;h3&gt;Aut recusandae consectetur quo dolor porro aut fuga accusantium.&lt;/h3&gt;&lt;p&gt;Est quae cumque est rerum velit ut ipsum corporis ut temporibus suscipit aut sunt error aut possimus impedit. Et pariatur quia qui repellat aspernatur non modi quidem cum excepturi repellat quo obcaecati veritatis sit magni dolorem ut quod molestiae?&lt;/p&gt;&lt;h4&gt;Sit nihil tenetur ut facere excepturi.&lt;/h4&gt;&lt;p&gt;Quo debitis esse aut minus similique ut illum ducimus. Et rerum veniam sit mollitia fugiat et molestias placeat ut nulla corrupti.&lt;/p&gt;&lt;p&gt;Quo quibusdam quasi hic cupiditate libero ea eligendi architecto.&lt;/p&gt;&lt;p&gt;Eum soluta ullam eum fugit omnis ut quod dolor ut quae sequi est aperiam natus et suscipit numquam ut dolor magni. Ut impedit voluptatem vel voluptatem molestiae et perferendis fugiat est aliquam accusamus est neque libero id officia sint cum deserunt quos!&lt;/p&gt;&lt;p&gt;Et voluptatem sint ut aliquid aperiam ut dolor explicabo. In dolorem fugiat 33 natus voluptatem sed corrupti numquam et recusandae beatae et cumque natus id quis voluptatibus? Aut dolorum sunt eum esse doloribus sit veniam nisi est laborum perferendis ut quidem omnis eos pariatur enim et provident fugit.&amp;nbsp;&lt;/p&gt;', '267-1280x720.jpg', 0, '2024-11-18', 'publish'),
(3, 1, 'Data as a Product: The Role of Data Architecture and Data Modelling Strategy', 'data-as-a-product-the-role-of-data-architecture-and-data-modelling-strategy', '&lt;p&gt;Lorem ipsum dolor sit amet. Aut ullam praesentium &lt;i&gt;Quo consequuntur ea voluptatum ipsum aut quod illo&lt;/i&gt; aut recusandae quisquam. Et voluptate praesentium et eligendi doloremque &lt;strong&gt;Est odio et sint dignissimos&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;Aut saepe veniam et ullam voluptatehic molestiae ut quod officia. Qui fuga voluptatem &lt;i&gt;Et rerum est corporis deserunt aut fuga reiciendis&lt;/i&gt; quo sequi facere. Et nihil excepturi &lt;strong&gt;Aut sint ut labore iusto ab omnis dolorem ex illo corporis&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;Vel rerum possimus &lt;i&gt;Et alias At omnis corporis nam minima voluptatem et quia ullam&lt;/i&gt; et tenetur cumque in adipisci modi? Est quasi dolores &lt;strong&gt;Qui sunt&lt;/strong&gt; sed voluptas ipsa. Ut expedita repudiandae &lt;a href=&quot;https://www.loremipzum.com&quot;&gt;Est dolores qui sequi temporibus et corrupti quam&lt;/a&gt; ut internos quae.&lt;/p&gt;&lt;p&gt;At soluta quae &lt;a href=&quot;https://www.loremipzum.com&quot;&gt;Aut internos cum eveniet consequatur ut atque iste&lt;/a&gt; est optio magnam et nesciunt debitis ut rerum odit. Non possimus pariatur &lt;strong&gt;Et doloremque nam dicta quasi et eius sunt&lt;/strong&gt; qui adipisci inventore et quasi deleniti.&amp;nbsp;&lt;/p&gt;', '144-1280x720.jpg', 0, '2024-11-18', 'publish'),
(4, 3, 'Key considerations for Greenfield Product Engineering to build futuristic solutions', 'key-considerations-for-greenfield-product-engineering-to-build-futuristic-solutions', '&lt;p&gt;change &amp;nbsp;Non tempore galisum sit harum cupiditate.&lt;/p&gt;&lt;p&gt;Lorem ipsum dolor sit amet. Vel dolorem dolor nam temporibus asperiores &lt;i&gt;At dolor ut odio sint non autem sunt&lt;/i&gt;! Quo ullam nulla aut facilis saepeEos necessitatibus. Non consequatur consequatur &lt;strong&gt;Et Quis sed ducimus quam&lt;/strong&gt;? Aut ipsam optioEa minus qui modi nulla et neque dolores sed eveniet harum et fugit quas.&lt;/p&gt;&lt;h2&gt;Aut iure nisi hic vitae error.&lt;/h2&gt;&lt;p&gt;Ut perspiciatis omnisSit delectus est illum optio et accusantium beatae. In sunt similique quo iure fugiat &lt;strong&gt;Aut mollitia et voluptatibus earum et ipsam quidem et consectetur iste&lt;/strong&gt;. Et harum voluptates &lt;i&gt;Sit omnis non dolor facilis aut tempora error&lt;/i&gt; qui commodi error. Id natus sapienteVel quos quo natus fugit sed dolor quos ut quia fugit et incidunt assumenda aut modi accusamus!&lt;/p&gt;&lt;h3&gt;Ex quis omnis hic odit reiciendis.&lt;/h3&gt;&lt;p&gt;Ab facere sunt sit recusandae quiaAut distinctio. Et quas esse et illum deleniti &lt;strong&gt;Est saepe eos libero aspernatur id nostrum possimus et officia eaque&lt;/strong&gt;. Aut fugit nihil ut internos vitaeeos quasi. Est repellat isteIn dolorum ad cumque sunt id repellendus ratione.&lt;/p&gt;&lt;h4&gt;Aut consequatur voluptas aut porro corrupti et architecto iste.&lt;/h4&gt;&lt;p&gt;Ab autem pariatur in illo omnisEt consectetur cum reiciendis officiis quo repudiandae voluptate. At dolorem aliquid et nulla nemorem quod qui odio inventore! Hic laboriosam recusandae aut perferendis suscipitqui maxime et aliquam doloremque sed repudiandae enim.&lt;/p&gt;&lt;p&gt;Ut animi aliquid non nihil ducimus.&lt;/p&gt;&lt;p&gt;Qui odit porro ut odio dignissimos &lt;i&gt;Et maiores ut assumenda deserunt aut earum voluptas&lt;/i&gt;. Aut nemo voluptas vel minima atquecum sunt!&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Et reiciendis porro qui omnis minima in ipsam cupiditate.&lt;/li&gt;&lt;li&gt;Et tota', '49-1280x720.jpg', 0, '2024-11-18', 'publish'),
(5, 3, 'The future of data engineering in digital product engineering lies with Gen AI', 'the-future-of-data-engineering-in-digital-product-engineering-lies-with-gen-ai', '<p>Aut sunt dignissimos ea facilis distinctio non architecto fuga.</p><p>Lorem ipsum dolor sit amet. Non cupiditate dolorem ab tempore unde <i>Eum sapiente ut Quis odit et consequuntur recusandae</i>? Non fuga omnis et ullam nihil <a href=\"https://www.loremipzum.com\">Eum fugiat et repudiandae quaerat</a>. Aut voluptate laborum <strong>Rem rerum et alias consequatur et esse expedita</strong> sit reiciendis natus id error molestiae cum praesentium tenetur. Eum deserunt placeatUt labore in blanditiis minus quo corrupti nihil aut corporis eius ea quia modi?</p><h2>Aut alias magnam eos voluptatem nobis qui culpa incidunt.</h2><p>Vel possimus impedit est excepturi voluptate <strong>Ut eaque ut commodi maiores non ratione rerum</strong>. Qui quis aliquidAut pariatur et quos eligendi et facilis earum quo reprehenderit voluptatem ex iste accusantium eum nisi asperiores. Aut perferendis Quis <i>Ut optio non voluptatem porro et earum doloribus</i> aut magni odio. Et adipisci velitUt atque est iusto velit!</p><ul><li>Qui amet exercitationem non magni sunt et perspiciatis necessitatibus et galisum sunt.</li><li>Eos totam voluptas et quam itaque nam fugit velit cum sunt sapiente.</li><li>Sit quia beatae eum obcaecati beatae!</li><li>33 repellat suscipit et voluptates voluptatem quo quasi alias in fuga nihil.</li><li>Hic totam iure ab recusandae autem aut quibusdam error cum cumque harum?</li><li>Qui esse impedit ut maiores placeat!</li></ul><h3>At soluta aspernatur 33 beatae nisi.</h3><p>Aut nobis esse <a href=\"https://www.loremipzum.com\">Aut reiciendis ut earum accusamus sit perferendis labore</a> ut saepe ullam a consequuntur aperiam nam consequatur consectetur? Ut molestiae vero ut assumenda saepeut culpa sit veritatis tenetur. Qui aliquid laborum et deserunt oditet sunt a provident deserunt est tenetur reprehenderit! Et dolor quia ut asperiores doloret distinctio.</p><h4>Vel consectetur magnam At provident voluptate qui omnis cupiditate.</h4><p>Est minima perspiciatis qui dol', '35-1280x720.jpg', 17, '2024-11-18', 'publish');

-- --------------------------------------------------------

--
-- Table structure for table `setting`
--

CREATE TABLE `setting` (
  `setting_id` int(11) NOT NULL,
  `website_title` varchar(500) NOT NULL,
  `website_url` varchar(500) NOT NULL,
  `website_logo` varchar(500) NOT NULL,
  `website_favicon` varchar(500) NOT NULL,
  `website_head_code` text NOT NULL,
  `ad_code_one` text NOT NULL,
  `ad_code_two` text NOT NULL,
  `ad_code_three` text NOT NULL,
  `footer_text` text NOT NULL,
  `facebook` varchar(255) NOT NULL,
  `twitter` varchar(255) NOT NULL,
  `instagram` varchar(25) NOT NULL,
  `pinterest` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `setting`
--

INSERT INTO `setting` (`setting_id`, `website_title`, `website_url`, `website_logo`, `website_favicon`, `website_head_code`, `ad_code_one`, `ad_code_two`, `ad_code_three`, `footer_text`, `facebook`, `twitter`, `instagram`, `pinterest`) VALUES
(1, 'Webster title', 'https://scripts.vaultifier.space/tools', 'foldious-high-resolution-logo-white-transparent.png', 'Calculator-icon.png', '', '', '', '', 'About Section Data', 'aboutwebster', 'aboutwebster', 'aboutwebster', 'aboutwebster');

-- --------------------------------------------------------

--
-- Table structure for table `tool`
--

CREATE TABLE `tool` (
  `tool_id` int(11) NOT NULL,
  `category_id` int(11) NOT NULL,
  `tool_name` varchar(500) NOT NULL,
  `tool_url` varchar(500) NOT NULL,
  `tool_html` text NOT NULL,
  `tool_css` text NOT NULL,
  `tool_js` text NOT NULL,
  `tool_php` text NOT NULL,
  `tool_content` text NOT NULL,
  `tool_meta_title` varchar(300) NOT NULL,
  `tool_meta_description` varchar(500) NOT NULL,
  `tool_meta_keywords` varchar(300) NOT NULL,
  `tool_views` int(11) NOT NULL,
  `tool_status` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `tool`
--

INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(1, 1, 'Slug Generator', 'slug-generator', '<form id=\"slugForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"title\">Enter a Title:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"title\" placeholder=\"Enter a title\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"slug\">Generated Slug:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"slug\" readonly>\r\n            </div>\r\n        </form>', '', '<script>\r\n        const titleInput = document.getElementById(\"title\");\r\n        const slugInput = document.getElementById(\"slug\");\r\n        const slugForm = document.getElementById(\"slugForm\");\r\n\r\n        // Function to generate a slug from a title\r\n        function generateSlug(title) {\r\n            return title\r\n                .toLowerCase()\r\n                .trim()\r\n                .replace(/\\s+/g, \"-\") // Replace spaces with hyphens\r\n                .replace(/[^a-z0-9-]/g, \"\") // Remove special characters\r\n                .replace(/-+/g, \"-\"); // Remove consecutive hyphens\r\n        }\r\n\r\n        // Function to update the slug as the user types\r\n        function updateSlug() {\r\n            const title = titleInput.value;\r\n            const slug = generateSlug(title);\r\n            slugInput.value = slug;\r\n        }\r\n\r\n        // Add an input event listener to the title input\r\n        titleInput.addEventListener(\"input\", updateSlug);\r\n\r\n        // Call updateSlug initially to set the initial slug value\r\n        updateSlug();\r\n    </script>', '', '', 'Slug Generator', '', '', 98, 'draft'),
(2, 1, 'MD5 Generator', 'md5-generator', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"textToHash\">Enter Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"textToHash\" placeholder=\"Enter text\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"md5Hash\">MD5 Hash:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"md5Hash\" readonly>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>\r\n        </form>', '', '<script>\n        const textToHashInput = document.getElementById(\"textToHash\");\n        const md5HashInput = document.getElementById(\"md5Hash\");\n        const copyButton = document.getElementById(\"copyButton\");\n\n        // Function to calculate MD5 hash\n        function calculateMD5(text) {\n            const hash = CryptoJS.MD5(text).toString(CryptoJS.enc.Hex);\n            return hash;\n        }\n\n        // Function to copy the result to the clipboard\n        function copyToClipboard() {\n            md5HashInput.select();\n            document.execCommand(\"copy\");\n        }\n\n        // Function to update the MD5 hash as the user types\n        function updateMD5() {\n            const text = textToHashInput.value;\n            const md5Hash = calculateMD5(text);\n            md5HashInput.value = md5Hash;\n        }\n\n        // Add an input event listener to the text input\n        textToHashInput.addEventListener(\"input\", updateMD5);\n\n        // Add a click event listener to the copy button\n        copyButton.addEventListener(\"click\", copyToClipboard);\n\n        // Call updateMD5 initially to set the initial MD5 hash value\n        updateMD5();\n    </script>\n\n    <!-- Add CryptoJS library for MD5 calculation -->\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.js\"></script>', '', '', '', '', '', 38, 'publish'),
(3, 3, 'Estimated Reading Time', 'estimated-reading-time', '<form id=\"readingTimeForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"content\">Enter your content:</label>\r\n                <textarea class=\"form-control\" id=\"content\" rows=\"5\"></textarea>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>\r\n            </div>\r\n        </form>\r\n        <h2>Estimated Reading Time</h2>\r\n        <div id=\"result\"></div>', '', '<script>\r\n        function calculateReadingTime(content) {\r\n            // Define an average reading speed (words per minute)\r\n            const wordsPerMinute = 200;\r\n            \r\n            // Calculate the number of words in the content\r\n            const wordCount = content.split(/\\s+/).length;\r\n            \r\n            // Calculate the estimated reading time in minutes\r\n            const readingTime = Math.ceil(wordCount / wordsPerMinute);\r\n            \r\n            return readingTime;\r\n        }\r\n\r\n        const contentInput = document.getElementById(\'content\');\r\n        const resultDiv = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        contentInput.addEventListener(\'input\', function () {\r\n            const content = contentInput.value;\r\n            const readingTime = calculateReadingTime(content);\r\n            resultDiv.innerHTML = `<h3>Estimated Reading Time:</h3><p>${readingTime} minute(s)</p>`;\r\n        });\r\n\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDiv.textContent;\r\n            const newWindow = window.open(\'\', \'_blank\', \'width=400,height=300\');\r\n            newWindow.document.write(`<html><head><title>Reading Time</title></head><body>${resultText}</body></html>`);\r\n        });\r\n    </script>', '', '', '', '', '', 32, 'publish'),
(4, 1, 'QR Code Generator', 'qr-code-generator', '<form id=\"qr-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"text\">Enter Text /  URL</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"text\" placeholder=\"Enter text...\">\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-primary\" id=\"generate\">Generate QR Code</button>\r\n            <button type=\"button\" class=\"btn btn-success\" id=\"download\">Download QR Code</button>\r\n        </form>\r\n        <div class=\"mt-4\">\r\n            <h2>Generated QR Code:</h2>\r\n            <div id=\"qr-code\"></div>\r\n        </div>', '', '<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\r\n    <script src=\"https://cdn.rawgit.com/davidshimjs/qrcodejs/gh-pages/qrcode.min.js\"></script>\r\n\r\n    <script>\r\n        $(document).ready(function() {\r\n            const qrCodeDiv = document.getElementById(\"qr-code\");\r\n            const qrCode = new QRCode(qrCodeDiv, {\r\n                width: 128,\r\n                height: 128\r\n            });\r\n\r\n            $(\"#generate\").click(function() {\r\n                const text = $(\"#text\").val();\r\n                qrCode.clear();\r\n                qrCode.makeCode(text);\r\n            });\r\n\r\n            $(\"#download\").click(function() {\r\n                const qrCodeDataUrl = qrCodeDiv.querySelector(\"img\").src;\r\n                const link = document.createElement(\"a\");\r\n                link.href = qrCodeDataUrl;\r\n                link.download = \"qrcode.png\";\r\n                link.click();\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 115, 'publish'),
(5, 1, 'Secured Password Generator', 'secured-password-generator', '<form id=\"password-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"length\">Password Length:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"length\" placeholder=\"Enter password length...\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"includeUppercase\">Include Uppercase Letters:</label>\r\n                <input type=\"checkbox\" id=\"includeUppercase\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"includeNumbers\">Include Numbers:</label>\r\n                <input type=\"checkbox\" id=\"includeNumbers\">\r\n            </div>\r\n        </form>\r\n        <button type=\"button\" class=\"btn btn-primary\" id=\"generate\">Generate Password</button>\r\n        <button type=\"button\" class=\"btn btn-success\" id=\"copy\">Copy Result</button>\r\n        <div class=\"mt-4\">\r\n            <h2>Generated Password:</h2>\r\n            <p id=\"result\">-</p>\r\n        </div>', '', '<script>\r\n        document.getElementById(\"generate\").addEventListener(\"click\", generatePassword);\r\n\r\n        document.getElementById(\"length\").addEventListener(\"input\", generatePassword);\r\n        document.getElementById(\"includeUppercase\").addEventListener(\"change\", generatePassword);\r\n        document.getElementById(\"includeNumbers\").addEventListener(\"change\", generatePassword);\r\n\r\n        function generatePassword() {\r\n            const length = parseInt(document.getElementById(\"length\").value) || 12;\r\n            const includeUppercase = document.getElementById(\"includeUppercase\").checked;\r\n            const includeNumbers = document.getElementById(\"includeNumbers\").checked;\r\n\r\n            const lowercaseChars = \"abcdefghijklmnopqrstuvwxyz\";\r\n            const uppercaseChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n            const numberChars = \"0123456789\";\r\n            const specialChars = \"!@#$%^&*()_-+=<>?\";\r\n\r\n            let chars = lowercaseChars;\r\n            if (includeUppercase) chars += uppercaseChars;\r\n            if (includeNumbers) chars += numberChars;\r\n\r\n            let password = \"\";\r\n            for (let i = 0; i < length; i++) {\r\n                const randomIndex = Math.floor(Math.random() * chars.length);\r\n                password += chars.charAt(randomIndex);\r\n            }\r\n\r\n            document.getElementById(\"result\").textContent = password;\r\n        }\r\n\r\n        document.getElementById(\"copy\").addEventListener(\"click\", function() {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            const resultWindow = window.open(\"\", \"Generated Password\", \"width=400,height=200\");\r\n            resultWindow.document.write(`<h2>Generated Password</h2><p>${resultText}</p>`);\r\n        });\r\n\r\n        // Initial password generation\r\n        generatePassword();\r\n    </script>', '', '', '', '', '', 30, 'publish'),
(6, 1, 'Meta Tags Generator', 'meta-tags-generator', '<form id=\"meta-form\">\n            <div class=\"form-group\">\n                <label for=\"websiteTitle\">Website Title:</label>\n                <input type=\"text\" class=\"form-control\" id=\"websiteTitle\" placeholder=\"Enter website title...\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"metaDescription\">Meta Description:</label>\n                <textarea class=\"form-control\" id=\"metaDescription\" rows=\"4\" placeholder=\"Enter meta description...\"></textarea>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"metaKeywords\">Meta Keywords (comma-separated):</label>\n                <input type=\"text\" class=\"form-control\" id=\"metaKeywords\" placeholder=\"Enter meta keywords...\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"author\">Author Name:</label>\n                <input type=\"text\" class=\"form-control\" id=\"author\" placeholder=\"Enter author name...\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"index\">Index This Page:</label>\n                <select class=\"form-control\" id=\"index\">\n                    <option value=\"index\">Index</option>\n                    <option value=\"noindex\">Noindex</option>\n                </select>\n            </div>\n        </form>\n        <button type=\"button\" class=\"btn btn-primary\" id=\"generate\">Generate Meta Tags</button>\n        <button type=\"button\" class=\"btn btn-success\" id=\"copy\">Copy Result</button>\n        <div class=\"mt-4\">\n            <h2>Generated Meta Tags:</h2>\n            <pre id=\"result\"></pre>\n        </div>', '', '<script>\n        document.getElementById(\"generate\").addEventListener(\"click\", generateMetaTags);\n\n        document.getElementById(\"websiteTitle\").addEventListener(\"input\", generateMetaTags);\n        document.getElementById(\"metaDescription\").addEventListener(\"input\", generateMetaTags);\n        document.getElementById(\"metaKeywords\").addEventListener(\"input\", generateMetaTags);\n        document.getElementById(\"author\").addEventListener(\"input\", generateMetaTags);\n        document.getElementById(\"index\").addEventListener(\"change\", generateMetaTags);\n\n        document.getElementById(\"copy\").addEventListener(\"click\", copyToClipboard);\n\n        function generateMetaTags() {\n            const title = document.getElementById(\"websiteTitle\").value;\n            const description = document.getElementById(\"metaDescription\").value;\n            const keywords = document.getElementById(\"metaKeywords\").value.split(\',\').map(keyword => keyword.trim()).filter(Boolean);\n            const author = document.getElementById(\"author\").value;\n            const indexValue = document.getElementById(\"index\").value;\n\n            const metaTags = [];\n            if (title) {\n                metaTags.push(`<title>${title}</title>`);\n                metaTags.push(`<meta name=\"title\" content=\"${title}\">`);\n            }\n            if (description) {\n                metaTags.push(`<meta name=\"description\" content=\"${description}\">`);\n            }\n            if (keywords.length > 0) {\n                metaTags.push(`<meta name=\"keywords\" content=\"${keywords.join(\', \')}\">`);\n            }\n            if (author) {\n                metaTags.push(`<meta name=\"author\" content=\"${author}\">`);\n            }\n            if (indexValue === \"noindex\") {\n                metaTags.push(`<meta name=\"robots\" content=\"noindex\">`);\n            }\n\n            const result = metaTags.join(\'\\n\');\n            document.getElementById(\"result\").textContent = result;\n        }\n\n        function copyToClipboard() {\n            const resultText = document.getElementById(\"result\");\n            const range = document.createRange();\n            range.selectNode(resultText);\n            const selection = window.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(range);\n            document.execCommand(\"copy\");\n            selection.removeAllRanges();\n            alert(\"Copied to clipboard!\");\n        }\n\n        // Initial meta tag generation\n        generateMetaTags();\n    </script>', '', '', '', '', '', 42, 'publish'),
(7, 3, 'Color Picker', 'color-picker', '<form id=\"color-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"color\">Select a Color:</label>\r\n                <input type=\"color\" id=\"color\" class=\"form-control\">\r\n            </div>\r\n        </form>\r\n        <button type=\"button\" class=\"btn btn-primary\" id=\"generate\">Generate Codes</button>\r\n        <button type=\"button\" class=\"btn btn-success\" id=\"copy\">Copy Result</button>\r\n        <div class=\"jumbotron mt-4\">\r\n            <h2>Generated Codes:</h2>\r\n            <p>HEX: <span id=\"hex\"></span></p>\r\n            <p>RGB: <span id=\"rgb\"></span></p>\r\n            <p>HSL: <span id=\"hsl\"></span></p>\r\n        </div>', '', '<script>\r\n        document.getElementById(\"generate\").addEventListener(\"click\", generateCodes);\r\n        document.getElementById(\"copy\").addEventListener(\"click\", copyResult);\r\n\r\n        function generateCodes() {\r\n            const colorInput = document.getElementById(\"color\");\r\n            const selectedColor = colorInput.value;\r\n            const hex = selectedColor.substring(1); // Remove the \"#\" character\r\n\r\n            const r = parseInt(hex.substring(0, 2), 16);\r\n            const g = parseInt(hex.substring(2, 4), 16);\r\n            const b = parseInt(hex.substring(4, 6), 16);\r\n\r\n            const rgb = `rgb(${r}, ${g}, ${b})`;\r\n\r\n            const hsl = rgbToHsl(r, g, b);\r\n\r\n            document.getElementById(\"hex\").textContent = \"#\" + hex;\r\n            document.getElementById(\"rgb\").textContent = rgb;\r\n            document.getElementById(\"hsl\").textContent = `hsl(${hsl[0]}, ${hsl[1]}%, ${hsl[2]}%)`;\r\n        }\r\n\r\n        function rgbToHsl(r, g, b) {\r\n            r /= 255;\r\n            g /= 255;\r\n            b /= 255;\r\n\r\n            const max = Math.max(r, g, b);\r\n            const min = Math.min(r, g, b);\r\n            let h, s, l = (max + min) / 2;\r\n\r\n            if (max === min) {\r\n                h = s = 0; // achromatic\r\n            } else {\r\n                const d = max - min;\r\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n\r\n                h /= 6;\r\n            }\r\n\r\n            h = Math.round(h * 360);\r\n            s = Math.round(s * 100);\r\n            l = Math.round(l * 100);\r\n\r\n            return [h, s, l];\r\n        }\r\n\r\n        function copyResult() {\r\n            const hexText = document.getElementById(\"hex\").textContent;\r\n            const rgbText = document.getElementById(\"rgb\").textContent;\r\n            const hslText = document.getElementById(\"hsl\").textContent;\r\n\r\n            const resultText = `HEX: ${hexText}\\nRGB: ${rgbText}\\nHSL: ${hslText}`;\r\n\r\n            const textArea = document.createElement(\"textarea\");\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\"copy\");\r\n            document.body.removeChild(textArea);\r\n\r\n            alert(\"Codes copied to clipboard!\");\r\n        }\r\n\r\n        // Initial code generation\r\n        generateCodes();\r\n    </script>', '', '', '', '', '', 94, 'publish'),
(8, 2, 'Decimal to Binary', 'decimal-to-binary', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"inputDecimal\">Decimal Number:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"inputDecimal\" placeholder=\"Enter decimal number...\">\r\n            </div>\r\n        </form>\r\n        <button type=\"button\" class=\"btn btn-success\" id=\"copy\">Copy Result</button>\r\n        <div class=\"mt-4\">\r\n            <h2>Converted Binary:</h2>\r\n            <p id=\"result\">-</p>\r\n        </div>', '', '<script>\r\n        document.getElementById(\"inputDecimal\").addEventListener(\"input\", convertDecimalToBinary);\r\n        document.getElementById(\"copy\").addEventListener(\"click\", copyResult);\r\n\r\n        function convertDecimalToBinary() {\r\n            const decimalInput = document.getElementById(\"inputDecimal\").value;\r\n            const binaryResult = decimalInput === \"\" ? \"-\" : decimalToBinary(decimalInput);\r\n            document.getElementById(\"result\").textContent = binaryResult;\r\n        }\r\n\r\n        function decimalToBinary(decimal) {\r\n            return (decimal >>> 0).toString(2);\r\n        }\r\n\r\n        function copyResult() {\r\n            const binaryResult = document.getElementById(\"result\").textContent;\r\n            const textArea = document.createElement(\"textarea\");\r\n            textArea.value = binaryResult;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\"copy\");\r\n            document.body.removeChild(textArea);\r\n            alert(\"Binary value copied to clipboard!\");\r\n        }\r\n    </script>', '', '', '', '', '', 17, 'publish'),
(9, 2, 'Binary to Decimal Converter', 'binary-to-decimal-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"inputBinary\">Binary Number:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputBinary\" placeholder=\"Enter binary number...\">\r\n            </div>\r\n        </form>\r\n        <button type=\"button\" class=\"btn btn-success\" id=\"copy\">Copy Result</button>\r\n        <div class=\"mt-4\">\r\n            <h2>Converted Decimal:</h2>\r\n            <p id=\"result\">-</p>\r\n        </div>', '', '<script>\r\n        document.getElementById(\"inputBinary\").addEventListener(\"input\", convertBinaryToDecimal);\r\n        document.getElementById(\"copy\").addEventListener(\"click\", copyResult);\r\n\r\n        function convertBinaryToDecimal() {\r\n            const binaryInput = document.getElementById(\"inputBinary\").value;\r\n            const decimalResult = binaryInput === \"\" ? \"-\" : binaryToDecimal(binaryInput);\r\n            document.getElementById(\"result\").textContent = decimalResult;\r\n        }\r\n\r\n        function binaryToDecimal(binary) {\r\n            return parseInt(binary, 2);\r\n        }\r\n\r\n        function copyResult() {\r\n            const decimalResult = document.getElementById(\"result\").textContent;\r\n            const textArea = document.createElement(\"textarea\");\r\n            textArea.value = decimalResult;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\"copy\");\r\n            document.body.removeChild(textArea);\r\n            alert(\"Decimal value copied to clipboard!\");\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(10, 2, 'Uppercase to Lowercase Converter', 'uppercase-to-lowercase-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputText\">Enter Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputText\" placeholder=\"Enter text...\">\r\n            </div>\r\n\r\n            <!-- Buttons for transformation -->\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"transformUpper\">Uppercase</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"transformLower\">Lowercase</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"transformCapitalize\">Capitalize</button>\r\n            </div>\r\n\r\n            <!-- Result display -->\r\n            <div class=\"form-group\">\r\n                <h3>Result:</h3>\r\n                <div id=\"result\"></div>\r\n            </div>\r\n\r\n            <!-- Copy button -->\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-success\" id=\"copyResult\">Copy Result</button>\r\n            </div>\r\n        </form>', '', '<script>\r\n        // Function to transform text based on the selected option\r\n        function transformText(transformation) {\r\n            const inputText = document.getElementById(\'inputText\').value;\r\n            let transformedText = \'\';\r\n\r\n            switch (transformation) {\r\n                case \'uppercase\':\r\n                    transformedText = inputText.toUpperCase();\r\n                    break;\r\n                case \'lowercase\':\r\n                    transformedText = inputText.toLowerCase();\r\n                    break;\r\n                case \'capitalize\':\r\n                    transformedText = inputText.replace(/\\b\\w/g, c => c.toUpperCase());\r\n                    break;\r\n                default:\r\n                    transformedText = inputText;\r\n            }\r\n\r\n            // Display the result\r\n            document.getElementById(\'result\').textContent = transformedText;\r\n        }\r\n\r\n        // Event listeners for transformation buttons\r\n        document.getElementById(\'transformUpper\').addEventListener(\'click\', () => transformText(\'uppercase\'));\r\n        document.getElementById(\'transformLower\').addEventListener(\'click\', () => transformText(\'lowercase\'));\r\n        document.getElementById(\'transformCapitalize\').addEventListener(\'click\', () => transformText(\'capitalize\'));\r\n\r\n        // Copy result to clipboard\r\n        document.getElementById(\'copyResult\').addEventListener(\'click\', () => {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const tempInput = document.createElement(\'textarea\');\r\n            tempInput.value = resultText;\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>\r\n', '', '', '', '', '', 10, 'publish'),
(11, 2, 'Lowercase to Uppercase Converter', 'lowercase-to-uppercase-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputText\">Enter Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputText\" placeholder=\"Enter text...\">\r\n            </div>\r\n\r\n            <!-- Buttons for transformation -->\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"transformUpper\">Uppercase</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"transformLower\">Lowercase</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"transformCapitalize\">Capitalize</button>\r\n            </div>\r\n\r\n            <!-- Result display -->\r\n            <div class=\"form-group\">\r\n                <h3>Result:</h3>\r\n                <div id=\"result\"></div>\r\n            </div>\r\n\r\n            <!-- Copy button -->\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-success\" id=\"copyResult\">Copy Result</button>\r\n            </div>\r\n        </form>', '', '<script>\r\n        // Function to transform text based on the selected option\r\n        function transformText(transformation) {\r\n            const inputText = document.getElementById(\'inputText\').value;\r\n            let transformedText = \'\';\r\n\r\n            switch (transformation) {\r\n                case \'uppercase\':\r\n                    transformedText = inputText.toUpperCase();\r\n                    break;\r\n                case \'lowercase\':\r\n                    transformedText = inputText.toLowerCase();\r\n                    break;\r\n                case \'capitalize\':\r\n                    transformedText = inputText.replace(/\\b\\w/g, c => c.toUpperCase());\r\n                    break;\r\n                default:\r\n                    transformedText = inputText;\r\n            }\r\n\r\n            // Display the result\r\n            document.getElementById(\'result\').textContent = transformedText;\r\n        }\r\n\r\n        // Event listeners for transformation buttons\r\n        document.getElementById(\'transformUpper\').addEventListener(\'click\', () => transformText(\'uppercase\'));\r\n        document.getElementById(\'transformLower\').addEventListener(\'click\', () => transformText(\'lowercase\'));\r\n        document.getElementById(\'transformCapitalize\').addEventListener(\'click\', () => transformText(\'capitalize\'));\r\n\r\n        // Copy result to clipboard\r\n        document.getElementById(\'copyResult\').addEventListener(\'click\', () => {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const tempInput = document.createElement(\'textarea\');\r\n            tempInput.value = resultText;\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>\r\n', '', '', '', '', '', 6, 'publish'),
(12, 2, 'Lowercase to Capitalize Converter', 'lowercase-to-capitalize-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputText\">Enter Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputText\" placeholder=\"Enter text...\">\r\n            </div>\r\n\r\n            <!-- Buttons for transformation -->\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"transformUpper\">Uppercase</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"transformLower\">Lowercase</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"transformCapitalize\">Capitalize</button>\r\n            </div>\r\n\r\n            <!-- Result display -->\r\n            <div class=\"form-group\">\r\n                <h3>Result:</h3>\r\n                <div id=\"result\"></div>\r\n            </div>\r\n\r\n            <!-- Copy button -->\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-success\" id=\"copyResult\">Copy Result</button>\r\n            </div>\r\n        </form>', '', '<script>\r\n        // Function to transform text based on the selected option\r\n        function transformText(transformation) {\r\n            const inputText = document.getElementById(\'inputText\').value;\r\n            let transformedText = \'\';\r\n\r\n            switch (transformation) {\r\n                case \'uppercase\':\r\n                    transformedText = inputText.toUpperCase();\r\n                    break;\r\n                case \'lowercase\':\r\n                    transformedText = inputText.toLowerCase();\r\n                    break;\r\n                case \'capitalize\':\r\n                    transformedText = inputText.replace(/\\b\\w/g, c => c.toUpperCase());\r\n                    break;\r\n                default:\r\n                    transformedText = inputText;\r\n            }\r\n\r\n            // Display the result\r\n            document.getElementById(\'result\').textContent = transformedText;\r\n        }\r\n\r\n        // Event listeners for transformation buttons\r\n        document.getElementById(\'transformUpper\').addEventListener(\'click\', () => transformText(\'uppercase\'));\r\n        document.getElementById(\'transformLower\').addEventListener(\'click\', () => transformText(\'lowercase\'));\r\n        document.getElementById(\'transformCapitalize\').addEventListener(\'click\', () => transformText(\'capitalize\'));\r\n\r\n        // Copy result to clipboard\r\n        document.getElementById(\'copyResult\').addEventListener(\'click\', () => {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const tempInput = document.createElement(\'textarea\');\r\n            tempInput.value = resultText;\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>\r\n', '', '', '', '', '', 10, 'publish'),
(13, 2, 'Capitalize to Lowercase Converter', 'capitalize-to-lowercase-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputText\">Enter Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputText\" placeholder=\"Enter text...\">\r\n            </div>\r\n\r\n            <!-- Buttons for transformation -->\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"transformUpper\">Uppercase</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"transformLower\">Lowercase</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"transformCapitalize\">Capitalize</button>\r\n            </div>\r\n\r\n            <!-- Result display -->\r\n            <div class=\"form-group\">\r\n                <h3>Result:</h3>\r\n                <div id=\"result\"></div>\r\n            </div>\r\n\r\n            <!-- Copy button -->\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-success\" id=\"copyResult\">Copy Result</button>\r\n            </div>\r\n        </form>', '', '<script>\r\n        // Function to transform text based on the selected option\r\n        function transformText(transformation) {\r\n            const inputText = document.getElementById(\'inputText\').value;\r\n            let transformedText = \'\';\r\n\r\n            switch (transformation) {\r\n                case \'uppercase\':\r\n                    transformedText = inputText.toUpperCase();\r\n                    break;\r\n                case \'lowercase\':\r\n                    transformedText = inputText.toLowerCase();\r\n                    break;\r\n                case \'capitalize\':\r\n                    transformedText = inputText.replace(/\\b\\w/g, c => c.toUpperCase());\r\n                    break;\r\n                default:\r\n                    transformedText = inputText;\r\n            }\r\n\r\n            // Display the result\r\n            document.getElementById(\'result\').textContent = transformedText;\r\n        }\r\n\r\n        // Event listeners for transformation buttons\r\n        document.getElementById(\'transformUpper\').addEventListener(\'click\', () => transformText(\'uppercase\'));\r\n        document.getElementById(\'transformLower\').addEventListener(\'click\', () => transformText(\'lowercase\'));\r\n        document.getElementById(\'transformCapitalize\').addEventListener(\'click\', () => transformText(\'capitalize\'));\r\n\r\n        // Copy result to clipboard\r\n        document.getElementById(\'copyResult\').addEventListener(\'click\', () => {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const tempInput = document.createElement(\'textarea\');\r\n            tempInput.value = resultText;\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>\r\n', '', '', '', '', '', 7, 'publish'),
(14, 2, 'Capitalize to Uppercase Converter', 'capitalize-to-uppercase-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputText\">Enter Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputText\" placeholder=\"Enter text...\">\r\n            </div>\r\n\r\n            <!-- Buttons for transformation -->\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"transformUpper\">Uppercase</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"transformLower\">Lowercase</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"transformCapitalize\">Capitalize</button>\r\n            </div>\r\n\r\n            <!-- Result display -->\r\n            <div class=\"form-group\">\r\n                <h3>Result:</h3>\r\n                <div id=\"result\"></div>\r\n            </div>\r\n\r\n            <!-- Copy button -->\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-success\" id=\"copyResult\">Copy Result</button>\r\n            </div>\r\n        </form>', '', '<script>\r\n        // Function to transform text based on the selected option\r\n        function transformText(transformation) {\r\n            const inputText = document.getElementById(\'inputText\').value;\r\n            let transformedText = \'\';\r\n\r\n            switch (transformation) {\r\n                case \'uppercase\':\r\n                    transformedText = inputText.toUpperCase();\r\n                    break;\r\n                case \'lowercase\':\r\n                    transformedText = inputText.toLowerCase();\r\n                    break;\r\n                case \'capitalize\':\r\n                    transformedText = inputText.replace(/\\b\\w/g, c => c.toUpperCase());\r\n                    break;\r\n                default:\r\n                    transformedText = inputText;\r\n            }\r\n\r\n            // Display the result\r\n            document.getElementById(\'result\').textContent = transformedText;\r\n        }\r\n\r\n        // Event listeners for transformation buttons\r\n        document.getElementById(\'transformUpper\').addEventListener(\'click\', () => transformText(\'uppercase\'));\r\n        document.getElementById(\'transformLower\').addEventListener(\'click\', () => transformText(\'lowercase\'));\r\n        document.getElementById(\'transformCapitalize\').addEventListener(\'click\', () => transformText(\'capitalize\'));\r\n\r\n        // Copy result to clipboard\r\n        document.getElementById(\'copyResult\').addEventListener(\'click\', () => {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const tempInput = document.createElement(\'textarea\');\r\n            tempInput.value = resultText;\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>\r\n', '', '', '', '', '', 7, 'publish'),
(15, 2, 'Uppercase to Capitalize Converter', 'uppercase-to-capitalize-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputText\">Enter Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputText\" placeholder=\"Enter text...\">\r\n            </div>\r\n\r\n            <!-- Buttons for transformation -->\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"transformUpper\">Uppercase</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"transformLower\">Lowercase</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"transformCapitalize\">Capitalize</button>\r\n            </div>\r\n\r\n            <!-- Result display -->\r\n            <div class=\"form-group\">\r\n                <h3>Result:</h3>\r\n                <div id=\"result\"></div>\r\n            </div>\r\n\r\n            <!-- Copy button -->\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-success\" id=\"copyResult\">Copy Result</button>\r\n            </div>\r\n        </form>', '', '<script>\r\n        // Function to transform text based on the selected option\r\n        function transformText(transformation) {\r\n            const inputText = document.getElementById(\'inputText\').value;\r\n            let transformedText = \'\';\r\n\r\n            switch (transformation) {\r\n                case \'uppercase\':\r\n                    transformedText = inputText.toUpperCase();\r\n                    break;\r\n                case \'lowercase\':\r\n                    transformedText = inputText.toLowerCase();\r\n                    break;\r\n                case \'capitalize\':\r\n                    transformedText = inputText.replace(/\\b\\w/g, c => c.toUpperCase());\r\n                    break;\r\n                default:\r\n                    transformedText = inputText;\r\n            }\r\n\r\n            // Display the result\r\n            document.getElementById(\'result\').textContent = transformedText;\r\n        }\r\n\r\n        // Event listeners for transformation buttons\r\n        document.getElementById(\'transformUpper\').addEventListener(\'click\', () => transformText(\'uppercase\'));\r\n        document.getElementById(\'transformLower\').addEventListener(\'click\', () => transformText(\'lowercase\'));\r\n        document.getElementById(\'transformCapitalize\').addEventListener(\'click\', () => transformText(\'capitalize\'));\r\n\r\n        // Copy result to clipboard\r\n        document.getElementById(\'copyResult\').addEventListener(\'click\', () => {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const tempInput = document.createElement(\'textarea\');\r\n            tempInput.value = resultText;\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>\r\n', '', '', '', '', '', 6, 'publish'),
(16, 3, 'Word Combiner', 'word-combiner', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"word1\">Enter Word 1:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"word1\" placeholder=\"Enter word 1...\">\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"word2\">Enter Word 2:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"word2\" placeholder=\"Enter word 2...\">\r\n            </div>\r\n\r\n            <!-- Result display -->\r\n            <div class=\"form-group\">\r\n                <h3>Result:</h3>\r\n                <div id=\"result\"></div>\r\n            </div>\r\n\r\n            <!-- Combine button -->\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"combineWords\">Combine Words</button>\r\n            </div>\r\n\r\n            <!-- Copy button -->\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-success\" id=\"copyResult\">Copy Result</button>\r\n            </div>\r\n        </form>', '', '<script>\r\n        // Function to combine words\r\n        function combineWords() {\r\n            const word1 = document.getElementById(\'word1\').value;\r\n            const word2 = document.getElementById(\'word2\').value;\r\n            const combinedWords = `${word1} ${word2}`;\r\n\r\n            // Display the result\r\n            document.getElementById(\'result\').textContent = combinedWords;\r\n        }\r\n\r\n        // Event listener for combining words\r\n        document.getElementById(\'combineWords\').addEventListener(\'click\', combineWords);\r\n\r\n        // Copy result to clipboard\r\n        document.getElementById(\'copyResult\').addEventListener(\'click\', () => {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const tempInput = document.createElement(\'textarea\');\r\n            tempInput.value = resultText;\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>', '', '', '', '', '', 23, 'publish'),
(17, 1, 'Reverse Text Generator', 'reverse-text-generator', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputText\">Enter Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputText\" placeholder=\"Enter text...\">\r\n            </div>\r\n\r\n            <!-- Result display -->\r\n            <div class=\"form-group\">\r\n                <h3>Result:</h3>\r\n                <div id=\"result\"></div>\r\n            </div>\r\n\r\n            <!-- Reverse button -->\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"reverseText\">Reverse Text</button>\r\n            </div>\r\n\r\n            <!-- Copy button -->\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-success\" id=\"copyResult\">Copy Result</button>\r\n            </div>\r\n        </form>', '', '<script>\r\n        // Function to reverse text\r\n        function reverseText() {\r\n            const inputText = document.getElementById(\'inputText\').value;\r\n            const reversedText = inputText.split(\'\').reverse().join(\'\');\r\n\r\n            // Display the result\r\n            document.getElementById(\'result\').textContent = reversedText;\r\n        }\r\n\r\n        // Event listener for reversing text\r\n        document.getElementById(\'reverseText\').addEventListener(\'click\', reverseText);\r\n\r\n        // Copy result to clipboard\r\n        document.getElementById(\'copyResult\').addEventListener(\'click\', () => {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const tempInput = document.createElement(\'textarea\');\r\n            tempInput.value = resultText;\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>', '', '', '', '', '', 30, 'publish'),
(18, 3, 'Screen Resolution Checker', 'screen-resolution-checker', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"width\">Screen Width:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"width\" readonly>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"height\">Screen Height:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"height\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>\r\n        <div id=\"result\"></div>', '', '<script>\r\n        // Function to update screen resolution values\r\n        function updateResolution() {\r\n            const screenWidth = window.screen.width;\r\n            const screenHeight = window.screen.height;\r\n            document.getElementById(\"width\").value = screenWidth;\r\n            document.getElementById(\"height\").value = screenHeight;\r\n        }\r\n\r\n        // Add event listener to the input fields for live update\r\n        document.getElementById(\"width\").addEventListener(\"input\", updateResolution);\r\n        document.getElementById(\"height\").addEventListener(\"input\", updateResolution);\r\n\r\n        // Add event listener to the copy button\r\n        document.getElementById(\"copyButton\").addEventListener(\"click\", function() {\r\n            const widthValue = document.getElementById(\"width\").value;\r\n            const heightValue = document.getElementById(\"height\").value;\r\n            const result = `Screen Width: ${widthValue}, Screen Height: ${heightValue}`;\r\n            \r\n            // Create a temporary textarea element to copy text to clipboard\r\n            const tempTextArea = document.createElement(\"textarea\");\r\n            tempTextArea.value = result;\r\n            document.body.appendChild(tempTextArea);\r\n            tempTextArea.select();\r\n            document.execCommand(\"copy\");\r\n            document.body.removeChild(tempTextArea);\r\n            \r\n            // Display a success message\r\n            document.getElementById(\"result\").innerHTML = \"Result copied to clipboard!\";\r\n        });\r\n\r\n        // Initial update\r\n        updateResolution();\r\n    </script>', '', '', '', '', '', 30, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(19, 1, 'HTACCESS Redirect Generator', 'htaccess-redirect-generator', '<form id=\"redirectForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"sourceURL\">Source URL</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"sourceURL\" placeholder=\"Enter Source URL\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"targetURL\">Target URL</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"targetURL\" placeholder=\"Enter Target URL\">\r\n            </div>\r\n        </form>\r\n\r\n        <!-- Result -->\r\n        <h3>HTACCESS Redirect Rule:</h3>\r\n        <code id=\"redirectResult\"></code>\r\n\r\n        <!-- Copy Button -->\r\n        <button id=\"copyButton\" class=\"btn btn-primary mt-3\">Copy Result</button>', '', '<script>\r\n        // Function to generate HTACCESS redirect rule\r\n        function generateRedirectRule() {\r\n            const sourceURL = document.getElementById(\'sourceURL\').value;\r\n            const targetURL = document.getElementById(\'targetURL\').value;\r\n\r\n            // Check if source and target URLs are not empty\r\n            if (sourceURL.trim() === \"\" || targetURL.trim() === \"\") {\r\n                alert(\"Please enter both source and target URLs.\");\r\n                return;\r\n            }\r\n\r\n            const redirectRule = `Redirect 301 ${sourceURL} ${targetURL}`;\r\n            document.getElementById(\'redirectResult\').textContent = redirectRule;\r\n        }\r\n\r\n        // Event listener for form input changes\r\n        document.getElementById(\'sourceURL\').addEventListener(\'input\', generateRedirectRule);\r\n        document.getElementById(\'targetURL\').addEventListener(\'input\', generateRedirectRule);\r\n\r\n        // Event listener for copy button\r\n        document.getElementById(\'copyButton\').addEventListener(\'click\', function () {\r\n            const redirectRule = document.getElementById(\'redirectResult\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = redirectRule;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\"Redirect rule copied to clipboard.\");\r\n        });\r\n    </script>', '', '', '', '', '', 33, 'publish'),
(20, 2, 'CSS Minifier', 'css-minifier', '<form id=\"minifyForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"cssCode\">Enter CSS Code:</label>\r\n                <textarea class=\"form-control\" id=\"cssCode\" rows=\"6\" placeholder=\"Enter your CSS code here\" required></textarea>\r\n            </div>\r\n        </form>\r\n\r\n        <!-- Result -->\r\n        <h3>Minified CSS:</h3>\r\n        <pre id=\"minifiedResult\"></pre>\r\n\r\n        <!-- Copy Button -->\r\n        <button id=\"copyButton\" class=\"btn btn-primary\">Copy Result</button>', '', '\r\n    <script>\r\n        // Function to minify CSS\r\n        function minifyCSS() {\r\n            const cssCode = document.getElementById(\'cssCode\').value;\r\n\r\n            // Use a regular expression to remove whitespace and comments\r\n            const minifiedCSS = cssCode.replace(/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*?$|[\\n\\r]+| {2,}/g, \'\');\r\n\r\n            // Display the minified CSS\r\n            document.getElementById(\'minifiedResult\').textContent = minifiedCSS;\r\n        }\r\n\r\n        // Event listener for input changes\r\n        document.getElementById(\'cssCode\').addEventListener(\'input\', minifyCSS);\r\n\r\n        // Event listener for the \"Copy Result\" button\r\n        document.getElementById(\'copyButton\').addEventListener(\'click\', function () {\r\n            const minifiedCSS = document.getElementById(\'minifiedResult\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = minifiedCSS;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\"Minified CSS copied to clipboard.\");\r\n        });\r\n    </script>\r\n', '', '', '', '', '', 53, 'publish'),
(21, 2, 'HTML Minifier', 'html-minifier', '<form id=\"minifyForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"htmlCode\">Enter HTML Code:</label>\r\n                <textarea class=\"form-control\" id=\"htmlCode\" rows=\"6\" placeholder=\"Enter your HTML code here\" required></textarea>\r\n            </div>\r\n        </form>\r\n\r\n        <!-- Result -->\r\n        <h3>Minified HTML:</h3>\r\n        <pre id=\"minifiedResult\"></pre>\r\n\r\n        <!-- Copy Button -->\r\n        <button id=\"copyButton\" class=\"btn btn-primary\">Copy Result</button>', '', '<script>\r\n        // Function to minify HTML\r\n        function minifyHTML() {\r\n            const htmlCode = document.getElementById(\'htmlCode\').value;\r\n\r\n            // Use a regular expression to remove whitespace and comments\r\n            const minifiedHTML = htmlCode.replace(/<!--[\\s\\S]*?-->|^\\s+|\\s+$|\\n/gm, \'\');\r\n\r\n            // Display the minified HTML\r\n            document.getElementById(\'minifiedResult\').textContent = minifiedHTML;\r\n        }\r\n\r\n        // Event listener for input changes\r\n        document.getElementById(\'htmlCode\').addEventListener(\'input\', minifyHTML);\r\n\r\n        // Event listener for the \"Copy Result\" button\r\n        document.getElementById(\'copyButton\').addEventListener(\'click\', function () {\r\n            const minifiedHTML = document.getElementById(\'minifiedResult\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = minifiedHTML;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\"Minified HTML copied to clipboard.\");\r\n        });\r\n    </script>', '', '', '', '', '', 17, 'publish'),
(22, 2, 'JavaScript Minifier', 'javascript-minifier', '  <form id=\"minifyForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"javascriptCode\">Enter JavaScript Code:</label>\r\n                <textarea class=\"form-control\" id=\"javascriptCode\" rows=\"6\" placeholder=\"Enter your JavaScript code here\" required></textarea>\r\n            </div>\r\n        </form>\r\n\r\n        <!-- Result -->\r\n        <h3>Minified JavaScript:</h3>\r\n        <pre id=\"minifiedResult\"></pre>\r\n\r\n        <!-- Copy Button -->\r\n        <button id=\"copyButton\" class=\"btn btn-primary\">Copy Result</button>', '', ' <script>\r\n        // Function to minify JavaScript\r\n        function minifyJavaScript() {\r\n            const javascriptCode = document.getElementById(\'javascriptCode\').value;\r\n\r\n            // Use a regular expression to remove whitespace and comments\r\n            const minifiedJavaScript = javascriptCode.replace(/\\/\\/.*?$|\\/\\*[\\s\\S]*?\\*\\/|\\n|\\t/gm, \'\');\r\n\r\n            // Display the minified JavaScript\r\n            document.getElementById(\'minifiedResult\').textContent = minifiedJavaScript;\r\n        }\r\n\r\n        // Event listener for input changes\r\n        document.getElementById(\'javascriptCode\').addEventListener(\'input\', minifyJavaScript);\r\n\r\n        // Event listener for the \"Copy Result\" button\r\n        document.getElementById(\'copyButton\').addEventListener(\'click\', function () {\r\n            const minifiedJavaScript = document.getElementById(\'minifiedResult\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = minifiedJavaScript;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\"Minified JavaScript copied to clipboard.\");\r\n        });\r\n    </script>', '', '', '', '', '', 11, 'publish'),
(23, 1, 'Redirect Checker', 'redirect-checker', '<form id=\"redirectForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"url\">Enter URL:</label>\r\n                <input type=\"url\" class=\"form-control\" id=\"url\" placeholder=\"Enter URL\" required>\r\n            </div>\r\n        </form>\r\n\r\n        <!-- Result -->\r\n        <h3>Redirect Information:</h3>\r\n        <pre id=\"redirectResult\"></pre>\r\n\r\n        <!-- Check Button -->\r\n        <button id=\"checkButton\" class=\"btn btn-primary\">Check Redirect</button>\r\n        <!-- Copy Button -->\r\n        <button id=\"copyButton\" class=\"btn btn-primary\">Copy Result</button>', '', ' <script>\r\n        // Function to check URL redirect\r\n        function checkRedirect() {\r\n            const url = document.getElementById(\'url\').value;\r\n\r\n            // Make an HTTP HEAD request to the URL\r\n            fetch(url, { method: \'HEAD\' })\r\n                .then(response => {\r\n                    const redirectInfo = {\r\n                        url: response.url,\r\n                        status: response.status,\r\n                        statusText: response.statusText,\r\n                        redirected: response.redirected,\r\n                        redirectURL: response.headers.get(\'Location\')\r\n                    };\r\n                    return redirectInfo;\r\n                })\r\n                .then(redirectInfo => {\r\n                    // Display the redirect information\r\n                    const result = JSON.stringify(redirectInfo, null, 2);\r\n                    document.getElementById(\'redirectResult\').textContent = result;\r\n                })\r\n                .catch(error => {\r\n                    document.getElementById(\'redirectResult\').textContent = `Error: ${error.message}`;\r\n                });\r\n        }\r\n\r\n        // Event listener for input changes\r\n        document.getElementById(\'url\').addEventListener(\'input\', checkRedirect);\r\n\r\n        // Event listener for the \"Check Redirect\" button\r\n        document.getElementById(\'checkButton\').addEventListener(\'click\', checkRedirect);\r\n\r\n        // Event listener for the \"Copy Result\" button\r\n        document.getElementById(\'copyButton\').addEventListener(\'click\', function () {\r\n            const redirectResult = document.getElementById(\'redirectResult\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = redirectResult;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\"Redirect information copied to clipboard.\");\r\n        });\r\n    </script>', '', '', '', '', '', 23, 'publish'),
(24, 3, 'Browser Checker', 'browser-checker', ' <form id=\"browserCheckForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"userAgent\">Enter User-Agent String:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"userAgent\" placeholder=\"Enter User-Agent String\" required>\r\n            </div>\r\n        </form>\r\n\r\n        <!-- Result -->\r\n        <h3>Browser Information:</h3>\r\n        <pre id=\"browserResult\"></pre>\r\n\r\n        <!-- Check Button -->\r\n        <button id=\"checkButton\" class=\"btn btn-primary\">Check Browser</button>\r\n        <!-- Copy Button -->\r\n        <button id=\"copyButton\" class=\"btn btn-primary\">Copy Result</button>', '', ' <script>\r\n        // Function to check the browser from the User-Agent string\r\n        function checkBrowser() {\r\n            const userAgent = document.getElementById(\'userAgent\').value;\r\n\r\n            // Use the user-agent string to detect the browser\r\n            const browserInfo = detectBrowser(userAgent);\r\n\r\n            // Display the browser information\r\n            document.getElementById(\'browserResult\').textContent = JSON.stringify(browserInfo, null, 2);\r\n        }\r\n\r\n        // Event listener for input changes\r\n        document.getElementById(\'userAgent\').addEventListener(\'input\', checkBrowser);\r\n\r\n        // Event listener for the \"Check Browser\" button\r\n        document.getElementById(\'checkButton\').addEventListener(\'click\', checkBrowser);\r\n\r\n        // Event listener for the \"Copy Result\" button\r\n        document.getElementById(\'copyButton\').addEventListener(\'click\', function () {\r\n            const browserResult = document.getElementById(\'browserResult\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = browserResult;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\"Browser information copied to clipboard.\");\r\n        });\r\n\r\n        // Function to detect the browser from the User-Agent string\r\n        function detectBrowser(userAgent) {\r\n            const browserInfo = {\r\n                userAgent: userAgent,\r\n                browser: \"Unknown\",\r\n                version: \"Unknown\",\r\n                os: \"Unknown\"\r\n            };\r\n\r\n            if (/Firefox[\\/\\s](\\d+\\.\\d+)/.test(userAgent)) {\r\n                browserInfo.browser = \"Firefox\";\r\n                browserInfo.version = RegExp.$1;\r\n            } else if (/Chrome[\\/\\s](\\d+\\.\\d+)/.test(userAgent)) {\r\n                browserInfo.browser = \"Chrome\";\r\n                browserInfo.version = RegExp.$1;\r\n            } else if (/Safari[\\/\\s](\\d+\\.\\d+)/.test(userAgent)) {\r\n                browserInfo.browser = \"Safari\";\r\n                browserInfo.version = RegExp.$1;\r\n            } else if (/Edge[\\/\\s](\\d+\\.\\d+)/.test(userAgent)) {\r\n                browserInfo.browser = \"Microsoft Edge\";\r\n                browserInfo.version = RegExp.$1;\r\n            } else if (/Trident\\/\\d+\\.\\d+/.test(userAgent)) {\r\n                browserInfo.browser = \"Internet Explorer\";\r\n                const versionRegex = /rv:(\\d+\\.\\d+)/;\r\n                if (versionRegex.test(userAgent)) {\r\n                    browserInfo.version = RegExp.$1;\r\n                }\r\n            }\r\n\r\n            // Detect the operating system\r\n            if (/Windows NT (\\d+\\.\\d+)/.test(userAgent)) {\r\n                browserInfo.os = \"Windows \" + RegExp.$1;\r\n            } else if (/Mac OS X (\\d+_\\d+_\\d+)/.test(userAgent)) {\r\n                const version = RegExp.$1.replace(/_/g, \".\");\r\n                browserInfo.os = \"macOS \" + version;\r\n            } else if (/Linux/.test(userAgent)) {\r\n                browserInfo.os = \"Linux\";\r\n            }\r\n\r\n            return browserInfo;\r\n        }\r\n    </script>', '', '', '', '', '', 27, 'publish'),
(25, 2, 'Text to Binary Converter', 'text-to-binary-converter', '<form id=\"textToBinaryForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"textInput\">Enter Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"textInput\" placeholder=\"Enter text\" required>\r\n            </div>\r\n        </form>\r\n\r\n        <!-- Result -->\r\n        <h3>Binary Result:</h3>\r\n        <p id=\"binaryResult\">Binary representation will be displayed here as you type.</p>\r\n\r\n        <!-- Copy Button -->\r\n        <button id=\"copyButton\" class=\"btn btn-primary\">Copy Result</button>', '', ' <script>\r\n        // Function to convert text to binary\r\n        function textToBinary(text) {\r\n            const binaryArray = [];\r\n            for (let i = 0; i < text.length; i++) {\r\n                const binaryChar = text.charCodeAt(i).toString(2).padStart(8, \'0\');\r\n                binaryArray.push(binaryChar);\r\n            }\r\n            return binaryArray.join(\' \');\r\n        }\r\n\r\n        // Function to handle input changes\r\n        function handleInputChange() {\r\n            const textInput = document.getElementById(\'textInput\').value;\r\n            const binaryResult = textToBinary(textInput);\r\n            document.getElementById(\'binaryResult\').textContent = `Binary Result: ${binaryResult}`;\r\n        }\r\n\r\n        // Event listener for input changes\r\n        document.getElementById(\'textInput\').addEventListener(\'input\', handleInputChange);\r\n\r\n        // Event listener for the \"Copy Result\" button\r\n        document.getElementById(\'copyButton\').addEventListener(\'click\', function () {\r\n            const binaryResult = document.getElementById(\'binaryResult\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = binaryResult;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\"Binary result copied to clipboard.\");\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(26, 2, 'Binary to Text Converter', 'binary-to-text-converter', '<form id=\"binaryToTextForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"binaryInput\">Enter Binary:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"binaryInput\" placeholder=\"Enter binary\" required>\r\n            </div>\r\n        </form>\r\n\r\n        <!-- Result -->\r\n        <h3>Text Result:</h3>\r\n        <p id=\"textResult\">Text representation will be displayed here as you type.</p>\r\n\r\n        <!-- Copy Button -->\r\n        <button id=\"copyButton\" class=\"btn btn-primary\">Copy Result</button>', '', '<script>\r\n        // Function to convert binary to text\r\n        function binaryToText(binary) {\r\n            const binaryArray = binary.split(\' \');\r\n            const textArray = binaryArray.map(bin => String.fromCharCode(parseInt(bin, 2)));\r\n            return textArray.join(\'\');\r\n        }\r\n\r\n        // Function to handle input changes\r\n        function handleInputChange() {\r\n            const binaryInput = document.getElementById(\'binaryInput\').value;\r\n            const textResult = binaryToText(binaryInput);\r\n            document.getElementById(\'textResult\').textContent = `Text Result: ${textResult}`;\r\n        }\r\n\r\n        // Event listener for input changes\r\n        document.getElementById(\'binaryInput\').addEventListener(\'input\', handleInputChange);\r\n\r\n        // Event listener for the \"Copy Result\" button\r\n        document.getElementById(\'copyButton\').addEventListener(\'click\', function () {\r\n            const textResult = document.getElementById(\'textResult\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = textResult;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\"Text result copied to clipboard.\");\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(27, 2, 'Binary to Hexadecimal Converter', 'binary-to-hexadecimal-converter', '<form id=\"binaryToHexForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"binaryInput\">Enter Binary:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"binaryInput\" placeholder=\"Enter binary\" required>\r\n            </div>\r\n        </form>\r\n\r\n        <!-- Result -->\r\n        <h3>Hexadecimal Result:</h3>\r\n        <p id=\"hexResult\">Hexadecimal representation will be displayed here as you type.</p>\r\n\r\n        <!-- Copy Button -->\r\n        <button id=\"copyButton\" class=\"btn btn-primary\">Copy Result</button>', '', '<script>\r\n        // Function to convert binary to hexadecimal\r\n        function binaryToHex(binary) {\r\n            const binaryArray = binary.split(\' \');\r\n            const hexArray = binaryArray.map(bin => parseInt(bin, 2).toString(16));\r\n            return hexArray.join(\'\');\r\n        }\r\n\r\n        // Function to handle input changes\r\n        function handleInputChange() {\r\n            const binaryInput = document.getElementById(\'binaryInput\').value;\r\n            const hexResult = binaryToHex(binaryInput);\r\n            document.getElementById(\'hexResult\').textContent = `Hexadecimal Result: ${hexResult}`;\r\n        }\r\n\r\n        // Event listener for input changes\r\n        document.getElementById(\'binaryInput\').addEventListener(\'input\', handleInputChange);\r\n\r\n        // Event listener for the \"Copy Result\" button\r\n        document.getElementById(\'copyButton\').addEventListener(\'click\', function () {\r\n            const hexResult = document.getElementById(\'hexResult\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = hexResult;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\"Hexadecimal result copied to clipboard.\");\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(28, 2, 'Hexadecimal to Binary Converter', 'hexadecimal-to-binary-converter', '<form id=\"hexToBinaryForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"hexInput\">Enter Hexadecimal:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"hexInput\" placeholder=\"Enter hexadecimal\" required>\r\n            </div>\r\n        </form>\r\n\r\n        <!-- Result -->\r\n        <h3>Binary Result:</h3>\r\n        <p id=\"binaryResult\">Binary representation will be displayed here as you type.</p>\r\n\r\n        <!-- Copy Button -->\r\n        <button id=\"copyButton\" class=\"btn btn-primary\">Copy Result</button>', '', '<script>\r\n        // Function to convert hexadecimal to binary\r\n        function hexToBinary(hex) {\r\n            let binaryResult = \'\';\r\n            for (let i = 0; i < hex.length; i++) {\r\n                const digit = parseInt(hex[i], 16).toString(2).padStart(4, \'0\');\r\n                binaryResult += digit + \' \';\r\n            }\r\n            return binaryResult.trim();\r\n        }\r\n\r\n        // Function to handle input changes\r\n        function handleInputChange() {\r\n            const hexInput = document.getElementById(\'hexInput\').value;\r\n            const binaryResult = hexToBinary(hexInput);\r\n            document.getElementById(\'binaryResult\').textContent = `Binary Result: ${binaryResult}`;\r\n        }\r\n\r\n        // Event listener for input changes\r\n        document.getElementById(\'hexInput\').addEventListener(\'input\', handleInputChange);\r\n\r\n        // Event listener for the \"Copy Result\" button\r\n        document.getElementById(\'copyButton\').addEventListener(\'click\', function () {\r\n            const binaryResult = document.getElementById(\'binaryResult\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = binaryResult;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\"Binary result copied to clipboard.\");\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(29, 2, 'Binary to ASCII Converter', 'binary-to-ascii-converter', '<form id=\"binaryToAsciiForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"binaryInput\">Enter Binary:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"binaryInput\" placeholder=\"Enter binary\" required>\r\n            </div>\r\n        </form>\r\n\r\n        <!-- Result -->\r\n        <h3>ASCII Result:</h3>\r\n        <p id=\"asciiResult\">ASCII representation will be displayed here as you type.</p>\r\n\r\n        <!-- Copy Button -->\r\n        <button id=\"copyButton\" class=\"btn btn-primary\">Copy Result</button>', '', '<script>\r\n        // Function to convert binary to ASCII\r\n        function binaryToAscii(binary) {\r\n            const binaryArray = binary.split(\' \');\r\n            const asciiArray = binaryArray.map(bin => String.fromCharCode(parseInt(bin, 2)));\r\n            return asciiArray.join(\'\');\r\n        }\r\n\r\n        // Function to handle input changes\r\n        function handleInputChange() {\r\n            const binaryInput = document.getElementById(\'binaryInput\').value;\r\n            const asciiResult = binaryToAscii(binaryInput);\r\n            document.getElementById(\'asciiResult\').textContent = `ASCII Result: ${asciiResult}`;\r\n        }\r\n\r\n        // Event listener for input changes\r\n        document.getElementById(\'binaryInput\').addEventListener(\'input\', handleInputChange);\r\n\r\n        // Event listener for the \"Copy Result\" button\r\n        document.getElementById(\'copyButton\').addEventListener(\'click\', function () {\r\n            const asciiResult = document.getElementById(\'asciiResult\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = asciiResult;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\"ASCII result copied to clipboard.\");\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(30, 2, 'ASCII to Binary Converter', 'ascii-to-binary-converter', ' <form id=\"asciiToBinaryForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"asciiInput\">Enter ASCII:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"asciiInput\" placeholder=\"Enter ASCII\" required>\r\n            </div>\r\n        </form>\r\n\r\n        <!-- Result -->\r\n        <h3>Binary Result:</h3>\r\n        <p id=\"binaryResult\">Binary representation will be displayed here as you type.</p>\r\n\r\n        <!-- Copy Button -->\r\n        <button id=\"copyButton\" class=\"btn btn-primary\">Copy Result</button>', '', '<script>\r\n        // Function to convert ASCII to binary\r\n        function asciiToBinary(ascii) {\r\n            const binaryArray = [];\r\n            for (let i = 0; i < ascii.length; i++) {\r\n                const binaryChar = ascii.charCodeAt(i).toString(2).padStart(8, \'0\');\r\n                binaryArray.push(binaryChar);\r\n            }\r\n            return binaryArray.join(\' \');\r\n        }\r\n\r\n        // Function to handle input changes\r\n        function handleInputChange() {\r\n            const asciiInput = document.getElementById(\'asciiInput\').value;\r\n            const binaryResult = asciiToBinary(asciiInput);\r\n            document.getElementById(\'binaryResult\').textContent = `Binary Result: ${binaryResult}`;\r\n        }\r\n\r\n        // Event listener for input changes\r\n        document.getElementById(\'asciiInput\').addEventListener(\'input\', handleInputChange);\r\n\r\n        // Event listener for the \"Copy Result\" button\r\n        document.getElementById(\'copyButton\').addEventListener(\'click\', function () {\r\n            const binaryResult = document.getElementById(\'binaryResult\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = binaryResult;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\"Binary result copied to clipboard.\");\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(31, 3, 'Check DNS Lookup', 'check-dns-lookup', '<form id=\"dnsLookupForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"domain\">Enter Domain:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"domain\" placeholder=\"example.com\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">DNS Lookup Result:</label>\r\n                <textarea class=\"form-control\" id=\"result\" rows=\"5\" readonly></textarea>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to perform DNS Lookup\r\n        function performDNSLookup(domain) {\r\n            return new Promise((resolve, reject) => {\r\n                const dns = new DNSResolver();\r\n                dns.resolve(domain, (addresses) => {\r\n                    resolve(addresses.join(\'\\n\'));\r\n                }, (error) => {\r\n                    reject(error);\r\n                });\r\n            });\r\n        }\r\n\r\n        // Listen for input changes in the domain input field\r\n        const domainInput = document.getElementById(\"domain\");\r\n        const resultTextarea = document.getElementById(\"result\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        domainInput.addEventListener(\"input\", async () => {\r\n            const domain = domainInput.value.trim();\r\n            try {\r\n                const dnsResult = await performDNSLookup(domain);\r\n                resultTextarea.value = dnsResult;\r\n            } catch (error) {\r\n                resultTextarea.value = \"Error: \" + error;\r\n            }\r\n        });\r\n\r\n        // Copy result to clipboard when the \"Copy Result\" button is clicked\r\n        copyButton.addEventListener(\"click\", () => {\r\n            resultTextarea.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Result copied to clipboard!\");\r\n        });\r\n\r\n        // Custom DNS Resolver function\r\n        function DNSResolver() {\r\n            this.resolve = function (domain, resolveCallback, errorCallback) {\r\n                const dns = new DNSLookup();\r\n                dns.lookup(domain, resolveCallback, errorCallback);\r\n            };\r\n        }\r\n\r\n        // Example DNS Lookup implementation (for demonstration purposes)\r\n        function DNSLookup() {\r\n            this.lookup = function (domain, resolveCallback, errorCallback) {\r\n                // Simulate a DNS lookup for demonstration\r\n                setTimeout(() => {\r\n                    const addresses = [\"192.168.1.1\", \"192.168.1.2\"];\r\n                    resolveCallback(addresses);\r\n                }, 1000);\r\n            };\r\n        }\r\n    </script>', '', '', '', '', '', 22, 'publish'),
(32, 3, 'Check IP Lookup', 'check-ip-lookup', ' <form id=\"urlForm\">\n      <div class=\"form-group\">\n        <label for=\"urlInput\">Enter URL:</label>\n        <input type=\"text\" class=\"form-control\" id=\"urlInput\" placeholder=\"example.com\">\n      </div>\n        <button type=\"submit\" btn btn-primary>Lookup</button>\n    </form>\n    <div id=\"result\"></div>', '', '<script>\r\n        // Function to perform IP Lookup\r\n        function performIPLookup(ipAddress) {\r\n            return new Promise((resolve, reject) => {\r\n                // Replace this with your actual IP lookup code\r\n                // For demonstration purposes, we simulate a lookup here\r\n                const result = `IP Address: ${ipAddress}\\nLocation: New York, USA\\nISP: XYZ ISP`;\r\n                resolve(result);\r\n            });\r\n        }\r\n\r\n        // Listen for input changes in the IP address input field\r\n        const ipAddressInput = document.getElementById(\"ipAddress\");\r\n        const resultTextarea = document.getElementById(\"result\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        ipAddressInput.addEventListener(\"input\", async () => {\r\n            const ipAddress = ipAddressInput.value.trim();\r\n            try {\r\n                const ipResult = await performIPLookup(ipAddress);\r\n                resultTextarea.value = ipResult;\r\n            } catch (error) {\r\n                resultTextarea.value = \"Error: \" + error;\r\n            }\r\n        });\r\n\r\n        // Copy result to clipboard when the \"Copy Result\" button is clicked\r\n        copyButton.addEventListener(\"click\", () => {\r\n            resultTextarea.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Result copied to clipboard!\");\r\n        });\r\n    </script>', '', '', '', '', '', 20, 'publish'),
(33, 4, 'Reverse IP Lookup', 'reverse-ip-lookup', '<form id=\"reverseIpLookupForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"ipAddress\">Enter IP Address:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"ipAddress\" placeholder=\"192.168.1.1\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Reverse IP Lookup Result:</label>\r\n                <textarea class=\"form-control\" id=\"result\" rows=\"5\" readonly></textarea>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to perform Reverse IP Lookup on the server side\r\n        async function performReverseIPLookup(ipAddress) {\r\n            try {\r\n                const response = await fetch(`/reverse_ip_lookup.php?ip=${ipAddress}`);\r\n                if (!response.ok) {\r\n                    throw new Error(\'Network response was not ok\');\r\n                }\r\n                const result = await response.text();\r\n                return result;\r\n            } catch (error) {\r\n                return `Error: ${error}`;\r\n            }\r\n        }\r\n\r\n        // Listen for input changes in the IP address input field\r\n        const ipAddressInput = document.getElementById(\"ipAddress\");\r\n        const resultTextarea = document.getElementById(\"result\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        ipAddressInput.addEventListener(\"input\", async () => {\r\n            const ipAddress = ipAddressInput.value.trim();\r\n            if (ipAddress !== \"\") {\r\n                const reverseIpResult = await performReverseIPLookup(ipAddress);\r\n                resultTextarea.value = reverseIpResult;\r\n            } else {\r\n                resultTextarea.value = \"\";\r\n            }\r\n        });\r\n\r\n        // Copy result to clipboard when the \"Copy Result\" button is clicked\r\n        copyButton.addEventListener(\"click\", () => {\r\n            resultTextarea.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Result copied to clipboard!\");\r\n        });\r\n    </script>', ' <?php\r\n    // Check if the IP address parameter is provided\r\n    if (isset($_GET[\'ip\'])) {\r\n        // Get the IP address from the query parameter\r\n        $ip = $_GET[\'ip\'];\r\n\r\n        // Perform reverse IP lookup using gethostbyaddr function\r\n        $hostname = gethostbyaddr($ip);\r\n\r\n        // Display the result using PHP\r\n        echo \"<script>document.getElementById(\'result\').value = \'{$hostname}\';</script>\";\r\n    }\r\n    ?>', '', '', '', '', 85, 'publish'),
(34, 4, 'Check WHOIS Lookup', 'check-whois-lookup', '  <form id=\"urlForm\">\n      <div class=\"form-group\">\n        <label for=\"urlInput\">Enter URL:</label>\n        <input type=\"text\" class=\"form-control\" id=\"urlInput\" placeholder=\"example.com\">\n      </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Lookup</button>\n    </form>\n    <div id=\"result\"></div>', '', '<script>\n        document.getElementById(\'urlForm\').addEventListener(\'submit\', function (e) {\n            e.preventDefault();\n            \n            var url = document.getElementById(\'urlInput\').value;\n            var apiKey = \'6er1pkZxoD8gphygFdvtoA==vAlCU47oRL3UfvDY\';\n\n            // Make the AJAX request\n            var xhr = new XMLHttpRequest();\n            xhr.open(\'GET\', \'https://api.api-ninjas.com/v1/urllookup?url=\' + url);\n            xhr.setRequestHeader(\'X-Api-Key\', apiKey);\n            xhr.setRequestHeader(\'Content-Type\', \'application/json\');\n            \n            xhr.onload = function () {\n                if (xhr.status === 200) {\n                    var result = JSON.parse(xhr.responseText);\n                    displayResult(result);\n                } else {\n                    console.error(\'Error: \' + xhr.status + \' - \' + xhr.statusText);\n                }\n            };\n            \n            xhr.onerror = function () {\n                console.error(\'Network error\');\n            };\n            \n            xhr.send();\n        });\n\n        function displayResult(result) {\n            var resultDiv = document.getElementById(\'result\');\n            resultDiv.innerHTML = \'\';\n\n            if (result.is_valid) {\n                var table = document.createElement(\'table\');\n                for (var key in result) {\n                    var row = document.createElement(\'tr\');\n                    var cell1 = document.createElement(\'td\');\n                    var cell2 = document.createElement(\'td\');\n                    cell1.textContent = key;\n                    cell2.textContent = result[key];\n                    row.appendChild(cell1);\n                    row.appendChild(cell2);\n                    table.appendChild(row);\n                }\n                resultDiv.appendChild(table);\n            } else {\n                resultDiv.textContent = \'Invalid URL\';\n            }\n        }\n    </script>', '', '', '', '', '', 165, 'publish'),
(35, 3, 'Text Separator', 'text-separator', '<form id=\"separatorForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"inputText\">Enter Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputText\" placeholder=\"Enter text to separate\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"separator\">Separate By:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"separator\" placeholder=\"Enter separator (e.g., ,)\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Result:</label>\r\n                <textarea class=\"form-control\" id=\"result\" rows=\"5\" readonly></textarea>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to separate text based on the provided separator\r\n        function separateText() {\r\n            const inputText = document.getElementById(\"inputText\").value;\r\n            const separator = document.getElementById(\"separator\").value;\r\n            \r\n            // Use the JavaScript split method to separate the text\r\n            const separatedText = inputText.split(separator);\r\n\r\n            // Update the result textarea with the separated text\r\n            document.getElementById(\"result\").value = separatedText.join(\'\\n\');\r\n        }\r\n\r\n        // Listen for input changes in the text input fields\r\n        const inputText = document.getElementById(\"inputText\");\r\n        const separator = document.getElementById(\"separator\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        inputText.addEventListener(\"input\", separateText);\r\n        separator.addEventListener(\"input\", separateText);\r\n\r\n        // Copy result to clipboard when the \"Copy Result\" button is clicked\r\n        copyButton.addEventListener(\"click\", () => {\r\n            document.getElementById(\"result\").select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Result copied to clipboard!\");\r\n        });\r\n    </script>', '', '', '', '', '', 21, 'publish'),
(36, 3, 'Email Extractor', 'email-extractor', ' <form id=\"emailExtractorForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"inputText\">Enter Text:</label>\r\n                <textarea class=\"form-control\" id=\"inputText\" rows=\"5\" placeholder=\"Enter text to extract emails\"></textarea>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Extracted Emails:</label>\r\n                <textarea class=\"form-control\" id=\"result\" rows=\"5\" readonly></textarea>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to extract email addresses from text\r\n        function extractEmails(text) {\r\n            const emailRegex = /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\b/g;\r\n            return text.match(emailRegex) || [];\r\n        }\r\n\r\n        // Function to update the extracted emails result\r\n        function updateResult() {\r\n            const inputText = document.getElementById(\"inputText\").value;\r\n            const extractedEmails = extractEmails(inputText);\r\n            const resultTextarea = document.getElementById(\"result\");\r\n            resultTextarea.value = extractedEmails.join(\'\\n\');\r\n        }\r\n\r\n        // Listen for input changes in the text input field\r\n        const inputText = document.getElementById(\"inputText\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        inputText.addEventListener(\"input\", updateResult);\r\n\r\n        // Copy result to clipboard when the \"Copy Result\" button is clicked\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultTextarea = document.getElementById(\"result\");\r\n            resultTextarea.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Extracted emails copied to clipboard!\");\r\n        });\r\n    </script>', '', '', '', '', '', 21, 'publish'),
(37, 3, 'URL Extractor', 'url-extractor', '<form id=\"urlExtractorForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"inputText\">Enter Text:</label>\r\n                <textarea class=\"form-control\" id=\"inputText\" rows=\"5\" placeholder=\"Enter text to extract URLs\"></textarea>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Extracted URLs:</label>\r\n                <textarea class=\"form-control\" id=\"result\" rows=\"5\" readonly></textarea>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to extract URLs from text\r\n        function extractURLs(text) {\r\n            const urlRegex = /https?:\\/\\/[^\\s/$.?#].[^\\s]*/g;\r\n            return text.match(urlRegex) || [];\r\n        }\r\n\r\n        // Function to update the extracted URLs result\r\n        function updateResult() {\r\n            const inputText = document.getElementById(\"inputText\").value;\r\n            const extractedURLs = extractURLs(inputText);\r\n            const resultTextarea = document.getElementById(\"result\");\r\n            resultTextarea.value = extractedURLs.join(\'\\n\');\r\n        }\r\n\r\n        // Listen for input changes in the text input field\r\n        const inputText = document.getElementById(\"inputText\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        inputText.addEventListener(\"input\", updateResult);\r\n\r\n        // Copy result to clipboard when the \"Copy Result\" button is clicked\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultTextarea = document.getElementById(\"result\");\r\n            resultTextarea.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Extracted URLs copied to clipboard!\");\r\n        });\r\n    </script>', '', '', '', '', '', 18, 'publish'),
(38, 3, 'Duplicate Lines Remover', 'duplicate-lines-remover', '<form id=\"duplicateRemoverForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"inputText\">Enter Text:</label>\r\n                <textarea class=\"form-control\" id=\"inputText\" rows=\"5\" placeholder=\"Enter text with duplicate lines\"></textarea>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Result (Duplicates Removed):</label>\r\n                <textarea class=\"form-control\" id=\"result\" rows=\"5\" readonly></textarea>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to remove duplicate lines from text\r\n        function removeDuplicates(text) {\r\n            const lines = text.split(\'\\n\');\r\n            const uniqueLines = Array.from(new Set(lines));\r\n            return uniqueLines.join(\'\\n\');\r\n        }\r\n\r\n        // Function to update the result by removing duplicate lines\r\n        function updateResult() {\r\n            const inputText = document.getElementById(\"inputText\").value;\r\n            const deduplicatedText = removeDuplicates(inputText);\r\n            const resultTextarea = document.getElementById(\"result\");\r\n            resultTextarea.value = deduplicatedText;\r\n        }\r\n\r\n        // Listen for input changes in the text input field\r\n        const inputText = document.getElementById(\"inputText\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        inputText.addEventListener(\"input\", updateResult);\r\n\r\n        // Copy result to clipboard when the \"Copy Result\" button is clicked\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultTextarea = document.getElementById(\"result\");\r\n            resultTextarea.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Deduplicated text copied to clipboard!\");\r\n        });\r\n    </script>', '', '', '', '', '', 17, 'publish'),
(39, 3, 'Character Counter', 'character-counter', '<form id=\"characterCounterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"inputText\">Enter Text:</label>\r\n                <textarea class=\"form-control\" id=\"inputText\" rows=\"5\" placeholder=\"Enter text to count characters\"></textarea>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"charCount\">Character Count:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"charCount\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Character Count</button>', '', '<script>\r\n        // Function to count characters in the input text\r\n        function countCharacters() {\r\n            const inputText = document.getElementById(\"inputText\").value;\r\n            const charCount = inputText.length;\r\n            document.getElementById(\"charCount\").value = charCount;\r\n        }\r\n\r\n        // Listen for input changes in the text input field\r\n        const inputText = document.getElementById(\"inputText\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        inputText.addEventListener(\"input\", countCharacters);\r\n\r\n        // Copy character count to clipboard when the \"Copy Character Count\" button is clicked\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const charCount = document.getElementById(\"charCount\");\r\n            charCount.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Character count copied to clipboard!\");\r\n        });\r\n    </script>', '', '', '', '', '', 22, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(40, 2, 'List Randomizer', 'list-randomizer', '<form id=\"listRandomizerForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"inputList\">Enter List (One item per line):</label>\r\n                <textarea class=\"form-control\" id=\"inputList\" rows=\"5\" placeholder=\"Enter list items\"></textarea>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Randomized List:</label>\r\n                <textarea class=\"form-control\" id=\"result\" rows=\"5\" readonly></textarea>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"randomizeButton\">Randomize List</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '    // Function to randomize a list of items\r\n        function randomizeList() {\r\n            const inputList = document.getElementById(\"inputList\").value;\r\n            const items = inputList.split(\'\\n\').filter(item => item.trim() !== \'\');\r\n            const randomizedItems = [...items].sort(() => Math.random() - 0.5);\r\n            document.getElementById(\"result\").value = randomizedItems.join(\'\\n\');\r\n        }\r\n\r\n        // Listen for input changes in the text input field\r\n        const inputList = document.getElementById(\"inputList\");\r\n        const randomizeButton = document.getElementById(\"randomizeButton\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        inputList.addEventListener(\"input\", randomizeList);\r\n\r\n        // Randomize list and copy result to clipboard when the \"Randomize List\" button is clicked\r\n        randomizeButton.addEventListener(\"click\", () => {\r\n            randomizeList();\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultTextarea = document.getElementById(\"result\");\r\n            resultTextarea.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Randomized list copied to clipboard!\");\r\n        });\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(41, 2, 'Word Reverser', 'word-reverser', '<form id=\"wordReverserForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"inputText\">Enter Text:</label>\r\n                <textarea class=\"form-control\" id=\"inputText\" rows=\"5\" placeholder=\"Enter text to reverse words\"></textarea>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Reversed Text:</label>\r\n                <textarea class=\"form-control\" id=\"result\" rows=\"5\" readonly></textarea>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"reverseButton\">Reverse Words</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to reverse the words in a text\r\n        function reverseWords(text) {\r\n            const words = text.split(/\\s+/);\r\n            const reversedWords = words.map(word => word.split(\'\').reverse().join(\'\'));\r\n            return reversedWords.join(\' \');\r\n        }\r\n\r\n        // Function to update the result by reversing words\r\n        function updateResult() {\r\n            const inputText = document.getElementById(\"inputText\").value;\r\n            const reversedText = reverseWords(inputText);\r\n            document.getElementById(\"result\").value = reversedText;\r\n        }\r\n\r\n        // Listen for input changes in the text input field\r\n        const inputText = document.getElementById(\"inputText\");\r\n        const reverseButton = document.getElementById(\"reverseButton\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        inputText.addEventListener(\"input\", updateResult);\r\n\r\n        // Reverse words and copy result to clipboard when the \"Reverse Words\" button is clicked\r\n        reverseButton.addEventListener(\"click\", () => {\r\n            updateResult();\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultTextarea = document.getElementById(\"result\");\r\n            resultTextarea.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Reversed text copied to clipboard!\");\r\n        });\r\n    </script>', '', '', '', '', '', 12, 'publish'),
(42, 3, 'Emoji Remover', 'emoji-remover', '  <form id=\"emojiRemoverForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"inputText\">Enter Text:</label>\r\n                <textarea class=\"form-control\" id=\"inputText\" rows=\"5\" placeholder=\"Enter text with emojis\"></textarea>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Text with Emojis Removed:</label>\r\n                <textarea class=\"form-control\" id=\"result\" rows=\"5\" readonly></textarea>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"removeButton\">Remove Emojis</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to remove emojis from text\r\n        function removeEmojis(text) {\r\n            return text.replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, \'\');\r\n        }\r\n\r\n        // Function to update the result by removing emojis\r\n        function updateResult() {\r\n            const inputText = document.getElementById(\"inputText\").value;\r\n            const textWithoutEmojis = removeEmojis(inputText);\r\n            document.getElementById(\"result\").value = textWithoutEmojis;\r\n        }\r\n\r\n        // Listen for input changes in the text input field\r\n        const inputText = document.getElementById(\"inputText\");\r\n        const removeButton = document.getElementById(\"removeButton\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        inputText.addEventListener(\"input\", updateResult);\r\n\r\n        // Remove emojis and copy result to clipboard when the \"Remove Emojis\" button is clicked\r\n        removeButton.addEventListener(\"click\", () => {\r\n            updateResult();\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultTextarea = document.getElementById(\"result\");\r\n            resultTextarea.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Text with emojis removed copied to clipboard!\");\r\n        });\r\n    </script>', '', '', '', '', '', 28, 'publish'),
(43, 2, 'List Reverser', 'list-reverser', '<form id=\"listReverserForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"inputList\">Enter List (One item per line):</label>\r\n                <textarea class=\"form-control\" id=\"inputList\" rows=\"5\" placeholder=\"Enter list items\"></textarea>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Reversed List:</label>\r\n                <textarea class=\"form-control\" id=\"result\" rows=\"5\" readonly></textarea>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"reverseButton\">Reverse List</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to reverse a list of items\r\n        function reverseList() {\r\n            const inputList = document.getElementById(\"inputList\").value;\r\n            const items = inputList.split(\'\\n\').filter(item => item.trim() !== \'\');\r\n            const reversedItems = items.reverse();\r\n            document.getElementById(\"result\").value = reversedItems.join(\'\\n\');\r\n        }\r\n\r\n        // Function to update the result by reversing the list\r\n        function updateResult() {\r\n            const inputList = document.getElementById(\"inputList\").value;\r\n            const reversedItems = inputList.split(\'\\n\').filter(item => item.trim() !== \'\').reverse();\r\n            document.getElementById(\"result\").value = reversedItems.join(\'\\n\');\r\n        }\r\n\r\n        // Listen for input changes in the text input field\r\n        const inputList = document.getElementById(\"inputList\");\r\n        const reverseButton = document.getElementById(\"reverseButton\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        inputList.addEventListener(\"input\", updateResult);\r\n\r\n        // Reverse list and copy result to clipboard when the \"Reverse List\" button is clicked\r\n        reverseButton.addEventListener(\"click\", () => {\r\n            reverseList();\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultTextarea = document.getElementById(\"result\");\r\n            resultTextarea.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Reversed list copied to clipboard!\");\r\n        });\r\n    </script>', '', '', '', '', '', 13, 'publish'),
(44, 2, 'List Alphabetizer', 'list-alphabetizer', ' <form id=\"listAlphabetizerForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"inputList\">Enter List (One item per line):</label>\r\n                <textarea class=\"form-control\" id=\"inputList\" rows=\"5\" placeholder=\"Enter list items\"></textarea>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Alphabetized List:</label>\r\n                <textarea class=\"form-control\" id=\"result\" rows=\"5\" readonly></textarea>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"alphabetizeButton\">Alphabetize List</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to alphabetize a list of items\r\n        function alphabetizeList() {\r\n            const inputList = document.getElementById(\"inputList\").value;\r\n            const items = inputList.split(\'\\n\').filter(item => item.trim() !== \'\');\r\n            const alphabetizedItems = items.sort((a, b) => a.localeCompare(b));\r\n            document.getElementById(\"result\").value = alphabetizedItems.join(\'\\n\');\r\n        }\r\n\r\n        // Function to update the result by alphabetizing the list\r\n        function updateResult() {\r\n            const inputList = document.getElementById(\"inputList\").value;\r\n            const alphabetizedItems = inputList.split(\'\\n\').filter(item => item.trim() !== \'\').sort((a, b) => a.localeCompare(b));\r\n            document.getElementById(\"result\").value = alphabetizedItems.join(\'\\n\');\r\n        }\r\n\r\n        // Listen for input changes in the text input field\r\n        const inputList = document.getElementById(\"inputList\");\r\n        const alphabetizeButton = document.getElementById(\"alphabetizeButton\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        inputList.addEventListener(\"input\", updateResult);\r\n\r\n        // Alphabetize list and copy result to clipboard when the \"Alphabetize List\" button is clicked\r\n        alphabetizeButton.addEventListener(\"click\", () => {\r\n            alphabetizeList();\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultTextarea = document.getElementById(\"result\");\r\n            resultTextarea.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Alphabetized list copied to clipboard!\");\r\n        });\r\n    </script>', '', '', '', '', '', 13, 'publish'),
(45, 3, 'Palindrome Checker', 'palindrome-checker', '<form id=\"palindromeCheckerForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"inputText\">Enter Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputText\" placeholder=\"Enter text to check for palindrome\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Result:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"result\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"checkButton\">Check Palindrome</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to check if a string is a palindrome\r\n        function isPalindrome(text) {\r\n            const cleanText = text.toLowerCase().replace(/[^a-z0-9]/g, \'\');\r\n            const reversedText = cleanText.split(\'\').reverse().join(\'\');\r\n            return cleanText === reversedText;\r\n        }\r\n\r\n        // Function to update the result by checking if it\'s a palindrome\r\n        function updateResult() {\r\n            const inputText = document.getElementById(\"inputText\").value;\r\n            const isPalin = isPalindrome(inputText);\r\n            document.getElementById(\"result\").value = isPalin ? \"Yes, it\'s a palindrome\" : \"No, it\'s not a palindrome\";\r\n        }\r\n\r\n        // Listen for input changes in the text input field\r\n        const inputText = document.getElementById(\"inputText\");\r\n        const checkButton = document.getElementById(\"checkButton\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        inputText.addEventListener(\"input\", updateResult);\r\n\r\n        // Check if it\'s a palindrome and copy result to clipboard when the \"Check Palindrome\" button is clicked\r\n        checkButton.addEventListener(\"click\", () => {\r\n            updateResult();\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultInput = document.getElementById(\"result\");\r\n            resultInput.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Result copied to clipboard!\");\r\n        });\r\n    </script>', '', '', '', '', '', 45, 'publish'),
(46, 2, 'Base64 Encoder', 'base64-encoder', '<form id=\"base64EncoderForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"inputText\">Enter Text:</label>\r\n                <textarea class=\"form-control\" id=\"inputText\" rows=\"5\" placeholder=\"Enter text to encode in Base64\"></textarea>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Encoded Text (Base64):</label>\r\n                <textarea class=\"form-control\" id=\"result\" rows=\"5\" readonly></textarea>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"encodeButton\">Encode to Base64</button>', '', '<script>\r\n        // Function to encode text to Base64\r\n        function encodeToBase64(text) {\r\n            return btoa(text);\r\n        }\r\n\r\n        // Function to update the result by encoding to Base64\r\n        function updateResult() {\r\n            const inputText = document.getElementById(\"inputText\").value;\r\n            const encodedText = encodeToBase64(inputText);\r\n            document.getElementById(\"result\").value = encodedText;\r\n        }\r\n\r\n        // Listen for input changes in the text input field\r\n        const inputText = document.getElementById(\"inputText\");\r\n        const encodeButton = document.getElementById(\"encodeButton\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        inputText.addEventListener(\"input\", updateResult);\r\n\r\n        // Encode to Base64 and copy result to clipboard when the \"Encode to Base64\" button is clicked\r\n        encodeButton.addEventListener(\"click\", () => {\r\n            updateResult();\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultTextarea = document.getElementById(\"result\");\r\n            resultTextarea.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Encoded text copied to clipboard!\");\r\n        });\r\n    </script>', '', '', '', '', '', 15, 'publish'),
(47, 2, 'Base64 Decoder', 'base64-decoder', '<form id=\"base64Form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"base64Input\">Enter a Base64 String:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"base64Input\" placeholder=\"Enter Base64 String\">\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-primary\" id=\"decodeButton\">Decode</button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" id=\"copyButton\">Copy Result</button>\r\n        </form>\r\n        <h2>Decoded Result:</h2>\r\n        <p id=\"decodedResult\"></p>', '', '<script>\r\n        document.addEventListener(\"DOMContentLoaded\", function() {\r\n            const base64Input = document.getElementById(\"base64Input\");\r\n            const decodeButton = document.getElementById(\"decodeButton\");\r\n            const copyButton = document.getElementById(\"copyButton\");\r\n            const decodedResult = document.getElementById(\"decodedResult\");\r\n\r\n            decodeButton.addEventListener(\"click\", function() {\r\n                const base64String = base64Input.value;\r\n                try {\r\n                    const decodedText = atob(base64String);\r\n                    decodedResult.textContent = decodedText;\r\n                } catch (error) {\r\n                    decodedResult.textContent = \"Invalid Base64 String\";\r\n                }\r\n            });\r\n\r\n            copyButton.addEventListener(\"click\", function() {\r\n                const resultText = decodedResult.textContent;\r\n                const textarea = document.createElement(\"textarea\");\r\n                textarea.value = resultText;\r\n                document.body.appendChild(textarea);\r\n                textarea.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(textarea);\r\n                alert(\"Result copied to clipboard\");\r\n            });\r\n\r\n            base64Input.addEventListener(\"input\", function() {\r\n                decodedResult.textContent = \"\";\r\n            });\r\n        });\r\n    </script>\r\n', '', '', '', '', '', 13, 'publish'),
(48, 2, 'Base64 to Image Converter', 'base64-to-image-converter', '<form id=\"base64Form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"base64Input\">Enter a Base64 Image:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"base64Input\" placeholder=\"Enter Base64 Image\">\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-primary\" id=\"convertButton\">Convert</button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" id=\"copyButton\">Copy Result</button>\r\n        </form>\r\n        <h2>Converted Image:</h2>\r\n        <img id=\"convertedImage\" alt=\"Converted Image\" style=\"max-width: 100%;\">\r\n\r\n        <!-- Hidden textarea to copy the result -->\r\n        <textarea id=\"hiddenTextarea\" style=\"position: absolute; left: -9999px;\"></textarea>', '', '<script>\r\n        document.addEventListener(\"DOMContentLoaded\", function() {\r\n            const base64Input = document.getElementById(\"base64Input\");\r\n            const convertButton = document.getElementById(\"convertButton\");\r\n            const copyButton = document.getElementById(\"copyButton\");\r\n            const convertedImage = document.getElementById(\"convertedImage\");\r\n            const hiddenTextarea = document.getElementById(\"hiddenTextarea\");\r\n\r\n            convertButton.addEventListener(\"click\", function() {\r\n                const base64String = base64Input.value;\r\n                if (base64String.startsWith(\"data:image\")) {\r\n                    convertedImage.src = base64String;\r\n                    window.open(base64String);\r\n                } else {\r\n                    alert(\"Invalid Base64 Image\");\r\n                }\r\n            });\r\n\r\n            copyButton.addEventListener(\"click\", function() {\r\n                const resultText = base64Input.value;\r\n                hiddenTextarea.value = resultText;\r\n                hiddenTextarea.select();\r\n                document.execCommand(\"copy\");\r\n                alert(\"Result copied to clipboard\");\r\n            });\r\n\r\n            base64Input.addEventListener(\"input\", function() {\r\n                convertedImage.src = \"\";\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(49, 2, 'Image to Base64 Converter', 'image-to-base64-converter', '<form id=\"imageToBase64Form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"imageInput\">Choose an Image:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"imageInput\">\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-primary\" id=\"convertButton\">Convert</button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" id=\"copyButton\">Copy Result</button>\r\n        </form>\r\n        <h2>Base64 Result:</h2>\r\n        <p id=\"base64Result\"></p>\r\n\r\n        <!-- Hidden textarea to copy the result -->\r\n        <textarea id=\"hiddenTextarea\" style=\"position: absolute; left: -9999px;\"></textarea>', '', '<script>\r\n        document.addEventListener(\"DOMContentLoaded\", function() {\r\n            const imageInput = document.getElementById(\"imageInput\");\r\n            const convertButton = document.getElementById(\"convertButton\");\r\n            const copyButton = document.getElementById(\"copyButton\");\r\n            const base64Result = document.getElementById(\"base64Result\");\r\n            const hiddenTextarea = document.getElementById(\"hiddenTextarea\");\r\n\r\n            convertButton.addEventListener(\"click\", function() {\r\n                const file = imageInput.files[0];\r\n                if (file) {\r\n                    const reader = new FileReader();\r\n                    reader.onload = function(event) {\r\n                        const base64String = event.target.result;\r\n                        base64Result.textContent = base64String;\r\n                        window.open(base64String);\r\n                    };\r\n                    reader.readAsDataURL(file);\r\n                } else {\r\n                    alert(\"Please select an image file.\");\r\n                }\r\n            });\r\n\r\n            copyButton.addEventListener(\"click\", function() {\r\n                const resultText = base64Result.textContent;\r\n                hiddenTextarea.value = resultText;\r\n                hiddenTextarea.select();\r\n                document.execCommand(\"copy\");\r\n                alert(\"Result copied to clipboard\");\r\n            });\r\n\r\n            imageInput.addEventListener(\"input\", function() {\r\n                base64Result.textContent = \"\";\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(50, 2, 'URL Encoder', 'url-encoder', '<form id=\"urlEncodeForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"urlInput\">Enter a URL:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"urlInput\" placeholder=\"Enter URL\">\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-primary\" id=\"encodeButton\">Encode</button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" id=\"copyButton\">Copy Result</button>\r\n        </form>\r\n        <h2>Encoded URL:</h2>\r\n        <p id=\"encodedURL\"></p>\r\n\r\n        <!-- Hidden textarea to copy the result -->\r\n        <textarea id=\"hiddenTextarea\" style=\"position: absolute; left: -9999px;\"></textarea>', '', '<script>\r\n        document.addEventListener(\"DOMContentLoaded\", function() {\r\n            const urlInput = document.getElementById(\"urlInput\");\r\n            const encodeButton = document.getElementById(\"encodeButton\");\r\n            const copyButton = document.getElementById(\"copyButton\");\r\n            const encodedURL = document.getElementById(\"encodedURL\");\r\n            const hiddenTextarea = document.getElementById(\"hiddenTextarea\");\r\n\r\n            encodeButton.addEventListener(\"click\", function() {\r\n                const url = urlInput.value;\r\n                const encodedUrl = encodeURI(url);\r\n                encodedURL.textContent = encodedUrl;\r\n            });\r\n\r\n            copyButton.addEventListener(\"click\", function() {\r\n                const resultText = encodedURL.textContent;\r\n                hiddenTextarea.value = resultText;\r\n                hiddenTextarea.select();\r\n                document.execCommand(\"copy\");\r\n                alert(\"Result copied to clipboard\");\r\n            });\r\n\r\n            urlInput.addEventListener(\"input\", function() {\r\n                encodedURL.textContent = \"\";\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 15, 'publish'),
(51, 2, 'URL Decoder', 'url-decoder', ' <form id=\"urlDecodeForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"urlInput\">Enter a URL-encoded String:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"urlInput\" placeholder=\"Enter URL-encoded String\">\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-primary\" id=\"decodeButton\">Decode</button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" id=\"copyButton\">Copy Result</button>\r\n        </form>\r\n        <h2>Decoded URL:</h2>\r\n        <p id=\"decodedURL\"></p>\r\n\r\n        <!-- Hidden textarea to copy the result -->\r\n        <textarea id=\"hiddenTextarea\" style=\"position: absolute; left: -9999px;\"></textarea>', '', ' <script>\r\n        document.addEventListener(\"DOMContentLoaded\", function() {\r\n            const urlInput = document.getElementById(\"urlInput\");\r\n            const decodeButton = document.getElementById(\"decodeButton\");\r\n            const copyButton = document.getElementById(\"copyButton\");\r\n            const decodedURL = document.getElementById(\"decodedURL\");\r\n            const hiddenTextarea = document.getElementById(\"hiddenTextarea\");\r\n\r\n            decodeButton.addEventListener(\"click\", function() {\r\n                const encodedString = urlInput.value;\r\n                const decodedString = decodeURIComponent(encodedString);\r\n                decodedURL.textContent = decodedString;\r\n                window.open(decodedString);\r\n            });\r\n\r\n            copyButton.addEventListener(\"click\", function() {\r\n                const resultText = decodedURL.textContent;\r\n                hiddenTextarea.value = resultText;\r\n                hiddenTextarea.select();\r\n                document.execCommand(\"copy\");\r\n                alert(\"Result copied to clipboard\");\r\n            });\r\n\r\n            urlInput.addEventListener(\"input\", function() {\r\n                decodedURL.textContent = \"\";\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 11, 'publish'),
(52, 2, 'Morse Converter', 'morse-converter', '<form>\r\n      <div class=\"form-group\">\r\n        <label for=\"text\">Enter Text:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"text\" placeholder=\"Enter text...\">\r\n      </div>\r\n    </form>\r\n    <h2>Result:</h2>\r\n    <p id=\"result\"></p>\r\n    <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n    const morseCode = {\r\n      \'A\': \'.-\', \'B\': \'-...\', \'C\': \'-.-.\', \'D\': \'-..\', \'E\': \'.\', \'F\': \'..-.\', \'G\': \'--.\', \'H\': \'....\', \'I\': \'..\', \'J\': \'.---\',\r\n      \'K\': \'-.-\', \'L\': \'.-..\', \'M\': \'--\', \'N\': \'-.\', \'O\': \'---\', \'P\': \'.--.\', \'Q\': \'--.-\', \'R\': \'.-.\', \'S\': \'...\', \'T\': \'-\',\r\n      \'U\': \'..-\', \'V\': \'...-\', \'W\': \'.--\', \'X\': \'-..-\', \'Y\': \'-.--\', \'Z\': \'--..\',\r\n      \'0\': \'-----\', \'1\': \'.----\', \'2\': \'..---\', \'3\': \'...--\', \'4\': \'....-\', \'5\': \'.....\', \'6\': \'-....\', \'7\': \'--...\', \'8\': \'---..\', \'9\': \'----.\',\r\n      \' \': \'/\'\r\n    };\r\n\r\n    const textInput = document.getElementById(\'text\');\r\n    const resultElement = document.getElementById(\'result\');\r\n    const copyButton = document.getElementById(\'copyButton\');\r\n\r\n    function convertToMorse(text) {\r\n      return text.toUpperCase().split(\'\').map(char => morseCode[char] || char).join(\' \');\r\n    }\r\n\r\n    textInput.addEventListener(\'input\', () => {\r\n      const inputText = textInput.value;\r\n      const morseText = convertToMorse(inputText);\r\n      resultElement.innerText = morseText;\r\n    });\r\n\r\n    copyButton.addEventListener(\'click\', () => {\r\n      const morseText = resultElement.innerText;\r\n      navigator.clipboard.writeText(morseText).then(() => {\r\n        alert(\'Result copied to clipboard\');\r\n      }).catch(err => {\r\n        console.error(\'Unable to copy to clipboard: \', err);\r\n      });\r\n    });\r\n  </script>', '', '', '', '', '', 14, 'publish'),
(53, 1, 'Paypal Link Generator', 'paypal-link-generator', '<form>\r\n      <div class=\"form-group\">\r\n        <label for=\"type\">Payment Type:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"type\" placeholder=\"Type (e.g., buy, donate, subscribe)\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">PayPal Email:</label>\r\n        <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Your PayPal Email\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"title\">Item Title:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"title\" placeholder=\"Item Title\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"price\">Price:</label>\r\n        <input type=\"number\" class=\"form-control\" id=\"price\" placeholder=\"Price\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"currency\">Currency Code:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"currency\" placeholder=\"Currency Code (e.g., USD)\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"thankyou\">Thank You URL:</label>\r\n        <input type=\"url\" class=\"form-control\" id=\"thankyou\" placeholder=\"Thank You URL\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"cancel\">Cancel URL:</label>\r\n        <input type=\"url\" class=\"form-control\" id=\"cancel\" placeholder=\"Cancel URL\">\r\n      </div>\r\n    </form>\r\n    <h2>Result:</h2>\r\n    <p id=\"result\"></p>\r\n    <button class=\"btn btn-primary\" id=\"generateButton\">Generate PayPal Link</button>\r\n    <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n    const typeInput = document.getElementById(\'type\');\r\n    const emailInput = document.getElementById(\'email\');\r\n    const titleInput = document.getElementById(\'title\');\r\n    const priceInput = document.getElementById(\'price\');\r\n    const currencyInput = document.getElementById(\'currency\');\r\n    const thankyouInput = document.getElementById(\'thankyou\');\r\n    const cancelInput = document.getElementById(\'cancel\');\r\n    const resultElement = document.getElementById(\'result\');\r\n    const generateButton = document.getElementById(\'generateButton\');\r\n    const copyButton = document.getElementById(\'copyButton\');\r\n\r\n    function generatePayPalLink() {\r\n      const type = typeInput.value;\r\n      const email = emailInput.value;\r\n      const title = titleInput.value;\r\n      const price = parseFloat(priceInput.value);\r\n      const currency = currencyInput.value;\r\n      const thankyou = thankyouInput.value;\r\n      const cancel = cancelInput.value;\r\n\r\n      const paypalLink = `https://www.paypal.com/${type}/?business=${email}&item_name=${title}&amount=${price}&currency_code=${currency}&return=${thankyou}&cancel_return=${cancel}`;\r\n      \r\n      resultElement.innerText = paypalLink;\r\n    }\r\n\r\n    generateButton.addEventListener(\'click\', generatePayPalLink);\r\n\r\n    copyButton.addEventListener(\'click\', () => {\r\n      const paypalLink = resultElement.innerText;\r\n      navigator.clipboard.writeText(paypalLink).then(() => {\r\n        alert(\'Result copied to clipboard\');\r\n      }).catch(err => {\r\n        console.error(\'Unable to copy to clipboard: \', err);\r\n      });\r\n    });\r\n  </script>', '', '', '', '', '', 26, 'publish'),
(54, 1, 'Mailto Link Generator', 'mailto-link-generator', '<form>\r\n      <div class=\"form-group\">\r\n        <label for=\"to\">To:</label>\r\n        <input type=\"email\" class=\"form-control\" id=\"to\" placeholder=\"Recipient\'s Email\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"subject\">Subject:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"subject\" placeholder=\"Email Subject\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"body\">Body:</label>\r\n        <textarea class=\"form-control\" id=\"body\" rows=\"5\" placeholder=\"Email Body\"></textarea>\r\n      </div>\r\n    </form>\r\n    <h2>Result:</h2>\r\n    <p id=\"result\"></p>\r\n    <button class=\"btn btn-primary\" id=\"generateButton\">Generate Mailto Link</button>\r\n    <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n    const toInput = document.getElementById(\'to\');\r\n    const subjectInput = document.getElementById(\'subject\');\r\n    const bodyInput = document.getElementById(\'body\');\r\n    const resultElement = document.getElementById(\'result\');\r\n    const generateButton = document.getElementById(\'generateButton\');\r\n    const copyButton = document.getElementById(\'copyButton\');\r\n\r\n    function generateMailtoLink() {\r\n      const to = toInput.value;\r\n      const subject = encodeURIComponent(subjectInput.value);\r\n      const body = encodeURIComponent(bodyInput.value);\r\n\r\n      const mailtoLink = `mailto:${to}?subject=${subject}&body=${body}`;\r\n      \r\n      resultElement.innerText = mailtoLink;\r\n    }\r\n\r\n    generateButton.addEventListener(\'click\', generateMailtoLink);\r\n\r\n    copyButton.addEventListener(\'click\', () => {\r\n      const mailtoLink = resultElement.innerText;\r\n      navigator.clipboard.writeText(mailtoLink).then(() => {\r\n        alert(\'Result copied to clipboard\');\r\n      }).catch(err => {\r\n        console.error(\'Unable to copy to clipboard: \', err);\r\n      });\r\n    });\r\n  </script>', '', '', '', '', '', 24, 'publish'),
(55, 1, 'UTM Link Generator', 'utm-link-generator', '<form>\r\n      <div class=\"form-group\">\r\n        <label for=\"url\">Base URL:</label>\r\n        <input type=\"url\" class=\"form-control\" id=\"url\" placeholder=\"Base URL\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"utm_source\">Source:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"utm_source\" placeholder=\"Source\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"utm_medium\">Medium:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"utm_medium\" placeholder=\"Medium\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"utm_campaign\">Campaign:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"utm_campaign\" placeholder=\"Campaign\">\r\n      </div>\r\n    </form>\r\n    <h2>Result:</h2>\r\n    <p id=\"result\"></p>\r\n    <button class=\"btn btn-primary\" id=\"generateButton\">Generate UTM Link</button>\r\n    <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n    const urlInput = document.getElementById(\'url\');\r\n    const sourceInput = document.getElementById(\'utm_source\');\r\n    const mediumInput = document.getElementById(\'utm_medium\');\r\n    const campaignInput = document.getElementById(\'utm_campaign\');\r\n    const resultElement = document.getElementById(\'result\');\r\n    const generateButton = document.getElementById(\'generateButton\');\r\n    const copyButton = document.getElementById(\'copyButton\');\r\n\r\n    function generateUTMLink() {\r\n      const baseUrl = urlInput.value;\r\n      const source = encodeURIComponent(sourceInput.value);\r\n      const medium = encodeURIComponent(mediumInput.value);\r\n      const campaign = encodeURIComponent(campaignInput.value);\r\n\r\n      const utmLink = `${baseUrl}?utm_source=${source}&utm_medium=${medium}&utm_campaign=${campaign}`;\r\n      \r\n      resultElement.innerText = utmLink;\r\n    }\r\n\r\n    generateButton.addEventListener(\'click\', generateUTMLink);\r\n\r\n    copyButton.addEventListener(\'click\', () => {\r\n      const utmLink = resultElement.innerText;\r\n      navigator.clipboard.writeText(utmLink).then(() => {\r\n        alert(\'Result copied to clipboard\');\r\n      }).catch(err => {\r\n        console.error(\'Unable to copy to clipboard: \', err);\r\n      });\r\n    });\r\n  </script>', '', '', '', '', '', 21, 'publish'),
(56, 1, 'Whatsapp Link Generator', 'whatsapp-link-generator', '<form>\r\n      <div class=\"form-group\">\r\n        <label for=\"phone\">Phone Number:</label>\r\n        <input type=\"tel\" class=\"form-control\" id=\"phone\" placeholder=\"Phone Number (e.g., +123456789)\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"message\">Message:</label>\r\n        <textarea class=\"form-control\" id=\"message\" rows=\"5\" placeholder=\"Message\"></textarea>\r\n      </div>\r\n    </form>\r\n    <h2>Result:</h2>\r\n    <p id=\"result\"></p>\r\n    <button class=\"btn btn-primary\" id=\"generateButton\">Generate WhatsApp Link</button>\r\n    <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n    const phoneInput = document.getElementById(\'phone\');\r\n    const messageInput = document.getElementById(\'message\');\r\n    const resultElement = document.getElementById(\'result\');\r\n    const generateButton = document.getElementById(\'generateButton\');\r\n    const copyButton = document.getElementById(\'copyButton\');\r\n\r\n    function generateWhatsAppLink() {\r\n      const phoneNumber = phoneInput.value;\r\n      const message = encodeURIComponent(messageInput.value);\r\n\r\n      const whatsappLink = `https://wa.me/${phoneNumber}?text=${message}`;\r\n      \r\n      resultElement.innerText = whatsappLink;\r\n    }\r\n\r\n    generateButton.addEventListener(\'click\', generateWhatsAppLink);\r\n\r\n    copyButton.addEventListener(\'click\', () => {\r\n      const whatsappLink = resultElement.innerText;\r\n      navigator.clipboard.writeText(whatsappLink).then(() => {\r\n        alert(\'Result copied to clipboard\');\r\n      }).catch(err => {\r\n        console.error(\'Unable to copy to clipboard: \', err);\r\n      });\r\n    });\r\n  </script>', '', '', '', '', '', 31, 'publish'),
(57, 1, 'Youtube Timestamp Link Generator', 'youtube-timestamp-link-generator', '<form>\r\n      <div class=\"form-group\">\r\n        <label for=\"videoId\">Video ID:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"videoId\" placeholder=\"Video ID\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"timestamp\">Timestamp (in seconds):</label>\r\n        <input type=\"number\" class=\"form-control\" id=\"timestamp\" placeholder=\"Timestamp\">\r\n      </div>\r\n    </form>\r\n    <h2>Result:</h2>\r\n    <p id=\"result\"></p>\r\n    <button class=\"btn btn-primary\" id=\"generateButton\">Generate Timestamp Link</button>\r\n    <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n    const videoIdInput = document.getElementById(\'videoId\');\r\n    const timestampInput = document.getElementById(\'timestamp\');\r\n    const resultElement = document.getElementById(\'result\');\r\n    const generateButton = document.getElementById(\'generateButton\');\r\n    const copyButton = document.getElementById(\'copyButton\');\r\n\r\n    function generateTimestampLink() {\r\n      const videoId = videoIdInput.value;\r\n      const timestamp = parseInt(timestampInput.value);\r\n\r\n      if (isNaN(timestamp) || timestamp <= 0) {\r\n        resultElement.innerText = \'Invalid timestamp\';\r\n        return;\r\n      }\r\n\r\n      const timestampLink = `https://www.youtube.com/watch?v=${videoId}&t=${timestamp}`;\r\n      \r\n      resultElement.innerText = timestampLink;\r\n    }\r\n\r\n    generateButton.addEventListener(\'click\', generateTimestampLink);\r\n\r\n    copyButton.addEventListener(\'click\', () => {\r\n      const timestampLink = resultElement.innerText;\r\n      navigator.clipboard.writeText(timestampLink).then(() => {\r\n        alert(\'Result copied to clipboard\');\r\n      }).catch(err => {\r\n        console.error(\'Unable to copy to clipboard: \', err);\r\n      });\r\n    });\r\n  </script>', '', '', '', '', '', 26, 'publish'),
(58, 1, 'Lorem Ipsum Generator', 'lorem-ipsum-generator', '<form>\r\n      <div class=\"form-group\">\r\n        <label for=\"paragraphs\">Number of Paragraphs:</label>\r\n        <input type=\"number\" class=\"form-control\" id=\"paragraphs\" placeholder=\"Number of Paragraphs\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"length\">Paragraph Length (Words):</label>\r\n        <input type=\"number\" class=\"form-control\" id=\"length\" placeholder=\"Paragraph Length\">\r\n      </div>\r\n    </form>\r\n    <h2>Result:</h2>\r\n    <div id=\"result\"></div>\r\n    <button class=\"btn btn-primary\" id=\"generateButton\">Generate Lorem Ipsum</button>\r\n    <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n    const paragraphsInput = document.getElementById(\'paragraphs\');\r\n    const lengthInput = document.getElementById(\'length\');\r\n    const resultElement = document.getElementById(\'result\');\r\n    const generateButton = document.getElementById(\'generateButton\');\r\n    const copyButton = document.getElementById(\'copyButton\');\r\n\r\n    function generateLoremIpsum() {\r\n      const paragraphs = parseInt(paragraphsInput.value);\r\n      const length = parseInt(lengthInput.value);\r\n\r\n      if (isNaN(paragraphs) || isNaN(length) || paragraphs <= 0 || length <= 0) {\r\n        resultElement.innerText = \'Invalid input\';\r\n        return;\r\n      }\r\n\r\n      const loremIpsum = [];\r\n\r\n      for (let i = 0; i < paragraphs; i++) {\r\n        const words = new Array(length).fill(\'Lorem ipsum dolor sit amet, consectetur adipiscing elit.\');\r\n        loremIpsum.push(words.join(\' \'));\r\n      }\r\n\r\n      resultElement.innerHTML = loremIpsum.join(\'<br><br>\');\r\n    }\r\n\r\n    generateButton.addEventListener(\'click\', generateLoremIpsum);\r\n\r\n    copyButton.addEventListener(\'click\', () => {\r\n      const loremIpsumText = resultElement.innerText;\r\n      navigator.clipboard.writeText(loremIpsumText).then(() => {\r\n        alert(\'Result copied to clipboard\');\r\n      }).catch(err => {\r\n        console.error(\'Unable to copy to clipboard: \', err);\r\n      });\r\n    });\r\n  </script>', '', '', '', '', '', 23, 'publish'),
(59, 1, 'Random Number Generator', 'random-number-generator', '<form>\r\n      <div class=\"form-group\">\r\n        <label for=\"min\">Minimum Value:</label>\r\n        <input type=\"number\" class=\"form-control\" id=\"min\" placeholder=\"Minimum Value\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"max\">Maximum Value:</label>\r\n        <input type=\"number\" class=\"form-control\" id=\"max\" placeholder=\"Maximum Value\">\r\n      </div>\r\n    </form>\r\n    <h2>Result:</h2>\r\n    <p id=\"result\"></p>\r\n    <button class=\"btn btn-primary\" id=\"generateButton\">Generate Random Number</button>\r\n    <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n    const minInput = document.getElementById(\'min\');\r\n    const maxInput = document.getElementById(\'max\');\r\n    const resultElement = document.getElementById(\'result\');\r\n    const generateButton = document.getElementById(\'generateButton\');\r\n    const copyButton = document.getElementById(\'copyButton\');\r\n\r\n    function generateRandomNumber() {\r\n      const min = parseInt(minInput.value);\r\n      const max = parseInt(maxInput.value);\r\n\r\n      if (isNaN(min) || isNaN(max) || min >= max) {\r\n        resultElement.innerText = \'Invalid input\';\r\n        return;\r\n      }\r\n\r\n      const randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\r\n      \r\n      resultElement.innerText = `Random Number: ${randomNumber}`;\r\n    }\r\n\r\n    generateButton.addEventListener(\'click\', generateRandomNumber);\r\n\r\n    copyButton.addEventListener(\'click\', () => {\r\n      const randomNumberText = resultElement.innerText;\r\n      navigator.clipboard.writeText(randomNumberText).then(() => {\r\n        alert(\'Result copied to clipboard\');\r\n      }).catch(err => {\r\n        console.error(\'Unable to copy to clipboard: \', err);\r\n      });\r\n    });\r\n  </script>', '', '', '', '', '', 23, 'publish'),
(60, 1, 'UUID V4 Generator', 'uuid-v4-generator', '<form>\r\n      <div class=\"form-group\">\r\n        <label for=\"result\">Result:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"result\" placeholder=\"Generated UUID\" readonly>\r\n      </div>\r\n    </form>\r\n    <button class=\"btn btn-primary\" id=\"generateButton\">Generate UUID v4</button>\r\n    <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n    const resultInput = document.getElementById(\'result\');\r\n    const generateButton = document.getElementById(\'generateButton\');\r\n    const copyButton = document.getElementById(\'copyButton\');\r\n\r\n    function generateUUIDv4() {\r\n      const uuid = \'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\'.replace(/[xy]/g, function(c) {\r\n        const r = (Math.random() * 16) | 0;\r\n        const v = c == \'x\' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n      });\r\n\r\n      resultInput.value = uuid;\r\n    }\r\n\r\n    generateButton.addEventListener(\'click\', generateUUIDv4);\r\n\r\n    copyButton.addEventListener(\'click\', () => {\r\n      const uuid = resultInput.value;\r\n      navigator.clipboard.writeText(uuid).then(() => {\r\n        alert(\'Result copied to clipboard\');\r\n      }).catch(err => {\r\n        console.error(\'Unable to copy to clipboard: \', err);\r\n      });\r\n    });\r\n\r\n    // Generate a UUID when the page loads\r\n    generateUUIDv4();\r\n  </script>', '', '', '', '', '', 22, 'publish'),
(61, 1, 'Bcrypt Generator', 'bcrypt-generator', '<form>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password:</label>\r\n        <input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Password\">\r\n      </div>\r\n    </form>\r\n    <h2>Result:</h2>\r\n    <p id=\"result\"></p>\r\n    <button class=\"btn btn-primary\" id=\"generateButton\">Generate Bcrypt Hash</button>\r\n    <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n    const passwordInput = document.getElementById(\'password\');\r\n    const resultElement = document.getElementById(\'result\');\r\n    const generateButton = document.getElementById(\'generateButton\');\r\n    const copyButton = document.getElementById(\'copyButton\');\r\n\r\n    function generateBcryptHash() {\r\n      const password = passwordInput.value;\r\n\r\n      if (!password) {\r\n        resultElement.innerText = \'Please enter a password.\';\r\n        return;\r\n      }\r\n\r\n      const saltRounds = 10; // Number of salt rounds\r\n      bcrypt.hash(password, saltRounds).then((hash) => {\r\n        resultElement.innerText = `Bcrypt Hash: ${hash}`;\r\n      });\r\n    }\r\n\r\n    generateButton.addEventListener(\'click\', generateBcryptHash);\r\n\r\n    copyButton.addEventListener(\'click\', () => {\r\n      const bcryptHash = resultElement.innerText;\r\n      navigator.clipboard.writeText(bcryptHash).then(() => {\r\n        alert(\'Result copied to clipboard\');\r\n      }).catch(err => {\r\n        console.error(\'Unable to copy to clipboard: \', err);\r\n      });\r\n    });\r\n  </script>', '', '', '', '', '', 24, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(62, 1, 'MD2 Generator', 'md2-generator', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Input Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"input\" placeholder=\"Input Text\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"generateButton\">Generate MD2 Hash</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const resultElement = document.getElementById(\'result\');\r\n        const generateButton = document.getElementById(\'generateButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function generateMD2Hash() {\r\n            const inputText = inputElement.value;\r\n\r\n            if (!inputText) {\r\n                resultElement.innerText = \'Please enter text to hash.\';\r\n                return;\r\n            }\r\n\r\n            const md2Hash = CryptoJS.MD2(inputText).toString();\r\n            resultElement.innerText = `MD2 Hash: ${md2Hash}`;\r\n        }\r\n\r\n        generateButton.addEventListener(\'click\', generateMD2Hash);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const md2Hash = resultElement.innerText;\r\n            navigator.clipboard.writeText(md2Hash).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 22, 'publish'),
(63, 1, 'SHA-1 Generator', 'sha-1-generator', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Input Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"input\" placeholder=\"Input Text\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"generateButton\">Generate SHA-1 Hash</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const resultElement = document.getElementById(\'result\');\r\n        const generateButton = document.getElementById(\'generateButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function generateSHA1Hash() {\r\n            const inputText = inputElement.value;\r\n\r\n            if (!inputText) {\r\n                resultElement.innerText = \'Please enter text to hash.\';\r\n                return;\r\n            }\r\n\r\n            const sha1Hash = sha1(inputText);\r\n            resultElement.innerText = `SHA-1 Hash: ${sha1Hash}`;\r\n        }\r\n\r\n        function sha1(input) {\r\n            const buffer = new TextEncoder().encode(input);\r\n            return crypto.subtle.digest(\'SHA-1\', buffer).then(hashBuffer => {\r\n                const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n                return hashArray.map(byte => byte.toString(16).padStart(2, \'0\')).join(\'\');\r\n            });\r\n        }\r\n\r\n        generateButton.addEventListener(\'click\', generateSHA1Hash);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const sha1Hash = resultElement.innerText;\r\n            navigator.clipboard.writeText(sha1Hash).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 22, 'publish'),
(64, 1, 'SHA-224 Generator', 'sha-224-generator', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Input Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"input\" placeholder=\"Input Text\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"generateButton\">Generate SHA-224 Hash</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const resultElement = document.getElementById(\'result\');\r\n        const generateButton = document.getElementById(\'generateButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function generateSHA224Hash() {\r\n            const inputText = inputElement.value;\r\n\r\n            if (!inputText) {\r\n                resultElement.innerText = \'Please enter text to hash.\';\r\n                return;\r\n            }\r\n\r\n            sha224(inputText)\r\n                .then(hash => {\r\n                    resultElement.innerText = `SHA-224 Hash: ${hash}`;\r\n                })\r\n                .catch(error => {\r\n                    console.error(\'Error generating SHA-224 hash:\', error);\r\n                });\r\n        }\r\n\r\n        async function sha224(input) {\r\n            const encoder = new TextEncoder();\r\n            const data = encoder.encode(input);\r\n            const hashBuffer = await crypto.subtle.digest(\'SHA-224\', data);\r\n\r\n            const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n            const hashHex = hashArray.map(byte => byte.toString(16).padStart(2, \'0\')).join(\'\');\r\n            return hashHex;\r\n        }\r\n\r\n        generateButton.addEventListener(\'click\', generateSHA224Hash);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const sha224Hash = resultElement.innerText;\r\n            navigator.clipboard.writeText(sha224Hash).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 18, 'publish'),
(65, 1, 'SHA-256 Generator', 'sha-256-generator', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Input Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"input\" placeholder=\"Input Text\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"generateButton\">Generate SHA-256 Hash</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const resultElement = document.getElementById(\'result\');\r\n        const generateButton = document.getElementById(\'generateButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function generateSHA256Hash() {\r\n            const inputText = inputElement.value;\r\n\r\n            if (!inputText) {\r\n                resultElement.innerText = \'Please enter text to hash.\';\r\n                return;\r\n            }\r\n\r\n            sha256(inputText)\r\n                .then(hash => {\r\n                    resultElement.innerText = `SHA-256 Hash: ${hash}`;\r\n                })\r\n                .catch(error => {\r\n                    console.error(\'Error generating SHA-256 hash:\', error);\r\n                });\r\n        }\r\n\r\n        async function sha256(input) {\r\n            const encoder = new TextEncoder();\r\n            const data = encoder.encode(input);\r\n            const hashBuffer = await crypto.subtle.digest(\'SHA-256\', data);\r\n\r\n            const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n            const hashHex = hashArray.map(byte => byte.toString(16).padStart(2, \'0\')).join(\'\');\r\n            return hashHex;\r\n        }\r\n\r\n        generateButton.addEventListener(\'click\', generateSHA256Hash);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const sha256Hash = resultElement.innerText;\r\n            navigator.clipboard.writeText(sha256Hash).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 18, 'publish'),
(66, 1, 'SHA-384 Generator', 'sha-384-generator', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Input Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"input\" placeholder=\"Input Text\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"generateButton\">Generate SHA-384 Hash</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '    <script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const resultElement = document.getElementById(\'result\');\r\n        const generateButton = document.getElementById(\'generateButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function generateSHA384Hash() {\r\n            const inputText = inputElement.value;\r\n\r\n            if (!inputText) {\r\n                resultElement.innerText = \'Please enter text to hash.\';\r\n                return;\r\n            }\r\n\r\n            sha384(inputText)\r\n                .then(hash => {\r\n                    resultElement.innerText = `SHA-384 Hash: ${hash}`;\r\n                })\r\n                .catch(error => {\r\n                    console.error(\'Error generating SHA-384 hash:\', error);\r\n                });\r\n        }\r\n\r\n        async function sha384(input) {\r\n            const encoder = new TextEncoder();\r\n            const data = encoder.encode(input);\r\n            const hashBuffer = await crypto.subtle.digest(\'SHA-384\', data);\r\n\r\n            const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n            const hashHex = hashArray.map(byte => byte.toString(16).padStart(2, \'0\')).join(\'\');\r\n            return hashHex;\r\n        }\r\n\r\n        generateButton.addEventListener(\'click\', generateSHA384Hash);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const sha384Hash = resultElement.innerText;\r\n            navigator.clipboard.writeText(sha384Hash).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 21, 'publish'),
(67, 1, 'SHA-512 Generator', 'sha-512-generator', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Input Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"input\" placeholder=\"Input Text\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"generateButton\">Generate SHA-512 Hash</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const resultElement = document.getElementById(\'result\');\r\n        const generateButton = document.getElementById(\'generateButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function generateSHA512Hash() {\r\n            const inputText = inputElement.value;\r\n\r\n            if (!inputText) {\r\n                resultElement.innerText = \'Please enter text to hash.\';\r\n                return;\r\n            }\r\n\r\n            sha512(inputText)\r\n                .then(hash => {\r\n                    resultElement.innerText = `SHA-512 Hash: ${hash}`;\r\n                })\r\n                .catch(error => {\r\n                    console.error(\'Error generating SHA-512 hash:\', error);\r\n                });\r\n        }\r\n\r\n        async function sha512(input) {\r\n            const encoder = new TextEncoder();\r\n            const data = encoder.encode(input);\r\n            const hashBuffer = await crypto.subtle.digest(\'SHA-512\', data);\r\n\r\n            const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n            const hashHex = hashArray.map(byte => byte.toString(16).padStart(2, \'0\')).join(\'\');\r\n            return hashHex;\r\n        }\r\n\r\n        generateButton.addEventListener(\'click\', generateSHA512Hash);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const sha512Hash = resultElement.innerText;\r\n            navigator.clipboard.writeText(sha512Hash).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 21, 'publish'),
(68, 1, 'SHA-512/224 Generator', 'sha-512-224-generator', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Input Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"input\" placeholder=\"Input Text\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"generateButton\">Generate SHA-512/224 Hash</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const resultElement = document.getElementById(\'result\');\r\n        const generateButton = document.getElementById(\'generateButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function generateSHA512224Hash() {\r\n            const inputText = inputElement.value;\r\n\r\n            if (!inputText) {\r\n                resultElement.innerText = \'Please enter text to hash.\';\r\n                return;\r\n            }\r\n\r\n            sha512224(inputText)\r\n                .then(hash => {\r\n                    resultElement.innerText = `SHA-512/224 Hash: ${hash}`;\r\n                })\r\n                .catch(error => {\r\n                    console.error(\'Error generating SHA-512/224 hash:\', error);\r\n                });\r\n        }\r\n\r\n        async function sha512224(input) {\r\n            const encoder = new TextEncoder();\r\n            const data = encoder.encode(input);\r\n            const hashBuffer = await crypto.subtle.digest(\'SHA-512/224\', data);\r\n\r\n            const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n            const hashHex = hashArray.map(byte => byte.toString(16).padStart(2, \'0\')).join(\'\');\r\n            return hashHex;\r\n        }\r\n\r\n        generateButton.addEventListener(\'click\', generateSHA512224Hash);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const sha512224Hash = resultElement.innerText;\r\n            navigator.clipboard.writeText(sha512224Hash).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 21, 'publish'),
(69, 1, 'SHA-512/256 Generator', 'sha-512-256-generator', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Input Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"input\" placeholder=\"Input Text\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"generateButton\">Generate SHA-512/256 Hash</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const resultElement = document.getElementById(\'result\');\r\n        const generateButton = document.getElementById(\'generateButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function generateSHA512256Hash() {\r\n            const inputText = inputElement.value;\r\n\r\n            if (!inputText) {\r\n                resultElement.innerText = \'Please enter text to hash.\';\r\n                return;\r\n            }\r\n\r\n            sha512256(inputText)\r\n                .then(hash => {\r\n                    resultElement.innerText = `SHA-512/256 Hash: ${hash}`;\r\n                })\r\n                .catch(error => {\r\n                    console.error(\'Error generating SHA-512/256 hash:\', error);\r\n                });\r\n        }\r\n\r\n        async function sha512256(input) {\r\n            const encoder = new TextEncoder();\r\n            const data = encoder.encode(input);\r\n            const hashBuffer = await crypto.subtle.digest(\'SHA-512/256\', data);\r\n\r\n            const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n            const hashHex = hashArray.map(byte => byte.toString(16).padStart(2, \'0\')).join(\'\');\r\n            return hashHex;\r\n        }\r\n\r\n        generateButton.addEventListener(\'click\', generateSHA512256Hash);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const sha512256Hash = resultElement.innerText;\r\n            navigator.clipboard.writeText(sha512256Hash).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 19, 'publish'),
(70, 1, 'SHA-3/224 Generator', 'sha-3224-generator', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Input Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"input\" placeholder=\"Input Text\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"generateButton\">Generate SHA-3/224 Hash</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const resultElement = document.getElementById(\'result\');\r\n        const generateButton = document.getElementById(\'generateButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function generateSHA3224Hash() {\r\n            const inputText = inputElement.value;\r\n\r\n            if (!inputText) {\r\n                resultElement.innerText = \'Please enter text to hash.\';\r\n                return;\r\n            }\r\n\r\n            sha3224(inputText)\r\n                .then(hash => {\r\n                    resultElement.innerText = `SHA-3/224 Hash: ${hash}`;\r\n                })\r\n                .catch(error => {\r\n                    console.error(\'Error generating SHA-3/224 hash:\', error);\r\n                });\r\n        }\r\n\r\n        async function sha3224(input) {\r\n            const encoder = new TextEncoder();\r\n            const data = encoder.encode(input);\r\n            const hashBuffer = await crypto.subtle.digest(\'SHA-3/224\', data);\r\n\r\n            const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n            const hashHex = hashArray.map(byte => byte.toString(16).padStart(2, \'0\')).join(\'\');\r\n            return hashHex;\r\n        }\r\n\r\n        generateButton.addEventListener(\'click\', generateSHA3224Hash);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const sha3224Hash = resultElement.innerText;\r\n            navigator.clipboard.writeText(sha3224Hash).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 21, 'publish'),
(71, 1, 'SHA-3/256 Generator', 'sha-3256-generator', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Input Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"input\" placeholder=\"Input Text\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"generateButton\">Generate SHA-3/256 Hash</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const resultElement = document.getElementById(\'result\');\r\n        const generateButton = document.getElementById(\'generateButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function generateSHA3256Hash() {\r\n            const inputText = inputElement.value;\r\n\r\n            if (!inputText) {\r\n                resultElement.innerText = \'Please enter text to hash.\';\r\n                return;\r\n            }\r\n\r\n            sha3256(inputText)\r\n                .then(hash => {\r\n                    resultElement.innerText = `SHA-3/256 Hash: ${hash}`;\r\n                })\r\n                .catch(error => {\r\n                    console.error(\'Error generating SHA-3/256 hash:\', error);\r\n                });\r\n        }\r\n\r\n        async function sha3256(input) {\r\n            const encoder = new TextEncoder();\r\n            const data = encoder.encode(input);\r\n            const hashBuffer = await crypto.subtle.digest(\'SHA-3/256\', data);\r\n\r\n            const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n            const hashHex = hashArray.map(byte => byte.toString(16).padStart(2, \'0\')).join(\'\');\r\n            return hashHex;\r\n        }\r\n\r\n        generateButton.addEventListener(\'click\', generateSHA3256Hash);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const sha3256Hash = resultElement.innerText;\r\n            navigator.clipboard.writeText(sha3256Hash).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 21, 'publish'),
(72, 1, 'SHA-3/384 Generator', 'sha-3384-generator', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Input Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"input\" placeholder=\"Input Text\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"generateButton\">Generate SHA-3/384 Hash</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const resultElement = document.getElementById(\'result\');\r\n        const generateButton = document.getElementById(\'generateButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function generateSHA3384Hash() {\r\n            const inputText = inputElement.value;\r\n\r\n            if (!inputText) {\r\n                resultElement.innerText = \'Please enter text to hash.\';\r\n                return;\r\n            }\r\n\r\n            sha3384(inputText)\r\n                .then(hash => {\r\n                    resultElement.innerText = `SHA-3/384 Hash: ${hash}`;\r\n                })\r\n                .catch(error => {\r\n                    console.error(\'Error generating SHA-3/384 hash:\', error);\r\n                });\r\n        }\r\n\r\n        async function sha3384(input) {\r\n            const encoder = new TextEncoder();\r\n            const data = encoder.encode(input);\r\n            const hashBuffer = await crypto.subtle.digest(\'SHA-3/384\', data);\r\n\r\n            const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n            const hashHex = hashArray.map(byte => byte.toString(16).padStart(2, \'0\')).join(\'\');\r\n            return hashHex;\r\n        }\r\n\r\n        generateButton.addEventListener(\'click\', generateSHA3384Hash);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const sha3384Hash = resultElement.innerText;\r\n            navigator.clipboard.writeText(sha3384Hash).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 22, 'publish'),
(73, 1, 'SHA-3/512 Generator', 'sha-3512-generator', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Input Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"input\" placeholder=\"Input Text\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"generateButton\">Generate SHA-3/512 Hash</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const resultElement = document.getElementById(\'result\');\r\n        const generateButton = document.getElementById(\'generateButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function generateSHA3512Hash() {\r\n            const inputText = inputElement.value;\r\n\r\n            if (!inputText) {\r\n                resultElement.innerText = \'Please enter text to hash.\';\r\n                return;\r\n            }\r\n\r\n            sha3512(inputText)\r\n                .then(hash => {\r\n                    resultElement.innerText = `SHA-3/512 Hash: ${hash}`;\r\n                })\r\n                .catch(error => {\r\n                    console.error(\'Error generating SHA-3/512 hash:\', error);\r\n                });\r\n        }\r\n\r\n        async function sha3512(input) {\r\n            const encoder = new TextEncoder();\r\n            const data = encoder.encode(input);\r\n            const hashBuffer = await crypto.subtle.digest(\'SHA-3/512\', data);\r\n\r\n            const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n            const hashHex = hashArray.map(byte => byte.toString(16).padStart(2, \'0\')).join(\'\');\r\n            return hashHex;\r\n        }\r\n\r\n        generateButton.addEventListener(\'click\', generateSHA3512Hash);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const sha3512Hash = resultElement.innerText;\r\n            navigator.clipboard.writeText(sha3512Hash).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 24, 'publish'),
(74, 1, 'RIPEMD160 Generator', 'ripemd160-generator', '<script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js\"></script>\r\n\r\n        <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Input Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"input\" placeholder=\"Input Text\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"generateButton\">Generate RIPEMD160 Hash</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const resultElement = document.getElementById(\'result\');\r\n        const generateButton = document.getElementById(\'generateButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function generateRIPEMD160Hash() {\r\n            const inputText = inputElement.value;\r\n\r\n            if (!inputText) {\r\n                resultElement.innerText = \'Please enter text to hash.\';\r\n                return;\r\n            }\r\n\r\n            const hash = CryptoJS.RIPEMD160(inputText).toString();\r\n            resultElement.innerText = `RIPEMD160 Hash: ${hash}`;\r\n        }\r\n\r\n        generateButton.addEventListener(\'click\', generateRIPEMD160Hash);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const ripemd160Hash = resultElement.innerText;\r\n            navigator.clipboard.writeText(ripemd160Hash).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 25, 'publish'),
(75, 1, 'RIPEMD320 Generator', 'ripemd320-generator', ' <script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js\"></script>\r\n\r\n        <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Input Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"input\" placeholder=\"Input Text\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"generateButton\">Generate RIPEMD320 Hash</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const resultElement = document.getElementById(\'result\');\r\n        const generateButton = document.getElementById(\'generateButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function generateRIPEMD320Hash() {\r\n            const inputText = inputElement.value;\r\n\r\n            if (!inputText) {\r\n                resultElement.innerText = \'Please enter text to hash.\';\r\n                return;\r\n            }\r\n\r\n            const hash = CryptoJS.RIPEMD320(inputText).toString();\r\n            resultElement.innerText = `RIPEMD320 Hash: ${hash}`;\r\n        }\r\n\r\n        generateButton.addEventListener(\'click\', generateRIPEMD320Hash);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const ripemd320Hash = resultElement.innerText;\r\n            navigator.clipboard.writeText(ripemd320Hash).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 21, 'publish'),
(76, 1, 'RIPEMD128 Generator', 'ripemd128-generator', '<script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js\"></script>\r\n\r\n        <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Input Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"input\" placeholder=\"Input Text\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"generateButton\">Generate RIPEMD128 Hash</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const resultElement = document.getElementById(\'result\');\r\n        const generateButton = document.getElementById(\'generateButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function generateRIPEMD128Hash() {\r\n            const inputText = inputElement.value;\r\n\r\n            if (!inputText) {\r\n                resultElement.innerText = \'Please enter text to hash.\';\r\n                return;\r\n            }\r\n\r\n            const hash = CryptoJS.RIPEMD128(inputText).toString();\r\n            resultElement.innerText = `RIPEMD128 Hash: ${hash}`;\r\n        }\r\n\r\n        generateButton.addEventListener(\'click\', generateRIPEMD128Hash);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const ripemd128Hash = resultElement.innerText;\r\n            navigator.clipboard.writeText(ripemd128Hash).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 18, 'publish'),
(77, 1, 'RIPEMD256 Generator', 'ripemd256-generator', '<script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js\"></script>\r\n\r\n        <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Input Text:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"input\" placeholder=\"Input Text\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"generateButton\">Generate RIPEMD256 Hash</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const resultElement = document.getElementById(\'result\');\r\n        const generateButton = document.getElementById(\'generateButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function generateRIPEMD256Hash() {\r\n            const inputText = inputElement.value;\r\n\r\n            if (!inputText) {\r\n                resultElement.innerText = \'Please enter text to hash.\';\r\n                return;\r\n            }\r\n\r\n            const hash = CryptoJS.RIPEMD256(inputText).toString();\r\n            resultElement.innerText = `RIPEMD256 Hash: ${hash}`;\r\n        }\r\n\r\n        generateButton.addEventListener(\'click\', generateRIPEMD256Hash);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const ripemd256Hash = resultElement.innerText;\r\n            navigator.clipboard.writeText(ripemd256Hash).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 22, 'publish'),
(78, 2, 'SQL Formatter/Beautifier', 'sql-formatterbeautifier', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"sqlInput\">SQL Query:</label>\r\n                <textarea class=\"form-control\" id=\"sqlInput\" rows=\"5\" placeholder=\"Enter SQL Query\"></textarea>\r\n            </div>\r\n        </form>\r\n        <h2>Formatted SQL:</h2>\r\n        <pre id=\"formattedSql\"></pre>\r\n        <button class=\"btn btn-primary\" id=\"formatButton\">Format SQL</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script src=\"https://cdnjs.cloudflare.com/ajax/libs/sql-formatter/2.0.0/sql-formatter.min.js\"></script>\r\n    <script>\r\n        const sqlInput = document.getElementById(\'sqlInput\');\r\n        const formattedSql = document.getElementById(\'formattedSql\');\r\n        const formatButton = document.getElementById(\'formatButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function formatSQL() {\r\n            const inputText = sqlInput.value;\r\n            const formattedText = sqlFormatter.format(inputText);\r\n            formattedSql.innerText = formattedText;\r\n        }\r\n\r\n        formatButton.addEventListener(\'click\', formatSQL);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const sqlResult = formattedSql.innerText;\r\n            navigator.clipboard.writeText(sqlResult).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(79, 2, 'HTML Entity Converter', 'html-entity-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Input Text:</label>\r\n                <textarea class=\"form-control\" id=\"input\" rows=\"5\" placeholder=\"Enter HTML or Text\"></textarea>\r\n            </div>\r\n        </form>\r\n        <h2>Converted Text:</h2>\r\n        <pre id=\"convertedText\"></pre>\r\n        <button class=\"btn btn-primary\" id=\"convertButton\">Convert HTML Entities</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const convertedTextElement = document.getElementById(\'convertedText\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function convertHTML() {\r\n            const inputText = inputElement.value;\r\n            const convertedText = htmlentities(inputText);\r\n            convertedTextElement.innerText = convertedText;\r\n        }\r\n\r\n        convertButton.addEventListener(\'click\', convertHTML);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const convertedText = convertedTextElement.innerText;\r\n            navigator.clipboard.writeText(convertedText).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n\r\n        // HTML entity conversion function\r\n        function htmlentities(text) {\r\n            return text.replace(/</g, \'&lt;\').replace(/>/g, \'&gt;\').replace(/&/g, \'&amp;\');\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(80, 2, 'BBcode to HTML Converter', 'bbcode-to-html-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">BBCode Text:</label>\r\n                <textarea class=\"form-control\" id=\"input\" rows=\"5\" placeholder=\"Enter BBCode\"></textarea>\r\n            </div>\r\n        </form>\r\n        <h2>Converted HTML:</h2>\r\n        <div id=\"convertedHtml\"></div>\r\n        <button class=\"btn btn-primary\" id=\"convertButton\">Convert BBCode to HTML</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const convertedHtmlElement = document.getElementById(\'convertedHtml\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function convertBBCodeToHtml() {\r\n            const inputText = inputElement.value;\r\n            const convertedHtml = bbcodeToHtml(inputText);\r\n            convertedHtmlElement.innerHTML = convertedHtml;\r\n        }\r\n\r\n        convertButton.addEventListener(\'click\', convertBBCodeToHtml);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const convertedHtml = convertedHtmlElement.innerHTML;\r\n            navigator.clipboard.writeText(convertedHtml).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n\r\n        // BBCode to HTML conversion function (simple example)\r\n        function bbcodeToHtml(bbcode) {\r\n            const html = bbcode\r\n                .replace(/\\[b\\](.*?)\\[\\/b\\]/g, \'<strong>$1</strong>\')\r\n                .replace(/\\[i\\](.*?)\\[\\/i\\]/g, \'<em>$1</em>\')\r\n                .replace(/\\[u\\](.*?)\\[\\/u\\]/g, \'<u>$1</u>\');\r\n            return html;\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(81, 2, 'Markdown to HTML Converter', 'markdown-to-html-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Markdown Text:</label>\r\n                <textarea class=\"form-control\" id=\"input\" rows=\"5\" placeholder=\"Enter Markdown\"></textarea>\r\n            </div>\r\n        </form>\r\n        <h2>Converted HTML:</h2>\r\n        <div id=\"convertedHtml\"></div>\r\n        <button class=\"btn btn-primary\" id=\"convertButton\">Convert Markdown to HTML</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const convertedHtmlElement = document.getElementById(\'convertedHtml\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function convertMarkdownToHtml() {\r\n            const inputText = inputElement.value;\r\n            const convertedHtml = marked(inputText);\r\n            convertedHtmlElement.innerHTML = convertedHtml;\r\n        }\r\n\r\n        convertButton.addEventListener(\'click\', convertMarkdownToHtml);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const convertedHtml = convertedHtmlElement.innerHTML;\r\n            navigator.clipboard.writeText(convertedHtml).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(82, 2, 'HTML Tags Remover', 'html-tags-remover', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"input\">Input Text with HTML:</label>\r\n                <textarea class=\"form-control\" id=\"input\" rows=\"5\" placeholder=\"Enter Text with HTML\"></textarea>\r\n            </div>\r\n        </form>\r\n        <h2>Text without HTML Tags:</h2>\r\n        <pre id=\"textWithoutTags\"></pre>\r\n        <button class=\"btn btn-primary\" id=\"removeButton\">Remove HTML Tags</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const inputElement = document.getElementById(\'input\');\r\n        const textWithoutTagsElement = document.getElementById(\'textWithoutTags\');\r\n        const removeButton = document.getElementById(\'removeButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function removeHtmlTags() {\r\n            const inputText = inputElement.value;\r\n            const textWithoutTags = inputText.replace(/<\\/?[^>]+(>|$)/g, \"\");\r\n            textWithoutTagsElement.innerText = textWithoutTags;\r\n        }\r\n\r\n        removeButton.addEventListener(\'click\', removeHtmlTags);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const textWithoutTags = textWithoutTagsElement.innerText;\r\n            navigator.clipboard.writeText(textWithoutTags).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(83, 2, 'User Agent Parser', 'user-agent-parser', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"userAgent\">User Agent String:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"userAgent\" placeholder=\"Enter User Agent String\">\r\n            </div>\r\n        </form>\r\n        <h2>Parsed User Agent:</h2>\r\n        <pre id=\"parsedResult\"></pre>\r\n        <button class=\"btn btn-primary\" id=\"parseButton\">Parse User Agent</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script src=\"https://cdnjs.cloudflare.com/ajax/libs/ua-parser-js/0.7.29/ua-parser.min.js\"></script>\r\n    <script>\r\n        const userAgentInput = document.getElementById(\'userAgent\');\r\n        const parsedResultElement = document.getElementById(\'parsedResult\');\r\n        const parseButton = document.getElementById(\'parseButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function parseUserAgent() {\r\n            const userAgentString = userAgentInput.value;\r\n            const parser = new UAParser();\r\n            const result = parser.setUA(userAgentString).getResult();\r\n            const parsedText = JSON.stringify(result, null, 2);\r\n            parsedResultElement.innerText = parsedText;\r\n        }\r\n\r\n        parseButton.addEventListener(\'click\', parseUserAgent);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const parsedText = parsedResultElement.innerText;\r\n            navigator.clipboard.writeText(parsedText).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 12, 'publish'),
(84, 3, 'URL Parser', 'url-parser', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"url\">URL:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"url\" placeholder=\"Enter URL\">\r\n            </div>\r\n        </form>\r\n        <h2>Parsed URL:</h2>\r\n        <pre id=\"parsedResult\"></pre>\r\n        <button class=\"btn btn-primary\" id=\"parseButton\">Parse URL</button>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const urlInput = document.getElementById(\'url\');\r\n        const parsedResultElement = document.getElementById(\'parsedResult\');\r\n        const parseButton = document.getElementById(\'parseButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        function parseURL() {\r\n            const urlString = urlInput.value;\r\n            let parsedText = \'\';\r\n            try {\r\n                const url = new URL(urlString);\r\n                parsedText = `Protocol: ${url.protocol}\\nHostname: ${url.hostname}\\nPort: ${url.port}\\nPath: ${url.pathname}\\nSearch: ${url.search}\\nHash: ${url.hash}`;\r\n            } catch (error) {\r\n                parsedText = \'Invalid URL\';\r\n            }\r\n            parsedResultElement.innerText = parsedText;\r\n        }\r\n\r\n        parseButton.addEventListener(\'click\', parseURL);\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const parsedText = parsedResultElement.innerText;\r\n            navigator.clipboard.writeText(parsedText).then(() => {\r\n                alert(\'Result copied to clipboard\');\r\n            }).catch(err => {\r\n                console.error(\'Unable to copy to clipboard: \', err);\r\n            });\r\n        });\r\n    </script>', '', '', '', '', '', 64, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(85, 2, 'PNG to JPG Converter', 'png-to-jpg-converter', '<form id=\"imageConverterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"pngImage\">Select PNG Image:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"pngImage\" accept=\"image/png\">\r\n            </div>\r\n        </form>\r\n        <div id=\"imagePreview\" style=\"display: none;\">\r\n            <h2>Image Preview:</h2>\r\n            <img id=\"previewImg\" src=\"\" alt=\"Image Preview\" class=\"img-thumbnail\">\r\n        </div>\r\n        <button class=\"btn btn-primary\" id=\"convertButton\">Convert to JPG</button>\r\n        <a class=\"btn btn-success\" id=\"downloadButton\" style=\"display: none\" download=\"converted.jpg\">Download JPG</a>', '', '<script>\r\n        const pngImageInput = document.getElementById(\'pngImage\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const downloadButton = document.getElementById(\'downloadButton\');\r\n        const imagePreview = document.getElementById(\'imagePreview\');\r\n        const previewImg = document.getElementById(\'previewImg\');\r\n\r\n        pngImageInput.addEventListener(\'change\', () => {\r\n            const pngImageFile = pngImageInput.files[0];\r\n            if (!pngImageFile) {\r\n                alert(\'Please select a PNG image.\');\r\n                return;\r\n            }\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                const pngImageData = reader.result;\r\n                previewImg.src = pngImageData;\r\n                imagePreview.style.display = \'block\';\r\n            };\r\n            reader.readAsDataURL(pngImageFile);\r\n        });\r\n\r\n        convertButton.addEventListener(\'click\', () => {\r\n            const pngImageFile = pngImageInput.files[0];\r\n            if (!pngImageFile) {\r\n                alert(\'Please select a PNG image.\');\r\n                return;\r\n            }\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                const pngImageData = reader.result;\r\n                convertToJpgAndDownload(pngImageData);\r\n            };\r\n            reader.readAsDataURL(pngImageFile);\r\n        });\r\n\r\n        function convertToJpgAndDownload(pngImageData) {\r\n            const img = new Image();\r\n            img.src = pngImageData;\r\n            img.onload = function () {\r\n                const canvas = document.createElement(\'canvas\');\r\n                canvas.width = img.width;\r\n                canvas.height = img.height;\r\n                const ctx = canvas.getContext(\'2d\');\r\n                ctx.drawImage(img, 0, 0);\r\n\r\n                // Convert canvas to JPG (quality: 90%)\r\n                const jpgImageData = canvas.toDataURL(\'image/jpeg\', 0.9);\r\n\r\n                // Create a download link for the converted JPG\r\n                downloadButton.href = jpgImageData;\r\n                downloadButton.style.display = \'block\';\r\n            };\r\n        }\r\n    </script>', '', '', '', '', '', 14, 'publish'),
(86, 2, 'PNG to Webp Converter', 'png-to-webp-converter', '<form id=\"imageConverterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"pngImage\">Select PNG Image:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"pngImage\" accept=\"image/png\">\r\n            </div>\r\n        </form>\r\n        <div id=\"imagePreview\" style=\"display: none;\">\r\n            <h2>Image Preview:</h2>\r\n            <img id=\"previewImg\" src=\"\" alt=\"Image Preview\" class=\"img-thumbnail\">\r\n        </div>\r\n        <button class=\"btn btn-primary\" id=\"convertButton\">Convert to WebP</button>\r\n        <a class=\"btn btn-success\" id=\"downloadButton\" style=\"display: none\" download=\"converted.webp\">Download WebP</a>', '', '<script>\r\n        const pngImageInput = document.getElementById(\'pngImage\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const downloadButton = document.getElementById(\'downloadButton\');\r\n        const imagePreview = document.getElementById(\'imagePreview\');\r\n        const previewImg = document.getElementById(\'previewImg\');\r\n\r\n        pngImageInput.addEventListener(\'change\', () => {\r\n            const pngImageFile = pngImageInput.files[0];\r\n            if (!pngImageFile) {\r\n                alert(\'Please select a PNG image.\');\r\n                return;\r\n            }\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                const pngImageData = reader.result;\r\n                previewImg.src = pngImageData;\r\n                imagePreview.style.display = \'block\';\r\n            };\r\n            reader.readAsDataURL(pngImageFile);\r\n        });\r\n\r\n        convertButton.addEventListener(\'click\', () => {\r\n            const pngImageFile = pngImageInput.files[0];\r\n            if (!pngImageFile) {\r\n                alert(\'Please select a PNG image.\');\r\n                return;\r\n            }\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                const pngImageData = reader.result;\r\n                convertToWebpAndDownload(pngImageData);\r\n            };\r\n            reader.readAsDataURL(pngImageFile);\r\n        });\r\n\r\n        function convertToWebpAndDownload(pngImageData) {\r\n            const img = new Image();\r\n            img.src = pngImageData;\r\n            img.onload = function () {\r\n                const canvas = document.createElement(\'canvas\');\r\n                canvas.width = img.width;\r\n                canvas.height = img.height;\r\n                const ctx = canvas.getContext(\'2d\');\r\n                ctx.drawImage(img, 0, 0);\r\n\r\n                // Convert canvas to WebP (quality: 90%)\r\n                canvas.toBlob((blob) => {\r\n                    const url = URL.createObjectURL(blob);\r\n\r\n                    // Create a download link for the converted WebP\r\n                    downloadButton.href = url;\r\n                    downloadButton.style.display = \'block\';\r\n                }, \'image/webp\', 0.9);\r\n            };\r\n        }\r\n    </script>', '', '', '', '', '', 92, 'publish'),
(87, 2, 'PNG TO BMP Converter', 'png-to-bmp-converter', ' <form id=\"imageConverterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"pngImage\">Select PNG Image:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"pngImage\" accept=\"image/png\">\r\n            </div>\r\n        </form>\r\n        <div id=\"imagePreview\" style=\"display: none;\">\r\n            <h2>Image Preview:</h2>\r\n            <img id=\"previewImg\" src=\"\" alt=\"Image Preview\" class=\"img-thumbnail\">\r\n        </div>\r\n        <button class=\"btn btn-primary\" id=\"convertButton\">Convert to BMP</button>\r\n        <a class=\"btn btn-success\" id=\"downloadButton\" style=\"display: none\" download=\"converted.bmp\">Download BMP</a>', '', ' <script>\r\n        const pngImageInput = document.getElementById(\'pngImage\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const downloadButton = document.getElementById(\'downloadButton\');\r\n        const imagePreview = document.getElementById(\'imagePreview\');\r\n        const previewImg = document.getElementById(\'previewImg\');\r\n\r\n        pngImageInput.addEventListener(\'change\', () => {\r\n            const pngImageFile = pngImageInput.files[0];\r\n            if (!pngImageFile) {\r\n                alert(\'Please select a PNG image.\');\r\n                return;\r\n            }\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                const pngImageData = reader.result;\r\n                previewImg.src = pngImageData;\r\n                imagePreview.style.display = \'block\';\r\n            };\r\n            reader.readAsDataURL(pngImageFile);\r\n        });\r\n\r\n        convertButton.addEventListener(\'click\', () => {\r\n            const pngImageFile = pngImageInput.files[0];\r\n            if (!pngImageFile) {\r\n                alert(\'Please select a PNG image.\');\r\n                return;\r\n            }\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                const pngImageData = reader.result;\r\n                convertToBmpAndDownload(pngImageData);\r\n            };\r\n            reader.readAsDataURL(pngImageFile);\r\n        });\r\n\r\n        function convertToBmpAndDownload(pngImageData) {\r\n            const img = new Image();\r\n            img.src = pngImageData;\r\n            img.onload = function () {\r\n                const canvas = document.createElement(\'canvas\');\r\n                canvas.width = img.width;\r\n                canvas.height = img.height;\r\n                const ctx = canvas.getContext(\'2d\');\r\n                ctx.drawImage(img, 0, 0);\r\n\r\n                // Convert canvas to BMP\r\n                const bmpImageData = canvas.toDataURL(\'image/bmp\');\r\n\r\n                // Create a download link for the converted BMP\r\n                downloadButton.href = bmpImageData;\r\n                downloadButton.style.display = \'block\';\r\n            };\r\n        }\r\n    </script>', '', '', '', '', '', 13, 'publish'),
(88, 2, 'PNG to GIF Converter', 'png-to-gif-converter', '<form id=\"imageConverterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"pngImage\">Select PNG Image:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"pngImage\" accept=\"image/png\">\r\n            </div>\r\n        </form>\r\n        <div id=\"imagePreview\" style=\"display: none;\">\r\n            <h2>Image Preview:</h2>\r\n            <img id=\"previewImg\" src=\"\" alt=\"Image Preview\" class=\"img-thumbnail\">\r\n        </div>\r\n        <button class=\"btn btn-primary\" id=\"convertButton\">Convert to GIF</button>\r\n        <a class=\"btn btn-success\" id=\"downloadButton\" style=\"display: none\" download=\"converted.gif\">Download GIF</a>', '', ' <script>\r\n        const pngImageInput = document.getElementById(\'pngImage\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const downloadButton = document.getElementById(\'downloadButton\');\r\n        const imagePreview = document.getElementById(\'imagePreview\');\r\n        const previewImg = document.getElementById(\'previewImg\');\r\n\r\n        pngImageInput.addEventListener(\'change\', () => {\r\n            const pngImageFile = pngImageInput.files[0];\r\n            if (!pngImageFile) {\r\n                alert(\'Please select a PNG image.\');\r\n                return;\r\n            }\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                const pngImageData = reader.result;\r\n                previewImg.src = pngImageData;\r\n                imagePreview.style.display = \'block\';\r\n            };\r\n            reader.readAsDataURL(pngImageFile);\r\n        });\r\n\r\n        convertButton.addEventListener(\'click\', () => {\r\n            const pngImageFile = pngImageInput.files[0];\r\n            if (!pngImageFile) {\r\n                alert(\'Please select a PNG image.\');\r\n                return;\r\n            }\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                const pngImageData = reader.result;\r\n                convertToGifAndDownload(pngImageData);\r\n            };\r\n            reader.readAsDataURL(pngImageFile);\r\n        });\r\n\r\n        function convertToGifAndDownload(pngImageData) {\r\n            const img = new Image();\r\n            img.src = pngImageData;\r\n            img.onload = function () {\r\n                const canvas = document.createElement(\'canvas\');\r\n                canvas.width = img.width;\r\n                canvas.height = img.height;\r\n                const ctx = canvas.getContext(\'2d\');\r\n                ctx.drawImage(img, 0, 0);\r\n\r\n                // Convert canvas to GIF (quality: 0.9)\r\n                const gifImageData = canvas.toDataURL(\'image/gif\', 0.9);\r\n\r\n                // Create a download link for the converted GIF\r\n                downloadButton.href = gifImageData;\r\n                downloadButton.style.display = \'block\';\r\n            };\r\n        }\r\n    </script>', '', '', '', '', '', 11, 'publish'),
(89, 2, 'PNG to ICO Converter', 'png-to-ico-converter', '<form id=\"imageConverterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"pngImage\">Select PNG Image:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"pngImage\" accept=\"image/png\">\r\n            </div>\r\n        </form>\r\n        <div id=\"imagePreview\" style=\"display: none;\">\r\n            <h2>Image Preview:</h2>\r\n            <img id=\"previewImg\" src=\"\" alt=\"Image Preview\" class=\"img-thumbnail\">\r\n        </div>\r\n        <button class=\"btn btn-primary\" id=\"convertButton\">Convert to ICO</button>\r\n        <a class=\"btn btn-success\" id=\"downloadButton\" style=\"display: none\" download=\"converted.ico\">Download ICO</a>', '', '<script>\r\n        const pngImageInput = document.getElementById(\'pngImage\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const downloadButton = document.getElementById(\'downloadButton\');\r\n        const imagePreview = document.getElementById(\'imagePreview\');\r\n        const previewImg = document.getElementById(\'previewImg\');\r\n\r\n        pngImageInput.addEventListener(\'change\', () => {\r\n            const pngImageFile = pngImageInput.files[0];\r\n            if (!pngImageFile) {\r\n                alert(\'Please select a PNG image.\');\r\n                return;\r\n            }\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                const pngImageData = reader.result;\r\n                previewImg.src = pngImageData;\r\n                imagePreview.style.display = \'block\';\r\n            };\r\n            reader.readAsDataURL(pngImageFile);\r\n        });\r\n\r\n        convertButton.addEventListener(\'click\', () => {\r\n            const pngImageFile = pngImageInput.files[0];\r\n            if (!pngImageFile) {\r\n                alert(\'Please select a PNG image.\');\r\n                return;\r\n            }\r\n\r\n            // Convert to ICO and trigger download\r\n            convertToIcoAndDownload(pngImageFile);\r\n        });\r\n\r\n        function convertToIcoAndDownload(pngImageFile) {\r\n            // Create a canvas for resizing to ICO size (e.g., 32x32)\r\n            const canvas = document.createElement(\'canvas\');\r\n            const ctx = canvas.getContext(\'2d\');\r\n            canvas.width = 32;\r\n            canvas.height = 32;\r\n\r\n            const img = new Image();\r\n            img.src = URL.createObjectURL(pngImageFile);\r\n\r\n            img.onload = function () {\r\n                ctx.drawImage(img, 0, 0, 32, 32);\r\n\r\n                // Convert canvas to ICO format\r\n                const blob = canvas.msToBlob(); // For IE/Edge compatibility\r\n                const url = window.URL.createObjectURL(blob);\r\n\r\n                // Create a download link for the converted ICO\r\n                downloadButton.href = url;\r\n                downloadButton.style.display = \'block\';\r\n            };\r\n        }\r\n    </script>', '', '', '', '', '', 55, 'publish'),
(90, 2, 'JPEG to PNG Converter', 'jpeg-to-png-converter', '<form id=\"imageConverterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"jpegImage\">Select JPEG Image:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"jpegImage\" accept=\"image/jpeg\">\r\n            </div>\r\n        </form>\r\n        <div id=\"imagePreview\" style=\"display: none;\">\r\n            <h2>Image Preview:</h2>\r\n            <img id=\"previewImg\" src=\"\" alt=\"Image Preview\" class=\"img-thumbnail\">\r\n        </div>\r\n        <button class=\"btn btn-primary\" id=\"convertButton\">Convert to PNG</button>\r\n        <a class=\"btn btn-success\" id=\"downloadButton\" style=\"display: none\" download=\"converted.png\">Download PNG</a>', '', '<script>\r\n        const jpegImageInput = document.getElementById(\'jpegImage\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const downloadButton = document.getElementById(\'downloadButton\');\r\n        const imagePreview = document.getElementById(\'imagePreview\');\r\n        const previewImg = document.getElementById(\'previewImg\');\r\n\r\n        jpegImageInput.addEventListener(\'change\', () => {\r\n            const jpegImageFile = jpegImageInput.files[0];\r\n            if (!jpegImageFile) {\r\n                alert(\'Please select a JPEG image.\');\r\n                return;\r\n            }\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                const jpegImageData = reader.result;\r\n                previewImg.src = jpegImageData;\r\n                imagePreview.style.display = \'block\';\r\n            };\r\n            reader.readAsDataURL(jpegImageFile);\r\n        });\r\n\r\n        convertButton.addEventListener(\'click\', () => {\r\n            const jpegImageFile = jpegImageInput.files[0];\r\n            if (!jpegImageFile) {\r\n                alert(\'Please select a JPEG image.\');\r\n                return;\r\n            }\r\n\r\n            // Convert to PNG and trigger download\r\n            convertToPngAndDownload(jpegImageFile);\r\n        });\r\n\r\n        function convertToPngAndDownload(jpegImageFile) {\r\n            // Create a canvas for image conversion\r\n            const canvas = document.createElement(\'canvas\');\r\n            const ctx = canvas.getContext(\'2d\');\r\n\r\n            const img = new Image();\r\n            img.src = URL.createObjectURL(jpegImageFile);\r\n\r\n            img.onload = function () {\r\n                canvas.width = img.width;\r\n                canvas.height = img.height;\r\n                ctx.drawImage(img, 0, 0);\r\n\r\n                // Convert canvas to PNG format\r\n                const pngImageData = canvas.toDataURL(\'image/png\');\r\n\r\n                // Create a download link for the converted PNG\r\n                downloadButton.href = pngImageData;\r\n                downloadButton.style.display = \'block\';\r\n            };\r\n        }\r\n    </script>', '', '', '', '', '', 13, 'publish'),
(91, 1, 'JPEG to WebP Converter', 'jpeg-to-webp-converter', '<form id=\"imageConverterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"jpegImage\">Select JPEG Image:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"jpegImage\" accept=\"image/jpeg\">\r\n            </div>\r\n        </form>\r\n        <div id=\"imagePreview\" style=\"display: none;\">\r\n            <h2>Image Preview:</h2>\r\n            <img id=\"previewImg\" src=\"\" alt=\"Image Preview\" class=\"img-thumbnail\">\r\n        </div>\r\n        <button class=\"btn btn-primary\" id=\"convertButton\">Convert to WebP</button>\r\n        <a class=\"btn btn-success\" id=\"downloadButton\" style=\"display: none\" download=\"converted.webp\">Download WebP</a>', '', '<script>\r\n        const jpegImageInput = document.getElementById(\'jpegImage\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const downloadButton = document.getElementById(\'downloadButton\');\r\n        const imagePreview = document.getElementById(\'imagePreview\');\r\n        const previewImg = document.getElementById(\'previewImg\');\r\n\r\n        jpegImageInput.addEventListener(\'change\', () => {\r\n            const jpegImageFile = jpegImageInput.files[0];\r\n            if (!jpegImageFile) {\r\n                alert(\'Please select a JPEG image.\');\r\n                return;\r\n            }\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                const jpegImageData = reader.result;\r\n                previewImg.src = jpegImageData;\r\n                imagePreview.style.display = \'block\';\r\n            };\r\n            reader.readAsDataURL(jpegImageFile);\r\n        });\r\n\r\n        convertButton.addEventListener(\'click\', () => {\r\n            const jpegImageFile = jpegImageInput.files[0];\r\n            if (!jpegImageFile) {\r\n                alert(\'Please select a JPEG image.\');\r\n                return;\r\n            }\r\n\r\n            // Convert to WebP and trigger download\r\n            convertToWebPAndDownload(jpegImageFile);\r\n        });\r\n\r\n        function convertToWebPAndDownload(jpegImageFile) {\r\n            // Create a canvas for image conversion\r\n            const canvas = document.createElement(\'canvas\');\r\n            const ctx = canvas.getContext(\'2d\');\r\n\r\n            const img = new Image();\r\n            img.src = URL.createObjectURL(jpegImageFile);\r\n\r\n            img.onload = function () {\r\n                canvas.width = img.width;\r\n                canvas.height = img.height;\r\n                ctx.drawImage(img, 0, 0);\r\n\r\n                // Convert canvas to WebP format\r\n                canvas.toBlob((blob) => {\r\n                    const url = window.URL.createObjectURL(blob);\r\n\r\n                    // Create a download link for the converted WebP\r\n                    downloadButton.href = url;\r\n                    downloadButton.style.display = \'block\';\r\n                }, \'image/webp\');\r\n            };\r\n        }\r\n    </script>', '', '', '', '', '', 25, 'publish'),
(92, 2, 'JPEG to GIF Converter', 'jpeg-to-gif-converter', '<form id=\"imageConverterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"jpegImage\">Select JPEG Image:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"jpegImage\" accept=\"image/jpeg\">\r\n            </div>\r\n        </form>\r\n        <div id=\"imagePreview\" style=\"display: none;\">\r\n            <h2>Image Preview:</h2>\r\n            <img id=\"previewImg\" src=\"\" alt=\"Image Preview\" class=\"img-thumbnail\">\r\n        </div>\r\n        <button class=\"btn btn-primary\" id=\"convertButton\">Convert to GIF</button>\r\n        <a class=\"btn btn-success\" id=\"downloadButton\" style=\"display: none\" download=\"converted.gif\">Download GIF</a>', '', '<script>\r\n        const jpegImageInput = document.getElementById(\'jpegImage\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const downloadButton = document.getElementById(\'downloadButton\');\r\n        const imagePreview = document.getElementById(\'imagePreview\');\r\n        const previewImg = document.getElementById(\'previewImg\');\r\n\r\n        jpegImageInput.addEventListener(\'change\', () => {\r\n            const jpegImageFile = jpegImageInput.files[0];\r\n            if (!jpegImageFile) {\r\n                alert(\'Please select a JPEG image.\');\r\n                return;\r\n            }\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                const jpegImageData = reader.result;\r\n                previewImg.src = jpegImageData;\r\n                imagePreview.style.display = \'block\';\r\n            };\r\n            reader.readAsDataURL(jpegImageFile);\r\n        });\r\n\r\n        convertButton.addEventListener(\'click\', () => {\r\n            const jpegImageFile = jpegImageInput.files[0];\r\n            if (!jpegImageFile) {\r\n                alert(\'Please select a JPEG image.\');\r\n                return;\r\n            }\r\n\r\n            // Convert to GIF and trigger download\r\n            convertToGifAndDownload(jpegImageFile);\r\n        });\r\n\r\n        function convertToGifAndDownload(jpegImageFile) {\r\n            // Create a canvas for image conversion\r\n            const canvas = document.createElement(\'canvas\');\r\n            const ctx = canvas.getContext(\'2d\');\r\n\r\n            const img = new Image();\r\n            img.src = URL.createObjectURL(jpegImageFile);\r\n\r\n            img.onload = function () {\r\n                canvas.width = img.width;\r\n                canvas.height = img.height;\r\n                ctx.drawImage(img, 0, 0);\r\n\r\n                // Convert canvas to GIF format\r\n                const gifImageData = canvas.toDataURL(\'image/gif\');\r\n\r\n                // Create a download link for the converted GIF\r\n                downloadButton.href = gifImageData;\r\n                downloadButton.style.display = \'block\';\r\n            };\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(93, 2, 'JPEG to ICO Converter', 'jpeg-to-ico-converter', '<form id=\"imageConverterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"jpegImage\">Select JPEG Image:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"jpegImage\" accept=\"image/jpeg\">\r\n            </div>\r\n        </form>\r\n        <div id=\"imagePreview\" style=\"display: none;\">\r\n            <h2>Image Preview:</h2>\r\n            <img id=\"previewImg\" src=\"\" alt=\"Image Preview\" class=\"img-thumbnail\">\r\n        </div>\r\n        <button class=\"btn btn-primary\" id=\"convertButton\">Convert to ICO</button>\r\n        <a class=\"btn btn-success\" id=\"downloadButton\" style=\"display: none\" download=\"converted.ico\">Download ICO</a>', '', '<script>\r\n        const jpegImageInput = document.getElementById(\'jpegImage\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const downloadButton = document.getElementById(\'downloadButton\');\r\n        const imagePreview = document.getElementById(\'imagePreview\');\r\n        const previewImg = document.getElementById(\'previewImg\');\r\n\r\n        jpegImageInput.addEventListener(\'change\', () => {\r\n            const jpegImageFile = jpegImageInput.files[0];\r\n            if (!jpegImageFile) {\r\n                alert(\'Please select a JPEG image.\');\r\n                return;\r\n            }\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                const jpegImageData = reader.result;\r\n                previewImg.src = jpegImageData;\r\n                imagePreview.style.display = \'block\';\r\n            };\r\n            reader.readAsDataURL(jpegImageFile);\r\n        });\r\n\r\n        convertButton.addEventListener(\'click\', () => {\r\n            const jpegImageFile = jpegImageInput.files[0];\r\n            if (!jpegImageFile) {\r\n                alert(\'Please select a JPEG image.\');\r\n                return;\r\n            }\r\n\r\n            // Convert to ICO and trigger download\r\n            convertToIcoAndDownload(jpegImageFile);\r\n        });\r\n\r\n        function convertToIcoAndDownload(jpegImageFile) {\r\n            // Create a canvas for resizing to ICO size (e.g., 32x32)\r\n            const canvas = document.createElement(\'canvas\');\r\n            const ctx = canvas.getContext(\'2d\');\r\n            canvas.width = 32;\r\n            canvas.height = 32;\r\n\r\n            const img = new Image();\r\n            img.src = URL.createObjectURL(jpegImageFile);\r\n\r\n            img.onload = function () {\r\n                ctx.drawImage(img, 0, 0, 32, 32);\r\n\r\n                // Convert canvas to ICO format\r\n                const blob = canvas.msToBlob(); // For IE/Edge compatibility\r\n                const url = window.URL.createObjectURL(blob);\r\n\r\n                // Create a download link for the converted ICO\r\n                downloadButton.href = url;\r\n                downloadButton.style.display = \'block\';\r\n            };\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(94, 2, 'JPEG to BMP Converter', 'jpeg-to-bmp-converter', '<form id=\"imageConverterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"jpegImage\">Select JPEG Image:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"jpegImage\" accept=\"image/jpeg\">\r\n            </div>\r\n        </form>\r\n        <div id=\"imagePreview\" style=\"display: none;\">\r\n            <h2>Image Preview:</h2>\r\n            <img id=\"previewImg\" src=\"\" alt=\"Image Preview\" class=\"img-thumbnail\">\r\n        </div>\r\n        <button class=\"btn btn-primary\" id=\"convertButton\">Convert to BMP</button>\r\n        <a class=\"btn btn-success\" id=\"downloadButton\" style=\"display: none\" download=\"converted.bmp\">Download BMP</a>', '', '<script>\r\n        const jpegImageInput = document.getElementById(\'jpegImage\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const downloadButton = document.getElementById(\'downloadButton\');\r\n        const imagePreview = document.getElementById(\'imagePreview\');\r\n        const previewImg = document.getElementById(\'previewImg\');\r\n\r\n        jpegImageInput.addEventListener(\'change\', () => {\r\n            const jpegImageFile = jpegImageInput.files[0];\r\n            if (!jpegImageFile) {\r\n                alert(\'Please select a JPEG image.\');\r\n                return;\r\n            }\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                const jpegImageData = reader.result;\r\n                previewImg.src = jpegImageData;\r\n                imagePreview.style.display = \'block\';\r\n            };\r\n            reader.readAsDataURL(jpegImageFile);\r\n        });\r\n\r\n        convertButton.addEventListener(\'click\', () => {\r\n            const jpegImageFile = jpegImageInput.files[0];\r\n            if (!jpegImageFile) {\r\n                alert(\'Please select a JPEG image.\');\r\n                return;\r\n            }\r\n\r\n            // Convert to BMP and trigger download\r\n            convertToBmpAndDownload(jpegImageFile);\r\n        });\r\n\r\n        function convertToBmpAndDownload(jpegImageFile) {\r\n            // Create a canvas for image conversion\r\n            const canvas = document.createElement(\'canvas\');\r\n            const ctx = canvas.getContext(\'2d\');\r\n\r\n            const img = new Image();\r\n            img.src = URL.createObjectURL(jpegImageFile);\r\n\r\n            img.onload = function () {\r\n                canvas.width = img.width;\r\n                canvas.height = img.height;\r\n                ctx.drawImage(img, 0, 0);\r\n\r\n                // Convert canvas to BMP format\r\n                const bmpImageData = canvas.toDataURL(\'image/bmp\');\r\n\r\n                // Create a download link for the converted BMP\r\n                downloadButton.href = bmpImageData;\r\n                downloadButton.style.display = \'block\';\r\n            };\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(95, 2, 'WebP to JPEG Converter', 'webp-to-jpeg-converter', '<form id=\"imageConverterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"webpImage\">Select WebP Image:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"webpImage\" accept=\"image/webp\">\r\n            </div>\r\n        </form>\r\n        <div id=\"imagePreview\" style=\"display: none;\">\r\n            <h2>Image Preview:</h2>\r\n            <img id=\"previewImg\" src=\"\" alt=\"Image Preview\" class=\"img-thumbnail\">\r\n        </div>\r\n        <button class=\"btn btn-primary\" id=\"convertButton\">Convert to JPEG</button>\r\n        <a class=\"btn btn-success\" id=\"downloadButton\" style=\"display: none\" download=\"converted.jpg\">Download JPEG</a>', '', '<script>\r\n        const webpImageInput = document.getElementById(\'webpImage\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const downloadButton = document.getElementById(\'downloadButton\');\r\n        const imagePreview = document.getElementById(\'imagePreview\');\r\n        const previewImg = document.getElementById(\'previewImg\');\r\n\r\n        webpImageInput.addEventListener(\'change\', () => {\r\n            const webpImageFile = webpImageInput.files[0];\r\n            if (!webpImageFile) {\r\n                alert(\'Please select a WebP image.\');\r\n                return;\r\n            }\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                const webpImageData = reader.result;\r\n                previewImg.src = webpImageData;\r\n                imagePreview.style.display = \'block\';\r\n            };\r\n            reader.readAsDataURL(webpImageFile);\r\n        });\r\n\r\n        convertButton.addEventListener(\'click\', () => {\r\n            const webpImageFile = webpImageInput.files[0];\r\n            if (!webpImageFile) {\r\n                alert(\'Please select a WebP image.\');\r\n                return;\r\n            }\r\n\r\n            // Convert to JPEG and trigger download\r\n            convertToJpegAndDownload(webpImageFile);\r\n        });\r\n\r\n        function convertToJpegAndDownload(webpImageFile) {\r\n            // Create a canvas for image conversion\r\n            const canvas = document.createElement(\'canvas\');\r\n            const ctx = canvas.getContext(\'2d\');\r\n\r\n            const img = new Image();\r\n            img.src = URL.createObjectURL(webpImageFile);\r\n\r\n            img.onload = function () {\r\n                canvas.width = img.width;\r\n                canvas.height = img.height;\r\n                ctx.drawImage(img, 0, 0);\r\n\r\n                // Convert canvas to JPEG format\r\n                const jpegImageData = canvas.toDataURL(\'image/jpeg\');\r\n\r\n                // Create a download link for the converted JPEG\r\n                downloadButton.href = jpegImageData;\r\n                downloadButton.style.display = \'block\';\r\n            };\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(96, 2, 'Webp to GIF Converter', 'webp-to-gif-converter', '<form id=\"imageConverterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"webpImage\">Select WebP Image:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"webpImage\" accept=\"image/webp\">\r\n            </div>\r\n        </form>\r\n        <div id=\"imagePreview\" style=\"display: none;\">\r\n            <h2>Image Preview:</h2>\r\n            <img id=\"previewImg\" src=\"\" alt=\"Image Preview\" class=\"img-thumbnail\">\r\n        </div>\r\n        <button class=\"btn btn-primary\" id=\"convertButton\">Convert to GIF</button>\r\n        <a class=\"btn btn-success\" id=\"downloadButton\" style=\"display: none\" download=\"converted.gif\">Download GIF</a>', '', '<script>\r\n        const webpImageInput = document.getElementById(\'webpImage\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const downloadButton = document.getElementById(\'downloadButton\');\r\n        const imagePreview = document.getElementById(\'imagePreview\');\r\n        const previewImg = document.getElementById(\'previewImg\');\r\n\r\n        webpImageInput.addEventListener(\'change\', () => {\r\n            const webpImageFile = webpImageInput.files[0];\r\n            if (!webpImageFile) {\r\n                alert(\'Please select a WebP image.\');\r\n                return;\r\n            }\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                const webpImageData = reader.result;\r\n                previewImg.src = webpImageData;\r\n                imagePreview.style.display = \'block\';\r\n            };\r\n            reader.readAsDataURL(webpImageFile);\r\n        });\r\n\r\n        convertButton.addEventListener(\'click\', () => {\r\n            const webpImageFile = webpImageInput.files[0];\r\n            if (!webpImageFile) {\r\n                alert(\'Please select a WebP image.\');\r\n                return;\r\n            }\r\n\r\n            // Convert to GIF and trigger download\r\n            convertToGifAndDownload(webpImageFile);\r\n        });\r\n\r\n        function convertToGifAndDownload(webpImageFile) {\r\n            // Create a canvas for image conversion\r\n            const canvas = document.createElement(\'canvas\');\r\n            const ctx = canvas.getContext(\'2d\');\r\n\r\n            const img = new Image();\r\n            img.src = URL.createObjectURL(webpImageFile);\r\n\r\n            img.onload = function () {\r\n                canvas.width = img.width;\r\n                canvas.height = img.height;\r\n                ctx.drawImage(img, 0, 0);\r\n\r\n                // Convert canvas to GIF format\r\n                const gifImageData = canvas.toDataURL(\'image/gif\');\r\n\r\n                // Create a download link for the converted GIF\r\n                downloadButton.href = gifImageData;\r\n                downloadButton.style.display = \'block\';\r\n            };\r\n        }\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(97, 2, 'WebP to PNG Converter', 'webp-to-png-converter', '  <form id=\"imageConverterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"webpImage\">Select WebP Image:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"webpImage\" accept=\"image/webp\">\r\n            </div>\r\n        </form>\r\n        <div id=\"imagePreview\" style=\"display: none;\">\r\n            <h2>Image Preview:</h2>\r\n            <img id=\"previewImg\" src=\"\" alt=\"Image Preview\" class=\"img-thumbnail\">\r\n        </div>\r\n        <button class=\"btn btn-primary\" id=\"convertButton\">Convert to PNG</button>\r\n        <a class=\"btn btn-success\" id=\"downloadButton\" style=\"display: none\" download=\"converted.png\">Download PNG</a>', '', '<script>\r\n        const webpImageInput = document.getElementById(\'webpImage\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const downloadButton = document.getElementById(\'downloadButton\');\r\n        const imagePreview = document.getElementById(\'imagePreview\');\r\n        const previewImg = document.getElementById(\'previewImg\');\r\n\r\n        webpImageInput.addEventListener(\'change\', () => {\r\n            const webpImageFile = webpImageInput.files[0];\r\n            if (!webpImageFile) {\r\n                alert(\'Please select a WebP image.\');\r\n                return;\r\n            }\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                const webpImageData = reader.result;\r\n                previewImg.src = webpImageData;\r\n                imagePreview.style.display = \'block\';\r\n            };\r\n            reader.readAsDataURL(webpImageFile);\r\n        });\r\n\r\n        convertButton.addEventListener(\'click\', () => {\r\n            const webpImageFile = webpImageInput.files[0];\r\n            if (!webpImageFile) {\r\n                alert(\'Please select a WebP image.\');\r\n                return;\r\n            }\r\n\r\n            // Convert to PNG and trigger download\r\n            convertToPngAndDownload(webpImageFile);\r\n        });\r\n\r\n        function convertToPngAndDownload(webpImageFile) {\r\n            // Create a canvas for image conversion\r\n            const canvas = document.createElement(\'canvas\');\r\n            const ctx = canvas.getContext(\'2d\');\r\n\r\n            const img = new Image();\r\n            img.src = URL.createObjectURL(webpImageFile);\r\n\r\n            img.onload = function () {\r\n                canvas.width = img.width;\r\n                canvas.height = img.height;\r\n                ctx.drawImage(img, 0, 0);\r\n\r\n                // Convert canvas to PNG format\r\n                const pngImageData = canvas.toDataURL(\'image/png\');\r\n\r\n                // Create a download link for the converted PNG\r\n                downloadButton.href = pngImageData;\r\n                downloadButton.style.display = \'block\';\r\n            };\r\n        }\r\n    </script>', '', '', '', '', '', 11, 'publish'),
(98, 2, 'HSLA to HSL Converter', 'hsla-to-hsl-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"hslaInput\">Enter HSLA Color:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"hslaInput\" placeholder=\"e.g., hsla(120, 50%, 50%, 0.5)\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <pre id=\"result\"></pre>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        function convertHSLAtoHSL(hslaColor) {\r\n            const match = hslaColor.match(/hsla\\((\\d+),\\s*(\\d+)%,\\s*(\\d+)%,\\s*(\\d+(\\.\\d+)?)\\)/);\r\n            if (match) {\r\n                const h = match[1];\r\n                const s = match[2];\r\n                const l = match[3];\r\n                const hslColor = `hsl(${h}, ${s}%, ${l}%)`;\r\n                return hslColor;\r\n            }\r\n            return \"Invalid HSLA format!\";\r\n        }\r\n\r\n        const hslaInput = document.getElementById(\'hslaInput\');\r\n        const result = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        hslaInput.addEventListener(\'input\', () => {\r\n            const hslaColor = hslaInput.value;\r\n            const hslColor = convertHSLAtoHSL(hslaColor);\r\n            result.textContent = hslColor;\r\n        });\r\n\r\n        copyButton.addEventListener(\'click\', () => {\r\n            const hslColor = result.textContent;\r\n            const textarea = document.createElement(\'textarea\');\r\n            textarea.value = hslColor;\r\n            document.body.appendChild(textarea);\r\n            textarea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textarea);\r\n            alert(\'Result copied to clipboard: \' + hslColor);\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(99, 2, 'WebP to BMP Converter', 'webp-to-bmp-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"webpFile\">Select a WebP File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"webpFile\" accept=\".webp\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download BMP</button>\r\n        </form>', '', '<script>\r\n        const webpFileInput = document.getElementById(\'webpFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = webpFileInput.files[0];\r\n            if (file) {\r\n                const bmpBlob = await convertWebpToBmp(file);\r\n                if (bmpBlob) {\r\n                    downloadBmp(bmpBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid WebP file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select a WebP file.\');\r\n            }\r\n        });\r\n\r\n        function convertWebpToBmp(webpFile) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    // In a real scenario, you would use a server-side library to perform the conversion.\r\n                    // This example cannot perform the actual conversion due to limitations in client-side JavaScript.\r\n                    // You would need a server to handle this task.\r\n                    reject(null);\r\n                };\r\n                reader.readAsDataURL(webpFile);\r\n            });\r\n        }\r\n\r\n        function downloadBmp(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.bmp\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(100, 2, 'HSLA to HSV Converter', 'hsla-to-hsv-converter', '<form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"hue\">Hue (0-360):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"hue\" placeholder=\"Enter Hue\" min=\"0\" max=\"360\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"saturation\">Saturation (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"saturation\" placeholder=\"Enter Saturation\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"lightness\">Lightness (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"lightness\" placeholder=\"Enter Lightness\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HSV Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert HSLA to HSV\r\n        function hslaToHsva(h, s, l, a) {\r\n            // Convert HSL to HSV\r\n            const v = (l + (s * Math.min(l, 1 - l))) / 2;\r\n            const sV = v === 0 ? 0 : (2 * (1 - (l / v)));\r\n            return [h, sV * 100, v * 100, a];\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hue = parseFloat(document.getElementById(\'hue\').value) || 0;\r\n            const saturation = parseFloat(document.getElementById(\'saturation\').value) || 0;\r\n            const lightness = parseFloat(document.getElementById(\'lightness\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const [h, s, v, a] = hslaToHsva(hue, saturation / 100, lightness / 100, alpha);\r\n            const resultText = `H: ${h.toFixed(2)}Â°, S: ${s.toFixed(2)}%, V: ${v.toFixed(2)}%, A: ${a.toFixed(2)}`;\r\n            document.getElementById(\'result\').textContent = resultText;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Initial result update\r\n        updateResult();\r\n    </script>', '', '', '', '', '', 9, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(101, 2, 'WebP to ICO Converter', 'webp-to-ico-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"webpFile\">Select a WebP File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"webpFile\" accept=\".webp\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download ICO</button>\r\n        </form>', '', '<script>\r\n        const webpFileInput = document.getElementById(\'webpFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = webpFileInput.files[0];\r\n            if (file) {\r\n                const icoBlob = await convertWebpToIco(file);\r\n                if (icoBlob) {\r\n                    downloadIco(icoBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid WebP file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select a WebP file.\');\r\n            }\r\n        });\r\n\r\n        function convertWebpToIco(webpFile) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    // In a real scenario, you would use a server-side library to perform the conversion.\r\n                    // This example cannot perform the actual conversion due to limitations in client-side JavaScript.\r\n                    // You would need a server to handle this task.\r\n                    reject(null);\r\n                };\r\n                reader.readAsDataURL(webpFile);\r\n            });\r\n        }\r\n\r\n        function downloadIco(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.ico\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(102, 2, 'HSLA to RGBA Converter', 'hsla-to-rgba-converter', '<form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"hue\">Hue (0-360):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"hue\" placeholder=\"Enter Hue\" min=\"0\" max=\"360\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"saturation\">Saturation (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"saturation\" placeholder=\"Enter Saturation\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"lightness\">Lightness (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"lightness\" placeholder=\"Enter Lightness\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>RGBA Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert HSLA to RGBA\r\n        function hslaToRgba(h, s, l, a) {\r\n            const chroma = (1 - Math.abs(2 * l - 1)) * s;\r\n            const hPrime = (h / 60) % 6;\r\n            const x = chroma * (1 - Math.abs(hPrime % 2 - 1));\r\n            let r, g, b;\r\n\r\n            if (hPrime >= 0 && hPrime < 1) {\r\n                [r, g, b] = [chroma, x, 0];\r\n            } else if (hPrime >= 1 && hPrime < 2) {\r\n                [r, g, b] = [x, chroma, 0];\r\n            } else if (hPrime >= 2 && hPrime < 3) {\r\n                [r, g, b] = [0, chroma, x];\r\n            } else if (hPrime >= 3 && hPrime < 4) {\r\n                [r, g, b] = [0, x, chroma];\r\n            } else if (hPrime >= 4 && hPrime < 5) {\r\n                [r, g, b] = [x, 0, chroma];\r\n            } else {\r\n                [r, g, b] = [chroma, 0, x];\r\n            }\r\n\r\n            const m = l - chroma / 2;\r\n            r = Math.round((r + m) * 255);\r\n            g = Math.round((g + m) * 255);\r\n            b = Math.round((b + m) * 255);\r\n\r\n            return `rgba(${r}, ${g}, ${b}, ${a})`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hue = parseFloat(document.getElementById(\'hue\').value) || 0;\r\n            const saturation = parseFloat(document.getElementById(\'saturation\').value) || 0;\r\n            const lightness = parseFloat(document.getElementById(\'lightness\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const result = hslaToRgba(hue, saturation / 100, lightness / 100, alpha);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Initial result update\r\n        updateResult();\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(103, 2, 'BMP to JPG Converter', 'bmp-to-jpg-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"bmpFile\">Select a BMP File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"bmpFile\" accept=\".bmp\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download JPG</button>\r\n        </form>', '', ' <script>\r\n        const bmpFileInput = document.getElementById(\'bmpFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = bmpFileInput.files[0];\r\n            if (file) {\r\n                const jpgBlob = await convertBmpToJpg(file);\r\n                if (jpgBlob) {\r\n                    downloadJpg(jpgBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid BMP file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select a BMP file.\');\r\n            }\r\n        });\r\n\r\n        function convertBmpToJpg(bmpFile) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    const img = new Image();\r\n                    img.onload = function () {\r\n                        const canvas = document.createElement(\'canvas\');\r\n                        canvas.width = img.width;\r\n                        canvas.height = img.height;\r\n                        const ctx = canvas.getContext(\'2d\');\r\n                        ctx.drawImage(img, 0, 0, img.width, img.height);\r\n                        canvas.toBlob((blob) => resolve(blob), \'image/jpeg\', 0.9);\r\n                    };\r\n                    img.src = e.target.result;\r\n                };\r\n                reader.readAsDataURL(bmpFile);\r\n            });\r\n        }\r\n\r\n        function downloadJpg(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.jpg\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(104, 2, 'BMP to GIF Converter', 'bmp-to-gif-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"bmpFile\">Select a BMP File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"bmpFile\" accept=\".bmp\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download GIF</button>\r\n        </form>', '', ' <script>\r\n        const bmpFileInput = document.getElementById(\'bmpFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = bmpFileInput.files[0];\r\n            if (file) {\r\n                const gifBlob = await convertBmpToGif(file);\r\n                if (gifBlob) {\r\n                    downloadGif(gifBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid BMP file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select a BMP file.\');\r\n            }\r\n        });\r\n\r\n        function convertBmpToGif(bmpFile) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    const img = new Image();\r\n                    img.onload = function () {\r\n                        const canvas = document.createElement(\'canvas\');\r\n                        canvas.width = img.width;\r\n                        canvas.height = img.height;\r\n                        const ctx = canvas.getContext(\'2d\');\r\n                        ctx.drawImage(img, 0, 0, img.width, img.height);\r\n                        canvas.toBlob((blob) => resolve(blob), \'image/gif\');\r\n                    };\r\n                    img.src = e.target.result;\r\n                };\r\n                reader.readAsDataURL(bmpFile);\r\n            });\r\n        }\r\n\r\n        function downloadGif(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.gif\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(105, 2, 'HSLA to RGB Converter', 'hsla-to-rgb-converter', '<form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"hue\">Hue (0-360):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"hue\" placeholder=\"Enter Hue\" min=\"0\" max=\"360\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"saturation\">Saturation (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"saturation\" placeholder=\"Enter Saturation\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"lightness\">Lightness (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"lightness\" placeholder=\"Enter Lightness\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>RGB Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert HSLA to RGB\r\n        function hslaToRgb(h, s, l, a) {\r\n            const c = (1 - Math.abs(2 * l - 1)) * s;\r\n            const x = c * (1 - Math.abs(((h / 60) % 2) - 1));\r\n            const m = l - c / 2;\r\n            \r\n            let r, g, b;\r\n\r\n            if (h >= 0 && h < 60) {\r\n                [r, g, b] = [c, x, 0];\r\n            } else if (h >= 60 && h < 120) {\r\n                [r, g, b] = [x, c, 0];\r\n            } else if (h >= 120 && h < 180) {\r\n                [r, g, b] = [0, c, x];\r\n            } else if (h >= 180 && h < 240) {\r\n                [r, g, b] = [0, x, c];\r\n            } else if (h >= 240 && h < 300) {\r\n                [r, g, b] = [x, 0, c];\r\n            } else {\r\n                [r, g, b] = [c, 0, x];\r\n            }\r\n\r\n            r = Math.round((r + m) * 255);\r\n            g = Math.round((g + m) * 255);\r\n            b = Math.round((b + m) * 255);\r\n\r\n            return `rgb(${r}, ${g}, ${b})`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hue = parseFloat(document.getElementById(\'hue\').value) || 0;\r\n            const saturation = parseFloat(document.getElementById(\'saturation\').value) || 0;\r\n            const lightness = parseFloat(document.getElementById(\'lightness\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const result = hslaToRgb(hue, saturation / 100, lightness / 100, alpha);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Initial result update\r\n        updateResult();\r\n    </script>\r\n', '', '', '', '', '', 6, 'publish'),
(106, 2, 'BMP to PNG Converter', 'bmp-to-png-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"bmpFile\">Select a BMP File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"bmpFile\" accept=\".bmp\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download PNG</button>\r\n        </form>', '', '<script>\r\n        const bmpFileInput = document.getElementById(\'bmpFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = bmpFileInput.files[0];\r\n            if (file) {\r\n                const pngBlob = await convertBmpToPng(file);\r\n                if (pngBlob) {\r\n                    downloadPng(pngBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid BMP file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select a BMP file.\');\r\n            }\r\n        });\r\n\r\n        function convertBmpToPng(bmpFile) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    const img = new Image();\r\n                    img.onload = function () {\r\n                        const canvas = document.createElement(\'canvas\');\r\n                        canvas.width = img.width;\r\n                        canvas.height = img.height;\r\n                        const ctx = canvas.getContext(\'2d\');\r\n                        ctx.drawImage(img, 0, 0, img.width, img.height);\r\n                        canvas.toBlob((blob) => resolve(blob), \'image/png\');\r\n                    };\r\n                    img.src = e.target.result;\r\n                };\r\n                reader.readAsDataURL(bmpFile);\r\n            });\r\n        }\r\n\r\n        function downloadPng(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.png\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(107, 2, 'BMP to WebP Converter', 'bmp-to-webp-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"bmpFile\">Select a BMP File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"bmpFile\" accept=\".bmp\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download WebP</button>\r\n        </form>', '', '<script>\r\n        const bmpFileInput = document.getElementById(\'bmpFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = bmpFileInput.files[0];\r\n            if (file) {\r\n                const webpBlob = await convertBmpToWebP(file);\r\n                if (webpBlob) {\r\n                    downloadWebP(webpBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid BMP file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select a BMP file.\');\r\n            }\r\n        });\r\n\r\n        function convertBmpToWebP(bmpFile) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    const img = new Image();\r\n                    img.onload = function () {\r\n                        const canvas = document.createElement(\'canvas\');\r\n                        canvas.width = img.width;\r\n                        canvas.height = img.height;\r\n                        const ctx = canvas.getContext(\'2d\');\r\n                        ctx.drawImage(img, 0, 0, img.width, img.height);\r\n                        canvas.toBlob((blob) => resolve(blob), \'image/webp\');\r\n                    };\r\n                    img.src = e.target.result;\r\n                };\r\n                reader.readAsDataURL(bmpFile);\r\n            });\r\n        }\r\n\r\n        function downloadWebP(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.webp\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(108, 2, 'BMP to ICO Converter', 'bmp-to-ico-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"bmpFile\">Select a BMP File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"bmpFile\" accept=\".bmp\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download ICO</button>\r\n        </form>', '', ' <script>\r\n        const bmpFileInput = document.getElementById(\'bmpFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = bmpFileInput.files[0];\r\n            if (file) {\r\n                const icoBlob = await convertBmpToIco(file);\r\n                if (icoBlob) {\r\n                    downloadIco(icoBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid BMP file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select a BMP file.\');\r\n            }\r\n        });\r\n\r\n        function convertBmpToIco(bmpFile) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    // In a real scenario, you would use a server-side library to perform the conversion.\r\n                    // This example cannot perform the actual conversion due to limitations in client-side JavaScript.\r\n                    // You would need a server to handle this task.\r\n                    reject(null);\r\n                };\r\n                reader.readAsDataURL(bmpFile);\r\n            });\r\n        }\r\n\r\n        function downloadIco(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.ico\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(109, 2, 'HSLA to HEXA Converter', 'hsla-to-hexa-converter', ' <form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"hue\">Hue (0-360):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"hue\" placeholder=\"Enter Hue\" min=\"0\" max=\"360\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"saturation\">Saturation (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"saturation\" placeholder=\"Enter Saturation\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"lightness\">Lightness (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"lightness\" placeholder=\"Enter Lightness\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HEXA Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert HSLA to HEXA\r\n        function hslaToHexa(h, s, l, a) {\r\n            const hConverted = ((h % 360) / 360) * 360;\r\n            const sConverted = (s / 100) * 100;\r\n            const lConverted = (l / 100) * 100;\r\n            const aConverted = Math.round(a * 255).toString(16).padStart(2, \'0\');\r\n\r\n            const r = Math.max(0, Math.min(255, Math.round(lConverted + ((sConverted / 100) * Math.min(lConverted, 100 - lConverted)))));\r\n            const g = Math.max(0, Math.min(255, Math.round(lConverted + ((sConverted / 100) * Math.min(lConverted, 100 - lConverted) * ((hConverted < 60 || hConverted > 300) ? 1 : 1 - Math.abs((hConverted / 60) % 2 - 1))))));\r\n            const b = Math.max(0, Math.min(255, Math.round(lConverted + ((sConverted / 100) * Math.min(lConverted, 100 - lConverted) * ((hConverted < 60 || hConverted > 300) ? 0 : Math.abs((hConverted / 60) % 2 - 1))))));\r\n\r\n            const rHex = r.toString(16).padStart(2, \'0\');\r\n            const gHex = g.toString(16).padStart(2, \'0\');\r\n            const bHex = b.toString(16).padStart(2, \'0\');\r\n\r\n            return `#${rHex}${gHex}${bHex}${aConverted}`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hue = parseFloat(document.getElementById(\'hue\').value) || 0;\r\n            const saturation = parseFloat(document.getElementById(\'saturation\').value) || 0;\r\n            const lightness = parseFloat(document.getElementById(\'lightness\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const result = hslaToHexa(hue, saturation, lightness, alpha);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Initial result update\r\n        updateResult();\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HEXA Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HEXA Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 6, 'publish'),
(110, 2, 'ICO to JPG Converter', 'ico-to-jpg-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"icoFile\">Select an ICO File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"icoFile\" accept=\".ico\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download JPG</button>\r\n        </form>', '', '<script>\r\n        const icoFileInput = document.getElementById(\'icoFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = icoFileInput.files[0];\r\n            if (file) {\r\n                const jpgBlob = await convertIcoToJpg(file);\r\n                if (jpgBlob) {\r\n                    downloadJpg(jpgBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid ICO file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select an ICO file.\');\r\n            }\r\n        });\r\n\r\n        function convertIcoToJpg(icoFile) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    const icoDataUrl = e.target.result;\r\n                    const img = new Image();\r\n                    img.onload = function () {\r\n                        const canvas = document.createElement(\'canvas\');\r\n                        canvas.width = img.width;\r\n                        canvas.height = img.height;\r\n                        const ctx = canvas.getContext(\'2d\');\r\n                        ctx.drawImage(img, 0, 0, img.width, img.height);\r\n                        canvas.toBlob((blob) => resolve(blob), \'image/jpeg\', 0.9);\r\n                    };\r\n                    img.src = icoDataUrl;\r\n                };\r\n                reader.readAsDataURL(icoFile);\r\n            });\r\n        }\r\n\r\n        function downloadJpg(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.jpg\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(111, 2, 'ICO to GIF Converter', 'ico-to-gif-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"icoFile\">Select an ICO File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"icoFile\" accept=\".ico\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download GIF</button>\r\n        </form>', '', '<script>\r\n        const icoFileInput = document.getElementById(\'icoFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = icoFileInput.files[0];\r\n            if (file) {\r\n                const gifBlob = await convertIcoToGif(file);\r\n                if (gifBlob) {\r\n                    downloadGif(gifBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid ICO file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select an ICO file.\');\r\n            }\r\n        });\r\n\r\n        function convertIcoToGif(icoFile) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    const icoDataUrl = e.target.result;\r\n                    const img = new Image();\r\n                    img.onload = function () {\r\n                        const canvas = document.createElement(\'canvas\');\r\n                        canvas.width = img.width;\r\n                        canvas.height = img.height;\r\n                        const ctx = canvas.getContext(\'2d\');\r\n                        ctx.drawImage(img, 0, 0, img.width, img.height);\r\n                        canvas.toBlob((blob) => resolve(blob), \'image/gif\');\r\n                    };\r\n                    img.src = icoDataUrl;\r\n                };\r\n                reader.readAsDataURL(icoFile);\r\n            });\r\n        }\r\n\r\n        function downloadGif(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.gif\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(112, 2, 'HSLA to HEX Converter', 'hsla-to-hex-converter', ' <form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"hue\">Hue (0-360):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"hue\" placeholder=\"Enter Hue\" min=\"0\" max=\"360\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"saturation\">Saturation (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"saturation\" placeholder=\"Enter Saturation\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"lightness\">Lightness (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"lightness\" placeholder=\"Enter Lightness\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HEX Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert HSLA to HEX\r\n        function hslaToHex(h, s, l, a) {\r\n            const hConverted = ((h % 360) / 360) * 360;\r\n            const sConverted = (s / 100) * 100;\r\n            const lConverted = (l / 100) * 100;\r\n            const aConverted = Math.round(a * 255).toString(16).padStart(2, \'0\');\r\n\r\n            const r = Math.max(0, Math.min(255, Math.round(lConverted + ((sConverted / 100) * Math.min(lConverted, 100 - lConverted)))));\r\n            const g = Math.max(0, Math.min(255, Math.round(lConverted + ((sConverted / 100) * Math.min(lConverted, 100 - lConverted) * ((hConverted < 60 || hConverted > 300) ? 1 : 1 - Math.abs((hConverted / 60) % 2 - 1))))));\r\n            const b = Math.max(0, Math.min(255, Math.round(lConverted + ((sConverted / 100) * Math.min(lConverted, 100 - lConverted) * ((hConverted < 60 || hConverted > 300) ? 0 : Math.abs((hConverted / 60) % 2 - 1))))));\r\n\r\n            const rHex = r.toString(16).padStart(2, \'0\');\r\n            const gHex = g.toString(16).padStart(2, \'0\');\r\n            const bHex = b.toString(16).padStart(2, \'0\');\r\n\r\n            return `#${rHex}${gHex}${bHex}`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hue = parseFloat(document.getElementById(\'hue\').value) || 0;\r\n            const saturation = parseFloat(document.getElementById(\'saturation\').value) || 0;\r\n            const lightness = parseFloat(document.getElementById(\'lightness\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const result = hslaToHex(hue, saturation, lightness, alpha);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HEX Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HEX Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(113, 2, 'ICO to PNG Converter', 'ico-to-png-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"icoFile\">Select an ICO File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"icoFile\" accept=\".ico\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download PNG</button>\r\n        </form>', '', '<script>\r\n        const icoFileInput = document.getElementById(\'icoFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = icoFileInput.files[0];\r\n            if (file) {\r\n                const pngBlob = await convertIcoToPng(file);\r\n                if (pngBlob) {\r\n                    downloadPng(pngBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid ICO file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select an ICO file.\');\r\n            }\r\n        });\r\n\r\n        function convertIcoToPng(icoFile) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    const icoDataUrl = e.target.result;\r\n                    const img = new Image();\r\n                    img.onload = function () {\r\n                        const canvas = document.createElement(\'canvas\');\r\n                        canvas.width = img.width;\r\n                        canvas.height = img.height;\r\n                        const ctx = canvas.getContext(\'2d\');\r\n                        ctx.drawImage(img, 0, 0, img.width, img.height);\r\n                        canvas.toBlob((blob) => resolve(blob), \'image/png\');\r\n                    };\r\n                    img.src = icoDataUrl;\r\n                };\r\n                reader.readAsDataURL(icoFile);\r\n            });\r\n        }\r\n\r\n        function downloadPng(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.png\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(114, 2, 'ICO to WebP Converter', 'ico-to-webp-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"icoFile\">Select an ICO File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"icoFile\" accept=\".ico\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download WebP</button>\r\n        </form>', '', '<script>\r\n        const icoFileInput = document.getElementById(\'icoFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = icoFileInput.files[0];\r\n            if (file) {\r\n                const webpBlob = await convertIcoToWebP(file);\r\n                if (webpBlob) {\r\n                    downloadWebP(webpBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid ICO file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select an ICO file.\');\r\n            }\r\n        });\r\n\r\n        function convertIcoToWebP(icoFile) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    const icoDataUrl = e.target.result;\r\n                    const img = new Image();\r\n                    img.onload = function () {\r\n                        const canvas = document.createElement(\'canvas\');\r\n                        canvas.width = img.width;\r\n                        canvas.height = img.height;\r\n                        const ctx = canvas.getContext(\'2d\');\r\n                        ctx.drawImage(img, 0, 0, img.width, img.height);\r\n                        canvas.toBlob((blob) => resolve(blob), \'image/webp\');\r\n                    };\r\n                    img.src = icoDataUrl;\r\n                };\r\n                reader.readAsDataURL(icoFile);\r\n            });\r\n        }\r\n\r\n        function downloadWebP(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.webp\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(115, 2, 'HSL to HSLA Converter', 'hsl-to-hsla-converter', '<form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"hue\">Hue (0-360):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"hue\" placeholder=\"Enter Hue\" min=\"0\" max=\"360\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"saturation\">Saturation (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"saturation\" placeholder=\"Enter Saturation\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"lightness\">Lightness (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"lightness\" placeholder=\"Enter Lightness\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HSLA Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hue = parseFloat(document.getElementById(\'hue\').value) || 0;\r\n            const saturation = parseFloat(document.getElementById(\'saturation\').value) || 0;\r\n            const lightness = parseFloat(document.getElementById(\'lightness\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const result = `hsla(${hue}, ${saturation}%, ${lightness}%, ${alpha})`;\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HSLA Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HSLA Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>\r\n', '', '', '', '', '', 6, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(116, 2, 'ICO to BMP Converter', 'ico-to-bmp-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"icoFile\">Select an ICO File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"icoFile\" accept=\".ico\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download BMP</button>\r\n        </form>', '', '<script>\r\n        const icoFileInput = document.getElementById(\'icoFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = icoFileInput.files[0];\r\n            if (file) {\r\n                const bmpBlob = await convertIcoToBmp(file);\r\n                if (bmpBlob) {\r\n                    downloadBmp(bmpBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid ICO file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select an ICO file.\');\r\n            }\r\n        });\r\n\r\n        function convertIcoToBmp(icoFile) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    const icoDataUrl = e.target.result;\r\n                    const img = new Image();\r\n                    img.onload = function () {\r\n                        const canvas = document.createElement(\'canvas\');\r\n                        canvas.width = img.width;\r\n                        canvas.height = img.height;\r\n                        const ctx = canvas.getContext(\'2d\');\r\n                        ctx.drawImage(img, 0, 0, img.width, img.height);\r\n                        canvas.toBlob((blob) => resolve(blob), \'image/bmp\');\r\n                    };\r\n                    img.src = icoDataUrl;\r\n                };\r\n                reader.readAsDataURL(icoFile);\r\n            });\r\n        }\r\n\r\n        function downloadBmp(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.bmp\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(117, 2, 'HSL to HSV Converter', 'hsl-to-hsv-converter', '<form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"hue\">Hue (0-360):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"hue\" placeholder=\"Enter Hue\" min=\"0\" max=\"360\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"saturation\">Saturation (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"saturation\" placeholder=\"Enter Saturation\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"lightness\">Lightness (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"lightness\" placeholder=\"Enter Lightness\" min=\"0\" max=\"100\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HSV Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert HSL to HSV\r\n        function hslToHsv(h, s, l) {\r\n            const hue = h;\r\n            const saturation = (s * l < 50) ? ((s * l) / 50) : (s / (2 - l / 100));\r\n            const value = ((2 * l + s) * 100) / 200;\r\n            \r\n            return `hsv(${hue}, ${saturation}%, ${value}%)`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hue = parseFloat(document.getElementById(\'hue\').value) || 0;\r\n            const saturation = parseFloat(document.getElementById(\'saturation\').value) || 0;\r\n            const lightness = parseFloat(document.getElementById(\'lightness\').value) || 0;\r\n\r\n            const result = hslToHsv(hue, saturation, lightness);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HSV Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HSV Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(118, 2, 'GIF to JPG Converter', 'gif-to-jpg-converter', ' <form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"gifFile\">Select a GIF File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"gifFile\" accept=\".gif\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download JPG</button>\r\n        </form>', '', ' <script>\r\n        const gifFileInput = document.getElementById(\'gifFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = gifFileInput.files[0];\r\n            if (file) {\r\n                const jpgBlob = await convertGifToJpg(file);\r\n                if (jpgBlob) {\r\n                    downloadJpg(jpgBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid GIF file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select a GIF file.\');\r\n            }\r\n        });\r\n\r\n        function convertGifToJpg(gifFile) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    const gifDataUrl = e.target.result;\r\n                    const img = new Image();\r\n                    img.onload = function () {\r\n                        const canvas = document.createElement(\'canvas\');\r\n                        canvas.width = img.width;\r\n                        canvas.height = img.height;\r\n                        const ctx = canvas.getContext(\'2d\');\r\n                        ctx.drawImage(img, 0, 0, img.width, img.height);\r\n                        canvas.toBlob((blob) => resolve(blob), \'image/jpeg\', 0.9);\r\n                    };\r\n                    img.src = gifDataUrl;\r\n                };\r\n                reader.readAsDataURL(gifFile);\r\n            });\r\n        }\r\n\r\n        function downloadJpg(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.jpg\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(119, 2, 'GIF to ICO Converter', 'gif-to-ico-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"gifFile\">Select a GIF File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"gifFile\" accept=\".gif\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download ICO</button>\r\n        </form>', '', '<script>\r\n        const gifFileInput = document.getElementById(\'gifFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = gifFileInput.files[0];\r\n            if (file) {\r\n                const icoBlob = await convertGifToIco(file);\r\n                if (icoBlob) {\r\n                    downloadIco(icoBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid GIF file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select a GIF file.\');\r\n            }\r\n        });\r\n\r\n        function convertGifToIco(gifFile) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    const gifDataUrl = e.target.result;\r\n                    const img = new Image();\r\n                    img.onload = function () {\r\n                        const canvas = document.createElement(\'canvas\');\r\n                        canvas.width = img.width;\r\n                        canvas.height = img.height;\r\n                        const ctx = canvas.getContext(\'2d\');\r\n                        ctx.drawImage(img, 0, 0, img.width, img.height);\r\n                        canvas.toBlob((blob) => resolve(blob), \'image/x-icon\');\r\n                    };\r\n                    img.src = gifDataUrl;\r\n                };\r\n                reader.readAsDataURL(gifFile);\r\n            });\r\n        }\r\n\r\n        function downloadIco(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.ico\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(120, 2, 'HSL to RGBA Converter', 'hsl-to-rgba-converter', '<form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"hue\">Hue (0-360):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"hue\" placeholder=\"Enter Hue\" min=\"0\" max=\"360\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"saturation\">Saturation (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"saturation\" placeholder=\"Enter Saturation\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"lightness\">Lightness (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"lightness\" placeholder=\"Enter Lightness\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>RGBA Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert HSL to RGBA\r\n        function hslToRgba(h, s, l, a) {\r\n            const hConverted = ((h % 360) / 360) * 360;\r\n            const sConverted = (s / 100) * 100;\r\n            const lConverted = (l / 100) * 100;\r\n            const aConverted = Math.round(a * 255);\r\n\r\n            const c = (1 - Math.abs(2 * lConverted - 1)) * sConverted;\r\n            const x = c * (1 - Math.abs(((hConverted / 60) % 2) - 1));\r\n            const m = lConverted - c / 2;\r\n\r\n            let r, g, b;\r\n\r\n            if (hConverted >= 0 && hConverted < 60) {\r\n                r = c;\r\n                g = x;\r\n                b = 0;\r\n            } else if (hConverted >= 60 && hConverted < 120) {\r\n                r = x;\r\n                g = c;\r\n                b = 0;\r\n            } else if (hConverted >= 120 && hConverted < 180) {\r\n                r = 0;\r\n                g = c;\r\n                b = x;\r\n            } else if (hConverted >= 180 && hConverted < 240) {\r\n                r = 0;\r\n                g = x;\r\n                b = c;\r\n            } else if (hConverted >= 240 && hConverted < 300) {\r\n                r = x;\r\n                g = 0;\r\n                b = c;\r\n            } else {\r\n                r = c;\r\n                g = 0;\r\n                b = x;\r\n            }\r\n\r\n            r = Math.round((r + m) * 255);\r\n            g = Math.round((g + m) * 255);\r\n            b = Math.round((b + m) * 255);\r\n\r\n            return `rgba(${r}, ${g}, ${b}, ${aConverted})`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hue = parseFloat(document.getElementById(\'hue\').value) || 0;\r\n            const saturation = parseFloat(document.getElementById(\'saturation\').value) || 0;\r\n            const lightness = parseFloat(document.getElementById(\'lightness\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const result = hslToRgba(hue, saturation, lightness, alpha);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>RGBA Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>RGBA Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(121, 2, 'GIF to PNG Converter', 'gif-to-png-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"gifFile\">Select a GIF File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"gifFile\" accept=\".gif\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download PNG</button>\r\n        </form>', '', ' <script>\r\n        const gifFileInput = document.getElementById(\'gifFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = gifFileInput.files[0];\r\n            if (file) {\r\n                const pngBlob = await convertGifToPng(file);\r\n                if (pngBlob) {\r\n                    downloadPng(pngBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid GIF file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select a GIF file.\');\r\n            }\r\n        });\r\n\r\n        function convertGifToPng(gifFile) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    const gifDataUrl = e.target.result;\r\n                    const img = new Image();\r\n                    img.onload = function () {\r\n                        const canvas = document.createElement(\'canvas\');\r\n                        canvas.width = img.width;\r\n                        canvas.height = img.height;\r\n                        const ctx = canvas.getContext(\'2d\');\r\n                        ctx.drawImage(img, 0, 0, img.width, img.height);\r\n                        canvas.toBlob((blob) => resolve(blob), \'image/png\');\r\n                    };\r\n                    img.src = gifDataUrl;\r\n                };\r\n                reader.readAsDataURL(gifFile);\r\n            });\r\n        }\r\n\r\n        function downloadPng(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.png\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 11, 'publish'),
(122, 2, 'GIF to WebP Converter', 'gif-to-webp-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"gifFile\">Select a GIF File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"gifFile\" accept=\".gif\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download WebP</button>\r\n        </form>', '', '<script>\r\n        const gifFileInput = document.getElementById(\'gifFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = gifFileInput.files[0];\r\n            if (file) {\r\n                const webpBlob = await convertGifToWebP(file);\r\n                if (webpBlob) {\r\n                    downloadWebP(webpBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid GIF file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select a GIF file.\');\r\n            }\r\n        });\r\n\r\n        function convertGifToWebP(gifFile) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    const gifDataUrl = e.target.result;\r\n                    const img = new Image();\r\n                    img.onload = function () {\r\n                        const canvas = document.createElement(\'canvas\');\r\n                        canvas.width = img.width;\r\n                        canvas.height = img.height;\r\n                        const ctx = canvas.getContext(\'2d\');\r\n                        ctx.drawImage(img, 0, 0, img.width, img.height);\r\n                        canvas.toBlob((blob) => resolve(blob), \'image/webp\');\r\n                    };\r\n                    img.src = gifDataUrl;\r\n                };\r\n                reader.readAsDataURL(gifFile);\r\n            });\r\n        }\r\n\r\n        function downloadWebP(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.webp\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(123, 2, 'HSL to RGB Converter', 'hsl-to-rgb-converter', ' <form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"hue\">Hue (0-360):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"hue\" placeholder=\"Enter Hue\" min=\"0\" max=\"360\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"saturation\">Saturation (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"saturation\" placeholder=\"Enter Saturation\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"lightness\">Lightness (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"lightness\" placeholder=\"Enter Lightness\" min=\"0\" max=\"100\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>RGB Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        // Function to convert HSL to RGB\r\n        function hslToRgb(h, s, l) {\r\n            const hConverted = ((h % 360) / 360) * 360;\r\n            const sConverted = (s / 100) * 100;\r\n            const lConverted = (l / 100) * 100;\r\n\r\n            const c = (1 - Math.abs(2 * lConverted - 1)) * sConverted;\r\n            const x = c * (1 - Math.abs(((hConverted / 60) % 2) - 1));\r\n            const m = lConverted - c / 2;\r\n\r\n            let r, g, b;\r\n\r\n            if (hConverted >= 0 && hConverted < 60) {\r\n                r = c;\r\n                g = x;\r\n                b = 0;\r\n            } else if (hConverted >= 60 && hConverted < 120) {\r\n                r = x;\r\n                g = c;\r\n                b = 0;\r\n            } else if (hConverted >= 120 && hConverted < 180) {\r\n                r = 0;\r\n                g = c;\r\n                b = x;\r\n            } else if (hConverted >= 180 && hConverted < 240) {\r\n                r = 0;\r\n                g = x;\r\n                b = c;\r\n            } else if (hConverted >= 240 && hConverted < 300) {\r\n                r = x;\r\n                g = 0;\r\n                b = c;\r\n            } else {\r\n                r = c;\r\n                g = 0;\r\n                b = x;\r\n            }\r\n\r\n            r = Math.round((r + m) * 255);\r\n            g = Math.round((g + m) * 255);\r\n            b = Math.round((b + m) * 255);\r\n\r\n            return `rgb(${r}, ${g}, ${b})`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hue = parseFloat(document.getElementById(\'hue\').value) || 0;\r\n            const saturation = parseFloat(document.getElementById(\'saturation\').value) || 0;\r\n            const lightness = parseFloat(document.getElementById(\'lightness\').value) || 0;\r\n\r\n            const result = hslToRgb(hue, saturation, lightness);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>RGB Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>RGB Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(124, 2, 'HSL to HEXA Converter', 'hsl-to-hexa-converter', ' <form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"hue\">Hue (0-360):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"hue\" placeholder=\"Enter Hue\" min=\"0\" max=\"360\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"saturation\">Saturation (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"saturation\" placeholder=\"Enter Saturation\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"lightness\">Lightness (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"lightness\" placeholder=\"Enter Lightness\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HEXA Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert HSL to HEXA\r\n        function hslToHexa(h, s, l, a) {\r\n            const hConverted = ((h % 360) / 360) * 360;\r\n            const sConverted = (s / 100) * 100;\r\n            const lConverted = (l / 100) * 100;\r\n            const aConverted = Math.round(a * 255);\r\n\r\n            const c = (1 - Math.abs(2 * lConverted - 1)) * sConverted;\r\n            const x = c * (1 - Math.abs(((hConverted / 60) % 2) - 1));\r\n            const m = lConverted - c / 2;\r\n\r\n            let r, g, b;\r\n\r\n            if (hConverted >= 0 && hConverted < 60) {\r\n                r = c;\r\n                g = x;\r\n                b = 0;\r\n            } else if (hConverted >= 60 && hConverted < 120) {\r\n                r = x;\r\n                g = c;\r\n                b = 0;\r\n            } else if (hConverted >= 120 && hConverted < 180) {\r\n                r = 0;\r\n                g = c;\r\n                b = x;\r\n            } else if (hConverted >= 180 && hConverted < 240) {\r\n                r = 0;\r\n                g = x;\r\n                b = c;\r\n            } else if (hConverted >= 240 && hConverted < 300) {\r\n                r = x;\r\n                g = 0;\r\n                b = c;\r\n            } else {\r\n                r = c;\r\n                g = 0;\r\n                b = x;\r\n            }\r\n\r\n            r = Math.round((r + m) * 255);\r\n            g = Math.round((g + m) * 255);\r\n            b = Math.round((b + m) * 255);\r\n\r\n            const rHex = r.toString(16).padStart(2, \'0\');\r\n            const gHex = g.toString(16).padStart(2, \'0\');\r\n            const bHex = b.toString(16).padStart(2, \'0\');\r\n            const aHex = aConverted.toString(16).padStart(2, \'0\');\r\n\r\n            return `#${rHex}${gHex}${bHex}${aHex}`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hue = parseFloat(document.getElementById(\'hue\').value) || 0;\r\n            const saturation = parseFloat(document.getElementById(\'saturation\').value) || 0;\r\n            const lightness = parseFloat(document.getElementById(\'lightness\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const result = hslToHexa(hue, saturation, lightness, alpha);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HEXA Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HEXA Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(125, 2, 'HSL to HEX Converter', 'hsl-to-hex-converter', '<form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"hue\">Hue (0-360):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"hue\" placeholder=\"Enter Hue\" min=\"0\" max=\"360\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"saturation\">Saturation (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"saturation\" placeholder=\"Enter Saturation\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"lightness\">Lightness (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"lightness\" placeholder=\"Enter Lightness\" min=\"0\" max=\"100\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HEX Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert HSL to HEX\r\n        function hslToHex(h, s, l) {\r\n            const hConverted = ((h % 360) / 360) * 360;\r\n            const sConverted = (s / 100) * 100;\r\n            const lConverted = (l / 100) * 100;\r\n\r\n            const c = (1 - Math.abs(2 * lConverted - 1)) * sConverted;\r\n            const x = c * (1 - Math.abs(((hConverted / 60) % 2) - 1));\r\n            const m = lConverted - c / 2;\r\n\r\n            let r, g, b;\r\n\r\n            if (hConverted >= 0 && hConverted < 60) {\r\n                r = c;\r\n                g = x;\r\n                b = 0;\r\n            } else if (hConverted >= 60 && hConverted < 120) {\r\n                r = x;\r\n                g = c;\r\n                b = 0;\r\n            } else if (hConverted >= 120 && hConverted < 180) {\r\n                r = 0;\r\n                g = c;\r\n                b = x;\r\n            } else if (hConverted >= 180 && hConverted < 240) {\r\n                r = 0;\r\n                g = x;\r\n                b = c;\r\n            } else if (hConverted >= 240 && hConverted < 300) {\r\n                r = x;\r\n                g = 0;\r\n                b = c;\r\n            } else {\r\n                r = c;\r\n                g = 0;\r\n                b = x;\r\n            }\r\n\r\n            r = Math.round((r + m) * 255);\r\n            g = Math.round((g + m) * 255);\r\n            b = Math.round((b + m) * 255);\r\n\r\n            const rHex = r.toString(16).padStart(2, \'0\');\r\n            const gHex = g.toString(16).padStart(2, \'0\');\r\n            const bHex = b.toString(16).padStart(2, \'0\');\r\n\r\n            return `#${rHex}${gHex}${bHex}`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hue = parseFloat(document.getElementById(\'hue\').value) || 0;\r\n            const saturation = parseFloat(document.getElementById(\'saturation\').value) || 0;\r\n            const lightness = parseFloat(document.getElementById(\'lightness\').value) || 0;\r\n\r\n            const result = hslToHex(hue, saturation, lightness);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HEX Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HEX Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(126, 2, 'HSV to HSLA converter', 'hsv-to-hsla-converter', ' <form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"hue\">Hue (0-360):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"hue\" placeholder=\"Enter Hue\" min=\"0\" max=\"360\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"saturation\">Saturation (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"saturation\" placeholder=\"Enter Saturation\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"value\">Value (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"value\" placeholder=\"Enter Value\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HSLA Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert HSV to HSLA\r\n        function hsvToHsla(h, s, v, a) {\r\n            const hConverted = ((h % 360) / 360) * 360;\r\n            const sConverted = (s / 100) * 100;\r\n            const vConverted = (v / 100) * 100;\r\n\r\n            const l = (2 - sConverted / 100) * (vConverted / 100) / 2;\r\n            const slDenominator = l < 0.5 ? l * 2 : (2 - l) * 2;\r\n            const sLuminance = slDenominator === 0 ? 0 : (sConverted / 100) / slDenominator;\r\n\r\n            const aConverted = Math.round(a * 255);\r\n\r\n            return `hsla(${hConverted}, ${sLuminance * 100}%, ${l * 100}%, ${aConverted / 255})`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hue = parseFloat(document.getElementById(\'hue\').value) || 0;\r\n            const saturation = parseFloat(document.getElementById(\'saturation\').value) || 0;\r\n            const value = parseFloat(document.getElementById(\'value\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const result = hsvToHsla(hue, saturation, value, alpha);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HSLA Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HSLA Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(127, 2, 'HSV to HSL converter', 'hsv-to-hsl-converter', '<form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"hue\">Hue (0-360):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"hue\" placeholder=\"Enter Hue\" min=\"0\" max=\"360\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"saturation\">Saturation (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"saturation\" placeholder=\"Enter Saturation\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"value\">Value (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"value\" placeholder=\"Enter Value\" min=\"0\" max=\"100\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HSL Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert HSV to HSL\r\n        function hsvToHsl(h, s, v) {\r\n            const hConverted = ((h % 360) / 360) * 360;\r\n            const sConverted = (s / 100) * 100;\r\n            const vConverted = (v / 100) * 100;\r\n\r\n            const l = (2 - sConverted / 100) * (vConverted / 100) / 2;\r\n            const slDenominator = l < 0.5 ? l * 2 : (2 - l) * 2;\r\n            const sLuminance = slDenominator === 0 ? 0 : (sConverted / 100) / slDenominator;\r\n\r\n            return `hsl(${hConverted}, ${sLuminance * 100}%, ${l * 100}%)`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hue = parseFloat(document.getElementById(\'hue\').value) || 0;\r\n            const saturation = parseFloat(document.getElementById(\'saturation\').value) || 0;\r\n            const value = parseFloat(document.getElementById(\'value\').value) || 0;\r\n\r\n            const result = hsvToHsl(hue, saturation, value);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HSL Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HSL Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 10, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(128, 2, 'HSV to RGBA converter', 'hsv-to-rgba-converter', ' <form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"hue\">Hue (0-360):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"hue\" placeholder=\"Enter Hue\" min=\"0\" max=\"360\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"saturation\">Saturation (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"saturation\" placeholder=\"Enter Saturation\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"value\">Value (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"value\" placeholder=\"Enter Value\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>RGBA Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert HSV to RGBA\r\n        function hsvToRgba(h, s, v, a) {\r\n            const hConverted = ((h % 360) / 360) * 360;\r\n            const sConverted = (s / 100) * 100;\r\n            const vConverted = (v / 100) * 100;\r\n\r\n            const c = (vConverted / 100) * (sConverted / 100);\r\n            const x = c * (1 - Math.abs(((hConverted / 60) % 2) - 1));\r\n            const m = (vConverted / 100) - c;\r\n\r\n            let r, g, b;\r\n\r\n            if (hConverted >= 0 && hConverted < 60) {\r\n                r = c;\r\n                g = x;\r\n                b = 0;\r\n            } else if (hConverted >= 60 && hConverted < 120) {\r\n                r = x;\r\n                g = c;\r\n                b = 0;\r\n            } else if (hConverted >= 120 && hConverted < 180) {\r\n                r = 0;\r\n                g = c;\r\n                b = x;\r\n            } else if (hConverted >= 180 && hConverted < 240) {\r\n                r = 0;\r\n                g = x;\r\n                b = c;\r\n            } else if (hConverted >= 240 && hConverted < 300) {\r\n                r = x;\r\n                g = 0;\r\n                b = c;\r\n            } else {\r\n                r = c;\r\n                g = 0;\r\n                b = x;\r\n            }\r\n\r\n            const rValue = Math.round((r + m) * 255);\r\n            const gValue = Math.round((g + m) * 255);\r\n            const bValue = Math.round((b + m) * 255);\r\n            const aValue = Math.round(a * 255);\r\n\r\n            return `rgba(${rValue}, ${gValue}, ${bValue}, ${aValue / 255})`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hue = parseFloat(document.getElementById(\'hue\').value) || 0;\r\n            const saturation = parseFloat(document.getElementById(\'saturation\').value) || 0;\r\n            const value = parseFloat(document.getElementById(\'value\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const result = hsvToRgba(hue, saturation, value, alpha);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>RGBA Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>RGBA Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(129, 2, 'GIF to BMP Converter', 'gif-to-bmp-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"gifFile\">Select a GIF File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"gifFile\" accept=\".gif\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download BMP</button>\r\n        </form>', '', '<script>\r\n        const gifFileInput = document.getElementById(\'gifFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = gifFileInput.files[0];\r\n            if (file) {\r\n                const bmpBlob = await convertGifToBmp(file);\r\n                if (bmpBlob) {\r\n                    downloadBmp(bmpBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid GIF file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select a GIF file.\');\r\n            }\r\n        });\r\n\r\n        function convertGifToBmp(gifFile) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    const gifDataUrl = e.target.result;\r\n                    const img = new Image();\r\n                    img.onload = function () {\r\n                        const canvas = document.createElement(\'canvas\');\r\n                        canvas.width = img.width;\r\n                        canvas.height = img.height;\r\n                        const ctx = canvas.getContext(\'2d\');\r\n                        ctx.drawImage(img, 0, 0, img.width, img.height);\r\n                        canvas.toBlob((blob) => resolve(blob), \'image/bmp\');\r\n                    };\r\n                    img.src = gifDataUrl;\r\n                };\r\n                reader.readAsDataURL(gifFile);\r\n            });\r\n        }\r\n\r\n        function downloadBmp(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.bmp\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(130, 2, 'HSV to RGB converter', 'hsv-to-rgb-converter', ' <form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"hue\">Hue (0-360):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"hue\" placeholder=\"Enter Hue\" min=\"0\" max=\"360\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"saturation\">Saturation (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"saturation\" placeholder=\"Enter Saturation\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"value\">Value (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"value\" placeholder=\"Enter Value\" min=\"0\" max=\"100\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>RGB Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert HSV to RGB\r\n        function hsvToRgb(h, s, v) {\r\n            const hConverted = ((h % 360) / 360) * 360;\r\n            const sConverted = (s / 100) * 100;\r\n            const vConverted = (v / 100) * 100;\r\n\r\n            const c = (vConverted / 100) * (sConverted / 100);\r\n            const x = c * (1 - Math.abs(((hConverted / 60) % 2) - 1));\r\n            const m = (vConverted / 100) - c;\r\n\r\n            let r, g, b;\r\n\r\n            if (hConverted >= 0 && hConverted < 60) {\r\n                r = c;\r\n                g = x;\r\n                b = 0;\r\n            } else if (hConverted >= 60 && hConverted < 120) {\r\n                r = x;\r\n                g = c;\r\n                b = 0;\r\n            } else if (hConverted >= 120 && hConverted < 180) {\r\n                r = 0;\r\n                g = c;\r\n                b = x;\r\n            } else if (hConverted >= 180 && hConverted < 240) {\r\n                r = 0;\r\n                g = x;\r\n                b = c;\r\n            } else if (hConverted >= 240 && hConverted < 300) {\r\n                r = x;\r\n                g = 0;\r\n                b = c;\r\n            } else {\r\n                r = c;\r\n                g = 0;\r\n                b = x;\r\n            }\r\n\r\n            const rValue = Math.round((r + m) * 255);\r\n            const gValue = Math.round((g + m) * 255);\r\n            const bValue = Math.round((b + m) * 255);\r\n\r\n            return `rgb(${rValue}, ${gValue}, ${bValue})`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hue = parseFloat(document.getElementById(\'hue\').value) || 0;\r\n            const saturation = parseFloat(document.getElementById(\'saturation\').value) || 0;\r\n            const value = parseFloat(document.getElementById(\'value\').value) || 0;\r\n\r\n            const result = hsvToRgb(hue, saturation, value);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>RGB Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>RGB Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(131, 2, 'HEIC to PNG Converter', 'heic-to-png-converter', ' <form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"heicFile\">Select a HEIC File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"heicFile\" accept=\".heic, .heif\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download PNG</button>\r\n        </form>', '', '<script src=\"https://cdnjs.cloudflare.com/ajax/libs/heic2any/5.1.2/heic2any.js\"></script>\r\n    <script>\r\n        const heicFileInput = document.getElementById(\'heicFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = heicFileInput.files[0];\r\n            if (file) {\r\n                const pngBlob = await convertHeicToPng(file);\r\n                if (pngBlob) {\r\n                    downloadPng(pngBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid HEIC file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select a HEIC file.\');\r\n            }\r\n        });\r\n\r\n        async function convertHeicToPng(heicFile) {\r\n            try {\r\n                const pngBlob = await heic2any({\r\n                    blob: heicFile,\r\n                    toType: \'image/png\',\r\n                });\r\n                return pngBlob;\r\n            } catch (error) {\r\n                console.error(error);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        function downloadPng(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.png\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(132, 2, 'HSV to HEXA converter', 'hsv-to-hexa-converter', ' <form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"hue\">Hue (0-360):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"hue\" placeholder=\"Enter Hue\" min=\"0\" max=\"360\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"saturation\">Saturation (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"saturation\" placeholder=\"Enter Saturation\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"value\">Value (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"value\" placeholder=\"Enter Value\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HEXA Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '\r\n    <script>\r\n        // Function to convert HSV to HEXA\r\n        function hsvToHexa(h, s, v, a) {\r\n            const hConverted = ((h % 360) / 360) * 360;\r\n            const sConverted = (s / 100) * 100;\r\n            const vConverted = (v / 100) * 100;\r\n\r\n            const c = (vConverted / 100) * (sConverted / 100);\r\n            const x = c * (1 - Math.abs(((hConverted / 60) % 2) - 1));\r\n            const m = (vConverted / 100) - c;\r\n\r\n            let r, g, b;\r\n\r\n            if (hConverted >= 0 && hConverted < 60) {\r\n                r = c;\r\n                g = x;\r\n                b = 0;\r\n            } else if (hConverted >= 60 && hConverted < 120) {\r\n                r = x;\r\n                g = c;\r\n                b = 0;\r\n            } else if (hConverted >= 120 && hConverted < 180) {\r\n                r = 0;\r\n                g = c;\r\n                b = x;\r\n            } else if (hConverted >= 180 && hConverted < 240) {\r\n                r = 0;\r\n                g = x;\r\n                b = c;\r\n            } else if (hConverted >= 240 && hConverted < 300) {\r\n                r = x;\r\n                g = 0;\r\n                b = c;\r\n            } else {\r\n                r = c;\r\n                g = 0;\r\n                b = x;\r\n            }\r\n\r\n            const rValue = Math.round((r + m) * 255);\r\n            const gValue = Math.round((g + m) * 255);\r\n            const bValue = Math.round((b + m) * 255);\r\n            const aValue = Math.round(a * 255);\r\n\r\n            // Convert RGB to HEX\r\n            const rgbHex = \"#\" + ((1 << 24) | (rValue << 16) | (gValue << 8) | bValue).toString(16).slice(1).toUpperCase();\r\n            \r\n            // Combine with alpha\r\n            const hexaResult = rgbHex + (Math.round(aValue / 255 * 100)).toString(16).toUpperCase();\r\n\r\n            return hexaResult;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hue = parseFloat(document.getElementById(\'hue\').value) || 0;\r\n            const saturation = parseFloat(document.getElementById(\'saturation\').value) || 0;\r\n            const value = parseFloat(document.getElementById(\'value\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const result = hsvToHexa(hue, saturation, value, alpha);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HEXA Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HEXA Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(133, 2, 'HSV to HEX converter', 'hsv-to-hex-converter', '<form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"hue\">Hue (0-360):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"hue\" placeholder=\"Enter Hue\" min=\"0\" max=\"360\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"saturation\">Saturation (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"saturation\" placeholder=\"Enter Saturation\" min=\"0\" max=\"100\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"value\">Value (0-100%):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"value\" placeholder=\"Enter Value\" min=\"0\" max=\"100\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HEX Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert HSV to HEX\r\n        function hsvToHex(h, s, v) {\r\n            const hConverted = ((h % 360) / 360) * 360;\r\n            const sConverted = (s / 100) * 100;\r\n            const vConverted = (v / 100) * 100;\r\n\r\n            const c = (vConverted / 100) * (sConverted / 100);\r\n            const x = c * (1 - Math.abs(((hConverted / 60) % 2) - 1));\r\n            const m = (vConverted / 100) - c;\r\n\r\n            let r, g, b;\r\n\r\n            if (hConverted >= 0 && hConverted < 60) {\r\n                r = c;\r\n                g = x;\r\n                b = 0;\r\n            } else if (hConverted >= 60 && hConverted < 120) {\r\n                r = x;\r\n                g = c;\r\n                b = 0;\r\n            } else if (hConverted >= 120 && hConverted < 180) {\r\n                r = 0;\r\n                g = c;\r\n                b = x;\r\n            } else if (hConverted >= 180 && hConverted < 240) {\r\n                r = 0;\r\n                g = x;\r\n                b = c;\r\n            } else if (hConverted >= 240 && hConverted < 300) {\r\n                r = x;\r\n                g = 0;\r\n                b = c;\r\n            } else {\r\n                r = c;\r\n                g = 0;\r\n                b = x;\r\n            }\r\n\r\n            const rValue = Math.round((r + m) * 255);\r\n            const gValue = Math.round((g + m) * 255);\r\n            const bValue = Math.round((b + m) * 255);\r\n\r\n            // Convert RGB to HEX\r\n            const hexResult = \"#\" + ((1 << 24) | (rValue << 16) | (gValue << 8) | bValue).toString(16).slice(1).toUpperCase();\r\n\r\n            return hexResult;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hue = parseFloat(document.getElementById(\'hue\').value) || 0;\r\n            const saturation = parseFloat(document.getElementById(\'saturation\').value) || 0;\r\n            const value = parseFloat(document.getElementById(\'value\').value) || 0;\r\n\r\n            const result = hsvToHex(hue, saturation, value);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HEX Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HEX Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(134, 2, 'HEIC to GIF Converter', 'heic-to-gif-converter', '<form id=\"converterForm\" enctype=\"multipart/form-data\">\r\n            <div class=\"form-group\">\r\n                <label for=\"heicFile\">Select a HEIC File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"heicFile\" accept=\".heic, .heif\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download GIF</button>\r\n        </form>', '', ' <script>\r\n        const heicFileInput = document.getElementById(\'heicFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const converterForm = document.getElementById(\'converterForm\');\r\n\r\n        convertButton.addEventListener(\'click\', () => {\r\n            const file = heicFileInput.files[0];\r\n            if (file) {\r\n                // Create a FormData object and append the selected file\r\n                const formData = new FormData();\r\n                formData.append(\'heicFile\', file);\r\n\r\n                // Send the FormData to the server for conversion\r\n                fetch(\'/convert-heic-to-gif\', {\r\n                    method: \'POST\',\r\n                    body: formData,\r\n                })\r\n                .then(response => response.blob())\r\n                .then(gifBlob => {\r\n                    // Handle the converted GIF here (e.g., display or download)\r\n                    // You will need server-side code to handle this part.\r\n                })\r\n                .catch(error => {\r\n                    console.error(\'Conversion failed:\', error);\r\n                });\r\n            } else {\r\n                alert(\'Please select a HEIC file.\');\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(135, 2, 'RGBA to HSLA converter', 'rgba-to-hsla-converter', '<form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"red\">Red (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"red\" placeholder=\"Enter Red\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"green\">Green (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"green\" placeholder=\"Enter Green\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"blue\">Blue (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"blue\" placeholder=\"Enter Blue\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HSLA Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert RGBA to HSLA\r\n        function rgbaToHsla(r, g, b, a) {\r\n            const rConverted = r / 255;\r\n            const gConverted = g / 255;\r\n            const bConverted = b / 255;\r\n\r\n            const cMax = Math.max(rConverted, gConverted, bConverted);\r\n            const cMin = Math.min(rConverted, gConverted, bConverted);\r\n            const delta = cMax - cMin;\r\n\r\n            let hue = 0;\r\n            if (delta !== 0) {\r\n                if (cMax === rConverted) {\r\n                    hue = ((gConverted - bConverted) / delta) % 6;\r\n                } else if (cMax === gConverted) {\r\n                    hue = ((bConverted - rConverted) / delta) + 2;\r\n                } else {\r\n                    hue = ((rConverted - gConverted) / delta) + 4;\r\n                }\r\n            }\r\n\r\n            hue = Math.round(hue * 60);\r\n            if (hue < 0) {\r\n                hue += 360;\r\n            }\r\n\r\n            const lightness = ((cMax + cMin) / 2) * 100;\r\n            \r\n            const saturation = (delta === 0) ? 0 : (delta / (1 - Math.abs(2 * lightness - 1))) * 100;\r\n\r\n            const alpha = a || 1;\r\n\r\n            return `hsla(${hue}, ${saturation}%, ${lightness}%, ${alpha})`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const red = parseFloat(document.getElementById(\'red\').value) || 0;\r\n            const green = parseFloat(document.getElementById(\'green\').value) || 0;\r\n            const blue = parseFloat(document.getElementById(\'blue\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const result = rgbaToHsla(red, green, blue, alpha);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HSLA Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HSLA Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(137, 2, 'HEIC to JPG Converter', 'heic-to-jpg-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"heicFile\">Select a HEIC File:</label>\r\n                <input type=\"file\" class=\"form-control-file\" id=\"heicFile\" accept=\".heic, .heif\">\r\n            </div>\r\n            <button class=\"btn btn-primary mt-3\" id=\"convertButton\">Convert and Download JPG</button>\r\n        </form>', '', '<script src=\"https://cdnjs.cloudflare.com/ajax/libs/heic2any/5.1.2/heic2any.js\"></script>\r\n    <script>\r\n        const heicFileInput = document.getElementById(\'heicFile\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n\r\n        convertButton.addEventListener(\'click\', async () => {\r\n            const file = heicFileInput.files[0];\r\n            if (file) {\r\n                const jpgBlob = await convertHeicToJpg(file);\r\n                if (jpgBlob) {\r\n                    downloadJpg(jpgBlob);\r\n                } else {\r\n                    alert(\'Conversion failed. Please select a valid HEIC file.\');\r\n                }\r\n            } else {\r\n                alert(\'Please select a HEIC file.\');\r\n            }\r\n        });\r\n\r\n        async function convertHeicToJpg(heicFile) {\r\n            try {\r\n                const jpgBlob = await heic2any({\r\n                    blob: heicFile,\r\n                    toType: \'image/jpeg\',\r\n                });\r\n                return jpgBlob;\r\n            } catch (error) {\r\n                console.error(error);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        function downloadJpg(blob) {\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\'a\');\r\n            a.href = url;\r\n            a.download = \'converted.jpg\';\r\n            a.style.display = \'none\';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(138, 2, 'RGBA to HSL converter', 'rgba-to-hsl-converter', '<form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"red\">Red (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"red\" placeholder=\"Enter Red\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"green\">Green (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"green\" placeholder=\"Enter Green\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"blue\">Blue (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"blue\" placeholder=\"Enter Blue\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HSL Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert RGBA to HSL\r\n        function rgbaToHsl(r, g, b, a) {\r\n            const rConverted = r / 255;\r\n            const gConverted = g / 255;\r\n            const bConverted = b / 255;\r\n\r\n            const cMax = Math.max(rConverted, gConverted, bConverted);\r\n            const cMin = Math.min(rConverted, gConverted, bConverted);\r\n            const delta = cMax - cMin;\r\n\r\n            let hue = 0;\r\n            if (delta !== 0) {\r\n                if (cMax === rConverted) {\r\n                    hue = ((gConverted - bConverted) / delta) % 6;\r\n                } else if (cMax === gConverted) {\r\n                    hue = ((bConverted - rConverted) / delta) + 2;\r\n                } else {\r\n                    hue = ((rConverted - gConverted) / delta) + 4;\r\n                }\r\n            }\r\n\r\n            hue = Math.round(hue * 60);\r\n            if (hue < 0) {\r\n                hue += 360;\r\n            }\r\n\r\n            const lightness = ((cMax + cMin) / 2) * 100;\r\n            \r\n            const saturation = (delta === 0) ? 0 : (delta / (1 - Math.abs(2 * lightness - 1))) * 100;\r\n\r\n            return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const red = parseFloat(document.getElementById(\'red\').value) || 0;\r\n            const green = parseFloat(document.getElementById(\'green\').value) || 0;\r\n            const blue = parseFloat(document.getElementById(\'blue\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const result = rgbaToHsl(red, green, blue, alpha);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HSL Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HSL Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(139, 2, 'RGBA to HSV converter', 'rgba-to-hsv-converter', '<form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"red\">Red (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"red\" placeholder=\"Enter Red\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"green\">Green (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"green\" placeholder=\"Enter Green\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"blue\">Blue (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"blue\" placeholder=\"Enter Blue\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HSV Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert RGBA to HSV\r\n        function rgbaToHsv(r, g, b, a) {\r\n            const rConverted = r / 255;\r\n            const gConverted = g / 255;\r\n            const bConverted = b / 255;\r\n\r\n            const cMax = Math.max(rConverted, gConverted, bConverted);\r\n            const cMin = Math.min(rConverted, gConverted, bConverted);\r\n            const delta = cMax - cMin;\r\n\r\n            let hue = 0;\r\n            if (delta !== 0) {\r\n                if (cMax === rConverted) {\r\n                    hue = ((gConverted - bConverted) / delta) % 6;\r\n                } else if (cMax === gConverted) {\r\n                    hue = ((bConverted - rConverted) / delta) + 2;\r\n                } else {\r\n                    hue = ((rConverted - gConverted) / delta) + 4;\r\n                }\r\n            }\r\n\r\n            hue = Math.round(hue * 60);\r\n            if (hue < 0) {\r\n                hue += 360;\r\n            }\r\n\r\n            const saturation = (cMax === 0) ? 0 : (delta / cMax) * 100;\r\n            const value = cMax * 100;\r\n            const alpha = a || 1;\r\n\r\n            return `hsv(${hue}, ${saturation}%, ${value}%, ${alpha})`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const red = parseFloat(document.getElementById(\'red\').value) || 0;\r\n            const green = parseFloat(document.getElementById(\'green\').value) || 0;\r\n            const blue = parseFloat(document.getElementById(\'blue\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const result = rgbaToHsv(red, green, blue, alpha);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HSV Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HSV Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 8, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(140, 2, 'Celsius to Fahrenheit Converter', 'celsius-to-fahrenheit-converter', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"celsiusInput\">Enter Celsius:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"celsiusInput\" placeholder=\"Enter Celsius temperature\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"fahrenheitOutput\">Fahrenheit:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"fahrenheitOutput\" readonly>\r\n            </div>\r\n            <button class=\"btn btn-primary mb-3\" id=\"copyButton\">Copy Result</button>\r\n        </form>', '', '<script>\r\n        const celsiusInput = document.getElementById(\'celsiusInput\');\r\n        const fahrenheitOutput = document.getElementById(\'fahrenheitOutput\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Function to convert Celsius to Fahrenheit\r\n        function convertCelsiusToFahrenheit(celsius) {\r\n            return (celsius * 9/5) + 32;\r\n        }\r\n\r\n        // Update the result as the user types\r\n        celsiusInput.addEventListener(\'input\', () => {\r\n            const celsiusValue = parseFloat(celsiusInput.value);\r\n            if (!isNaN(celsiusValue)) {\r\n                const fahrenheitValue = convertCelsiusToFahrenheit(celsiusValue);\r\n                fahrenheitOutput.value = fahrenheitValue.toFixed(2);\r\n            } else {\r\n                fahrenheitOutput.value = \'\';\r\n            }\r\n        });\r\n\r\n        // Copy the result to the clipboard\r\n        copyButton.addEventListener(\'click\', () => {\r\n            fahrenheitOutput.select();\r\n            document.execCommand(\'copy\');\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(141, 2, 'RGBA to RGB converter', 'rgba-to-rgb-converter', '<form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"red\">Red (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"red\" placeholder=\"Enter Red\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"green\">Green (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"green\" placeholder=\"Enter Green\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"blue\">Blue (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"blue\" placeholder=\"Enter Blue\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>RGB Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert RGBA to RGB\r\n        function rgbaToRgb(r, g, b, a) {\r\n            const rConverted = r / 255;\r\n            const gConverted = g / 255;\r\n            const bConverted = b / 255;\r\n            const alpha = a || 1;\r\n\r\n            const resultR = Math.round((1 - alpha) * 255 + alpha * rConverted * 255);\r\n            const resultG = Math.round((1 - alpha) * 255 + alpha * gConverted * 255);\r\n            const resultB = Math.round((1 - alpha) * 255 + alpha * bConverted * 255);\r\n\r\n            return `rgb(${resultR}, ${resultG}, ${resultB})`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const red = parseFloat(document.getElementById(\'red\').value) || 0;\r\n            const green = parseFloat(document.getElementById(\'green\').value) || 0;\r\n            const blue = parseFloat(document.getElementById(\'blue\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const result = rgbaToRgb(red, green, blue, alpha);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>RGB Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>RGB Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(142, 2, 'Celsius to Kelvin', 'celsius-to-kelvin', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"celsiusInput\">Enter Celsius:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"celsiusInput\" placeholder=\"Enter Celsius temperature\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"kelvinOutput\">Kelvin:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"kelvinOutput\" readonly>\r\n            </div>\r\n            <button class=\"btn btn-primary mb-3\" id=\"copyButton\">Copy Result</button>\r\n        </form>', '', ' <script>\r\n        const celsiusInput = document.getElementById(\'celsiusInput\');\r\n        const kelvinOutput = document.getElementById(\'kelvinOutput\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Function to convert Celsius to Kelvin\r\n        function convertCelsiusToKelvin(celsius) {\r\n            return celsius + 273.15;\r\n        }\r\n\r\n        // Update the result as the user types\r\n        celsiusInput.addEventListener(\'input\', () => {\r\n            const celsiusValue = parseFloat(celsiusInput.value);\r\n            if (!isNaN(celsiusValue)) {\r\n                const kelvinValue = convertCelsiusToKelvin(celsiusValue);\r\n                kelvinOutput.value = kelvinValue.toFixed(2);\r\n            } else {\r\n                kelvinOutput.value = \'\';\r\n            }\r\n        });\r\n\r\n        // Copy the result to the clipboard\r\n        copyButton.addEventListener(\'click\', () => {\r\n            kelvinOutput.select();\r\n            document.execCommand(\'copy\');\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(143, 2, 'RGBA to HEXA converter', 'rgba-to-hexa-converter', '<form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"red\">Red (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"red\" placeholder=\"Enter Red\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"green\">Green (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"green\" placeholder=\"Enter Green\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"blue\">Blue (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"blue\" placeholder=\"Enter Blue\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HEXA Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert RGBA to HEXA\r\n        function rgbaToHexa(r, g, b, a) {\r\n            const rHex = Math.round(r).toString(16).padStart(2, \'0\');\r\n            const gHex = Math.round(g).toString(16).padStart(2, \'0\');\r\n            const bHex = Math.round(b).toString(16).padStart(2, \'0\');\r\n            const alphaHex = Math.round(a * 255).toString(16).padStart(2, \'0\');\r\n\r\n            return `#${rHex}${gHex}${bHex}${alphaHex}`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const red = parseFloat(document.getElementById(\'red\').value) || 0;\r\n            const green = parseFloat(document.getElementById(\'green\').value) || 0;\r\n            const blue = parseFloat(document.getElementById(\'blue\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const result = rgbaToHexa(red, green, blue, alpha);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HEXA Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HEXA Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(144, 2, 'RGBA to HEX converter', 'rgba-to-hex-converter', '<form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"red\">Red (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"red\" placeholder=\"Enter Red\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"green\">Green (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"green\" placeholder=\"Enter Green\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"blue\">Blue (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"blue\" placeholder=\"Enter Blue\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HEX Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '\r\n    <script>\r\n        // Function to convert RGBA to HEX\r\n        function rgbaToHex(r, g, b) {\r\n            const rHex = Math.round(r).toString(16).padStart(2, \'0\');\r\n            const gHex = Math.round(g).toString(16).padStart(2, \'0\');\r\n            const bHex = Math.round(b).toString(16).padStart(2, \'0\');\r\n\r\n            return `#${rHex}${gHex}${bHex}`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const red = parseFloat(document.getElementById(\'red\').value) || 0;\r\n            const green = parseFloat(document.getElementById(\'green\').value) || 0;\r\n            const blue = parseFloat(document.getElementById(\'blue\').value) || 0;\r\n\r\n            const result = rgbaToHex(red, green, blue);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HEX Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HEX Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(145, 2, 'Fahrenheit to Celsius', 'fahrenheit-to-celsius', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"fahrenheitInput\">Enter Fahrenheit:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"fahrenheitInput\" placeholder=\"Enter Fahrenheit temperature\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"celsiusOutput\">Celsius:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"celsiusOutput\" readonly>\r\n            </div>\r\n            <button class=\"btn btn-primary mb-3\" id=\"copyButton\">Copy Result</button>\r\n            <div id=\"resultContainer\"></div> <!-- Container to display result -->\r\n        </form>', '', ' <script>\r\n        const fahrenheitInput = document.getElementById(\'fahrenheitInput\');\r\n        const celsiusOutput = document.getElementById(\'celsiusOutput\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        const resultContainer = document.getElementById(\'resultContainer\'); // Container for result\r\n\r\n        // Function to convert Fahrenheit to Celsius\r\n        function convertFahrenheitToCelsius(fahrenheit) {\r\n            return (fahrenheit - 32) * 5/9;\r\n        }\r\n\r\n        // Update the result as the user types\r\n        fahrenheitInput.addEventListener(\'input\', () => {\r\n            const fahrenheitValue = parseFloat(fahrenheitInput.value);\r\n            if (!isNaN(fahrenheitValue)) {\r\n                const celsiusValue = convertFahrenheitToCelsius(fahrenheitValue);\r\n                celsiusOutput.value = celsiusValue.toFixed(2);\r\n                // Display the result in the container\r\n                resultContainer.innerHTML = `<h2>${celsiusValue.toFixed(2)} Â°C</h2>`;\r\n            } else {\r\n                celsiusOutput.value = \'\';\r\n                // Clear the result container\r\n                resultContainer.innerHTML = \'\';\r\n            }\r\n        });\r\n\r\n        // Copy the result to the clipboard\r\n        copyButton.addEventListener(\'click\', () => {\r\n            celsiusOutput.select();\r\n            document.execCommand(\'copy\');\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(146, 2, 'Fahrenheit to Kelvin', 'fahrenheit-to-kelvin', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"fahrenheitInput\">Enter Fahrenheit:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"fahrenheitInput\" placeholder=\"Enter Fahrenheit temperature\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"kelvinOutput\">Kelvin:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"kelvinOutput\" readonly>\r\n            </div>\r\n            <button class=\"btn btn-primary mb-3\" id=\"copyButton\">Copy Result</button>\r\n            <div id=\"resultContainer\"></div> <!-- Container to display result -->\r\n        </form>', '', ' <script>\r\n        const fahrenheitInput = document.getElementById(\'fahrenheitInput\');\r\n        const kelvinOutput = document.getElementById(\'kelvinOutput\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        const resultContainer = document.getElementById(\'resultContainer\'); // Container for result\r\n\r\n        // Function to convert Fahrenheit to Kelvin\r\n        function convertFahrenheitToKelvin(fahrenheit) {\r\n            return (fahrenheit + 459.67) * 5/9;\r\n        }\r\n\r\n        // Update the result as the user types\r\n        fahrenheitInput.addEventListener(\'input\', () => {\r\n            const fahrenheitValue = parseFloat(fahrenheitInput.value);\r\n            if (!isNaN(fahrenheitValue)) {\r\n                const kelvinValue = convertFahrenheitToKelvin(fahrenheitValue);\r\n                kelvinOutput.value = kelvinValue.toFixed(2);\r\n                // Display the result in the container\r\n                resultContainer.innerHTML = `<h2>${kelvinValue.toFixed(2)} K</h2>`;\r\n            } else {\r\n                kelvinOutput.value = \'\';\r\n                // Clear the result container\r\n                resultContainer.innerHTML = \'\';\r\n            }\r\n        });\r\n\r\n        // Copy the result to the clipboard\r\n        copyButton.addEventListener(\'click\', () => {\r\n            kelvinOutput.select();\r\n            document.execCommand(\'copy\');\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>\r\n</body>', '', '', '', '', '', 8, 'publish'),
(147, 2, 'RGB to HSLA converter', 'rgb-to-hsla-converter', '<form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"red\">Red (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"red\" placeholder=\"Enter Red\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"green\">Green (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"green\" placeholder=\"Enter Green\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"blue\">Blue (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"blue\" placeholder=\"Enter Blue\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-3\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HSLA Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert RGB to HSLA\r\n        function rgbToHsla(r, g, b, a) {\r\n            r /= 255;\r\n            g /= 255;\r\n            b /= 255;\r\n\r\n            const max = Math.max(r, g, b);\r\n            const min = Math.min(r, g, b);\r\n            let h, s, l = (max + min) / 2;\r\n\r\n            if (max === min) {\r\n                h = s = 0;\r\n            } else {\r\n                const d = max - min;\r\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n\r\n                h /= 6;\r\n            }\r\n\r\n            return `hsla(${Math.round(h * 360)}, ${Math.round(s * 100)}%, ${Math.round(l * 100)}%, ${a})`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const red = parseFloat(document.getElementById(\'red\').value) || 0;\r\n            const green = parseFloat(document.getElementById(\'green\').value) || 0;\r\n            const blue = parseFloat(document.getElementById(\'blue\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const result = rgbToHsla(red, green, blue, alpha);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HSLA Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HSLA Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 6, 'publish'),
(148, 2, 'Kelvin to Celsius', 'kelvin-to-celsius', ' <form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kelvinInput\">Enter Kelvin:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kelvinInput\" placeholder=\"Enter Kelvin temperature\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"celsiusOutput\">Celsius:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"celsiusOutput\" readonly>\r\n            </div>\r\n            <button class=\"btn btn-primary mb-3\" id=\"copyButton\">Copy Result</button>\r\n            <div id=\"resultContainer\"></div> <!-- Container to display result -->\r\n        </form>', '', ' <script>\r\n        const kelvinInput = document.getElementById(\'kelvinInput\');\r\n        const celsiusOutput = document.getElementById(\'celsiusOutput\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        const resultContainer = document.getElementById(\'resultContainer\'); // Container for result\r\n\r\n        // Function to convert Kelvin to Celsius\r\n        function convertKelvinToCelsius(kelvin) {\r\n            return kelvin - 273.15;\r\n        }\r\n\r\n        // Update the result as the user types\r\n        kelvinInput.addEventListener(\'input\', () => {\r\n            const kelvinValue = parseFloat(kelvinInput.value);\r\n            if (!isNaN(kelvinValue)) {\r\n                const celsiusValue = convertKelvinToCelsius(kelvinValue);\r\n                celsiusOutput.value = celsiusValue.toFixed(2);\r\n                // Display the result in the container\r\n                resultContainer.innerHTML = `<h2>${celsiusValue.toFixed(2)} Â°C</h2>`;\r\n            } else {\r\n                celsiusOutput.value = \'\';\r\n                // Clear the result container\r\n                resultContainer.innerHTML = \'\';\r\n            }\r\n        });\r\n\r\n        // Copy the result to the clipboard\r\n        copyButton.addEventListener(\'click\', () => {\r\n            celsiusOutput.select();\r\n            document.execCommand(\'copy\');\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(149, 2, 'RGB to HSL converter', 'rgb-to-hsl-converter', ' <form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"red\">Red (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"red\" placeholder=\"Enter Red\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"green\">Green (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"green\" placeholder=\"Enter Green\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"blue\">Blue (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"blue\" placeholder=\"Enter Blue\" min=\"0\" max=\"255\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HSL Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert RGB to HSL\r\n        function rgbToHsl(r, g, b) {\r\n            r /= 255;\r\n            g /= 255;\r\n            b /= 255;\r\n\r\n            const max = Math.max(r, g, b);\r\n            const min = Math.min(r, g, b);\r\n            let h, s, l = (max + min) / 2;\r\n\r\n            if (max === min) {\r\n                h = s = 0;\r\n            } else {\r\n                const d = max - min;\r\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n\r\n                h /= 6;\r\n            }\r\n\r\n            return `HSL(${Math.round(h * 360)}, ${Math.round(s * 100)}%, ${Math.round(l * 100)}%)`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const red = parseFloat(document.getElementById(\'red\').value) || 0;\r\n            const green = parseFloat(document.getElementById(\'green\').value) || 0;\r\n            const blue = parseFloat(document.getElementById(\'blue\').value) || 0;\r\n\r\n            const result = rgbToHsl(red, green, blue);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HSL Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HSL Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(150, 2, 'Kelvin to Fahrenheit', 'kelvin-to-fahrenheit', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kelvinInput\">Enter Kelvin:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kelvinInput\" placeholder=\"Enter Kelvin temperature\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"fahrenheitOutput\">Fahrenheit:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"fahrenheitOutput\" readonly>\r\n            </div>\r\n            <button class=\"btn btn-primary mb-3\" id=\"copyButton\">Copy Result</button>\r\n        </form>\r\n        <div id=\"resultContainer\"></div> <!-- Container to display result -->', '', '<script>\r\n        const kelvinInput = document.getElementById(\'kelvinInput\');\r\n        const fahrenheitOutput = document.getElementById(\'fahrenheitOutput\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        const resultContainer = document.getElementById(\'resultContainer\'); // Container for result\r\n\r\n        // Function to convert Kelvin to Fahrenheit\r\n        function convertKelvinToFahrenheit(kelvin) {\r\n            return (kelvin - 273.15) * 9/5 + 32;\r\n        }\r\n\r\n        // Update the result as the user types\r\n        kelvinInput.addEventListener(\'input\', () => {\r\n            const kelvinValue = parseFloat(kelvinInput.value);\r\n            if (!isNaN(kelvinValue)) {\r\n                const fahrenheitValue = convertKelvinToFahrenheit(kelvinValue);\r\n                fahrenheitOutput.value = fahrenheitValue.toFixed(2);\r\n                // Display the result in the container\r\n                resultContainer.innerHTML = `<h2>${fahrenheitValue.toFixed(2)} Â°F</h2>`;\r\n            } else {\r\n                fahrenheitOutput.value = \'\';\r\n                // Clear the result container\r\n                resultContainer.innerHTML = \'\';\r\n            }\r\n        });\r\n\r\n        // Copy the result to the clipboard\r\n        copyButton.addEventListener(\'click\', () => {\r\n            fahrenheitOutput.select();\r\n            document.execCommand(\'copy\');\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(151, 2, 'Miles to Kilometers', 'miles-to-kilometers', ' <form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"milesInput\">Enter Miles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"milesInput\" placeholder=\"Enter distance in miles\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilometersOutput\">Kilometers:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"kilometersOutput\" readonly>\r\n            </div>\r\n            <button class=\"btn btn-primary mb-3\" id=\"copyButton\">Copy Result</button>\r\n        </form>\r\n        <div id=\"resultContainer\"></div>', '', ' <script>\r\n        const milesInput = document.getElementById(\'milesInput\');\r\n        const kilometersOutput = document.getElementById(\'kilometersOutput\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        const resultContainer = document.getElementById(\'resultContainer\'); // Container for result\r\n\r\n        // Function to convert Miles to Kilometers\r\n        function convertMilesToKilometers(miles) {\r\n            return miles * 1.60934;\r\n        }\r\n\r\n        // Update the result as the user types\r\n        milesInput.addEventListener(\'input\', () => {\r\n            const milesValue = parseFloat(milesInput.value);\r\n            if (!isNaN(milesValue)) {\r\n                const kilometersValue = convertMilesToKilometers(milesValue);\r\n                kilometersOutput.value = kilometersValue.toFixed(2);\r\n                // Display the result in the container\r\n                resultContainer.innerHTML = `<h2>${kilometersValue.toFixed(2)} km</h2>`;\r\n            } else {\r\n                kilometersOutput.value = \'\';\r\n                // Clear the result container\r\n                resultContainer.innerHTML = \'\';\r\n            }\r\n        });\r\n\r\n        // Copy the result to the clipboard\r\n        copyButton.addEventListener(\'click\', () => {\r\n            kilometersOutput.select();\r\n            document.execCommand(\'copy\');\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(152, 2, 'RGB to HSV converter', 'rgb-to-hsv-converter', ' <form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"red\">Red (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"red\" placeholder=\"Enter Red\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"green\">Green (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"green\" placeholder=\"Enter Green\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"blue\">Blue (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"blue\" placeholder=\"Enter Blue\" min=\"0\" max=\"255\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HSV Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert RGB to HSV\r\n        function rgbToHsv(r, g, b) {\r\n            r /= 255;\r\n            g /= 255;\r\n            b /= 255;\r\n\r\n            const max = Math.max(r, g, b);\r\n            const min = Math.min(r, g, b);\r\n            let h, s, v = max;\r\n\r\n            const d = max - min;\r\n            s = max === 0 ? 0 : d / max;\r\n\r\n            if (max === min) {\r\n                h = 0;\r\n            } else {\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n\r\n            return `HSV(${Math.round(h * 360)}, ${Math.round(s * 100)}%, ${Math.round(v * 100)}%)`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const red = parseFloat(document.getElementById(\'red\').value) || 0;\r\n            const green = parseFloat(document.getElementById(\'green\').value) || 0;\r\n            const blue = parseFloat(document.getElementById(\'blue\').value) || 0;\r\n\r\n            const result = rgbToHsv(red, green, blue);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HSV Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HSV Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(153, 2, 'RGB to RGBA converter', 'rgb-to-rgba-converter', ' <form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"red\">Red (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"red\" placeholder=\"Enter Red\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"green\">Green (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"green\" placeholder=\"Enter Green\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"blue\">Blue (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"blue\" placeholder=\"Enter Blue\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>RGBA Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert RGB to RGBA\r\n        function rgbToRgba(r, g, b, a) {\r\n            return `rgba(${r}, ${g}, ${b}, ${a})`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const red = parseFloat(document.getElementById(\'red\').value) || 0;\r\n            const green = parseFloat(document.getElementById(\'green\').value) || 0;\r\n            const blue = parseFloat(document.getElementById(\'blue\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const result = rgbToRgba(red, green, blue, alpha);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>RGBA Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>RGBA Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 8, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(154, 2, 'Kilometers to Miles', 'kilometers-to-miles', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilometersInput\">Enter Kilometers:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilometersInput\" placeholder=\"Enter distance in kilometers\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"milesOutput\">Miles:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"milesOutput\" readonly>\r\n            </div>\r\n            <button class=\"btn btn-primary mb-3\" id=\"copyButton\">Copy Result</button>\r\n        </form>\r\n        <div id=\"resultContainer\"></div>', '', '<script>\r\n        const kilometersInput = document.getElementById(\'kilometersInput\');\r\n        const milesOutput = document.getElementById(\'milesOutput\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        const resultContainer = document.getElementById(\'resultContainer\'); // Container for result\r\n\r\n        // Function to convert Kilometers to Miles\r\n        function convertKilometersToMiles(kilometers) {\r\n            return kilometers / 1.60934;\r\n        }\r\n\r\n        // Update the result as the user types\r\n        kilometersInput.addEventListener(\'input\', () => {\r\n            const kilometersValue = parseFloat(kilometersInput.value);\r\n            if (!isNaN(kilometersValue)) {\r\n                const milesValue = convertKilometersToMiles(kilometersValue);\r\n                milesOutput.value = milesValue.toFixed(2);\r\n                // Display the result in the container\r\n                resultContainer.innerHTML = `<h2>${milesValue.toFixed(2)} miles</h2>`;\r\n            } else {\r\n                milesOutput.value = \'\';\r\n                // Clear the result container\r\n                resultContainer.innerHTML = \'\';\r\n            }\r\n        });\r\n\r\n        // Copy the result to the clipboard\r\n        copyButton.addEventListener(\'click\', () => {\r\n            milesOutput.select();\r\n            document.execCommand(\'copy\');\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(155, 2, 'RGB to HEXA converter', 'rgb-to-hexa-converter', ' <form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"red\">Red (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"red\" placeholder=\"Enter Red\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"green\">Green (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"green\" placeholder=\"Enter Green\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"blue\">Blue (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"blue\" placeholder=\"Enter Blue\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"alpha\">Alpha (0-1):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"alpha\" placeholder=\"Enter Alpha\" step=\"0.01\" min=\"0\" max=\"1\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HEXA Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert RGB to HEXA\r\n        function rgbToHexa(r, g, b, a) {\r\n            const redHex = r.toString(16).padStart(2, \'0\');\r\n            const greenHex = g.toString(16).padStart(2, \'0\');\r\n            const blueHex = b.toString(16).padStart(2, \'0\');\r\n            const alphaHex = Math.round(a * 255).toString(16).padStart(2, \'0\');\r\n            \r\n            return `#${redHex}${greenHex}${blueHex}${alphaHex}`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const red = parseFloat(document.getElementById(\'red\').value) || 0;\r\n            const green = parseFloat(document.getElementById(\'green\').value) || 0;\r\n            const blue = parseFloat(document.getElementById(\'blue\').value) || 0;\r\n            const alpha = parseFloat(document.getElementById(\'alpha\').value) || 1;\r\n\r\n            const result = rgbToHexa(red, green, blue, alpha);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HEXA Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HEXA Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(156, 2, 'Mph to Kph', 'mph-to-kph', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"mphInput\">Enter Mph:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"mphInput\" placeholder=\"Enter speed in Miles per Hour\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"kphOutput\">Kph:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"kphOutput\" readonly>\r\n            </div>\r\n            <button class=\"btn btn-primary mb-3\" id=\"copyButton\">Copy Result</button>\r\n        </form>\r\n        <div id=\"resultContainer\"></div>', '', '<script>\r\n        const mphInput = document.getElementById(\'mphInput\');\r\n        const kphOutput = document.getElementById(\'kphOutput\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        const resultContainer = document.getElementById(\'resultContainer\'); // Container for result\r\n\r\n        // Function to convert Mph to Kph\r\n        function convertMphToKph(mph) {\r\n            return mph * 1.60934;\r\n        }\r\n\r\n        // Update the result as the user types\r\n        mphInput.addEventListener(\'input\', () => {\r\n            const mphValue = parseFloat(mphInput.value);\r\n            if (!isNaN(mphValue)) {\r\n                const kphValue = convertMphToKph(mphValue);\r\n                kphOutput.value = kphValue.toFixed(2);\r\n                // Display the result in the container\r\n                resultContainer.innerHTML = `<h2>${kphValue.toFixed(2)} Kph</h2>`;\r\n            } else {\r\n                kphOutput.value = \'\';\r\n                // Clear the result container\r\n                resultContainer.innerHTML = \'\';\r\n            }\r\n        });\r\n\r\n        // Copy the result to the clipboard\r\n        copyButton.addEventListener(\'click\', () => {\r\n            kphOutput.select();\r\n            document.execCommand(\'copy\');\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>', '', '', '', '', '', 11, 'publish'),
(157, 2, 'RGB to HEX converter', 'rgb-to-hex-converter', '<form>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"red\">Red (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"red\" placeholder=\"Enter Red\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"green\">Green (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"green\" placeholder=\"Enter Green\" min=\"0\" max=\"255\">\r\n                </div>\r\n                <div class=\"form-group col-md-4\">\r\n                    <label for=\"blue\">Blue (0-255):</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"blue\" placeholder=\"Enter Blue\" min=\"0\" max=\"255\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HEX Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert RGB to HEX\r\n        function rgbToHex(r, g, b) {\r\n            const redHex = r.toString(16).padStart(2, \'0\');\r\n            const greenHex = g.toString(16).padStart(2, \'0\');\r\n            const blueHex = b.toString(16).padStart(2, \'0\');\r\n            \r\n            return `#${redHex}${greenHex}${blueHex}`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const red = parseFloat(document.getElementById(\'red\').value) || 0;\r\n            const green = parseFloat(document.getElementById(\'green\').value) || 0;\r\n            const blue = parseFloat(document.getElementById(\'blue\').value) || 0;\r\n\r\n            const result = rgbToHex(red, green, blue);\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listeners to input fields for live update\r\n        const inputFields = document.querySelectorAll(\'input\');\r\n        inputFields.forEach(input => {\r\n            input.addEventListener(\'input\', updateResult);\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HEX Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HEX Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(158, 2, 'Kph to Mph', 'kph-to-mph', ' <form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kphInput\">Enter Kph:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kphInput\" placeholder=\"Enter speed in Kilometers per Hour\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"mphOutput\">Mph:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"mphOutput\" readonly>\r\n            </div>\r\n            <button class=\"btn btn-primary mb-3\" id=\"copyButton\">Copy Result</button>\r\n        </form>\r\n        <div id=\"resultContainer\"></div>', '', '<script>\r\n        const kphInput = document.getElementById(\'kphInput\');\r\n        const mphOutput = document.getElementById(\'mphOutput\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        const resultContainer = document.getElementById(\'resultContainer\'); // Container for result\r\n\r\n        // Function to convert Kph to Mph\r\n        function convertKphToMph(kph) {\r\n            return kph / 1.60934;\r\n        }\r\n\r\n        // Update the result as the user types\r\n        kphInput.addEventListener(\'input\', () => {\r\n            const kphValue = parseFloat(kphInput.value);\r\n            if (!isNaN(kphValue)) {\r\n                const mphValue = convertKphToMph(kphValue);\r\n                mphOutput.value = mphValue.toFixed(2);\r\n                // Display the result in the container\r\n                resultContainer.innerHTML = `<h2>${mphValue.toFixed(2)} Mph</h2>`;\r\n            } else {\r\n                mphOutput.value = \'\';\r\n                // Clear the result container\r\n                resultContainer.innerHTML = \'\';\r\n            }\r\n        });\r\n\r\n        // Copy the result to the clipboard\r\n        copyButton.addEventListener(\'click\', () => {\r\n            mphOutput.select();\r\n            document.execCommand(\'copy\');\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>', '', '', '', '', '', 12, 'publish'),
(159, 2, 'Kilogram to Pounds', 'kilogram-to-pounds', ' <form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilogramsInput\">Enter Kilograms:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilogramsInput\" placeholder=\"Enter weight in Kilograms\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"poundsOutput\">Pounds:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"poundsOutput\" readonly>\r\n            </div>\r\n            <button class=\"btn btn-primary mb-3\" id=\"copyButton\">Copy Result</button>\r\n        </form>\r\n        <div id=\"resultContainer\"></div>', '', '<script>\r\n        const kilogramsInput = document.getElementById(\'kilogramsInput\');\r\n        const poundsOutput = document.getElementById(\'poundsOutput\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        const resultContainer = document.getElementById(\'resultContainer\'); // Container for result\r\n\r\n        // Function to convert Kilograms to Pounds\r\n        function convertKilogramsToPounds(kilograms) {\r\n            return kilograms * 2.20462;\r\n        }\r\n\r\n        // Update the result as the user types\r\n        kilogramsInput.addEventListener(\'input\', () => {\r\n            const kilogramsValue = parseFloat(kilogramsInput.value);\r\n            if (!isNaN(kilogramsValue)) {\r\n                const poundsValue = convertKilogramsToPounds(kilogramsValue);\r\n                poundsOutput.value = poundsValue.toFixed(2);\r\n                // Display the result in the container\r\n                resultContainer.innerHTML = `<h2>${poundsValue.toFixed(2)} lbs</h2>`;\r\n            } else {\r\n                poundsOutput.value = \'\';\r\n                // Clear the result container\r\n                resultContainer.innerHTML = \'\';\r\n            }\r\n        });\r\n\r\n        // Copy the result to the clipboard\r\n        copyButton.addEventListener(\'click\', () => {\r\n            poundsOutput.select();\r\n            document.execCommand(\'copy\');\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>', '', '', '', '', '', 11, 'publish'),
(160, 2, 'HEXA to HSLA Converter', 'hexa-to-hsla-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"hexa\">HEXA Color:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"hexa\" placeholder=\"Enter HEXA Color\">\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HSLA Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert HEXA to HSLA\r\n        function hexaToHsla(hexa) {\r\n            // Remove the \"#\" character if present\r\n            hexa = hexa.replace(/^#/, \'\');\r\n\r\n            // Parse the HEXA color components\r\n            const redHex = hexa.slice(0, 2);\r\n            const greenHex = hexa.slice(2, 4);\r\n            const blueHex = hexa.slice(4, 6);\r\n            const alphaHex = hexa.slice(6, 8);\r\n\r\n            // Convert HEX to decimal\r\n            const red = parseInt(redHex, 16);\r\n            const green = parseInt(greenHex, 16);\r\n            const blue = parseInt(blueHex, 16);\r\n            const alpha = parseInt(alphaHex, 16) / 255; // Normalize alpha to 0-1\r\n\r\n            // Convert to HSLA\r\n            const hsl = rgbToHsl(red, green, blue);\r\n\r\n            // Combine HSL values with alpha\r\n            return `hsla(${hsl[0]}, ${hsl[1]}%, ${hsl[2]}%, ${alpha.toFixed(2)})`;\r\n        }\r\n\r\n        // Function to convert RGB to HSL\r\n        function rgbToHsl(r, g, b) {\r\n            r /= 255;\r\n            g /= 255;\r\n            b /= 255;\r\n\r\n            const max = Math.max(r, g, b);\r\n            const min = Math.min(r, g, b);\r\n            let h, s, l = (max + min) / 2;\r\n\r\n            if (max === min) {\r\n                h = s = 0; // achromatic\r\n            } else {\r\n                const d = max - min;\r\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n\r\n            h = Math.round(h * 360);\r\n            s = Math.round(s * 100);\r\n            l = Math.round(l * 100);\r\n\r\n            return [h, s, l];\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hexa = document.getElementById(\'hexa\').value;\r\n\r\n            if (isValidHexa(hexa)) {\r\n                const result = hexaToHsla(hexa);\r\n                document.getElementById(\'result\').textContent = result;\r\n            } else {\r\n                document.getElementById(\'result\').textContent = \'Invalid HEXA Color\';\r\n            }\r\n        }\r\n\r\n        // Function to check if a HEXA color is valid\r\n        function isValidHexa(hexa) {\r\n            const hexaPattern = /^#?([0-9A-Fa-f]{8})$/;\r\n            return hexaPattern.test(hexa);\r\n        }\r\n\r\n        // Attach event listener to input field for live update\r\n        const hexaInput = document.getElementById(\'hexa\');\r\n        hexaInput.addEventListener(\'input\', updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HSLA Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HSLA Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(161, 2, 'Pounds to Kilogram ', 'pounds-to-kilogram-', ' <form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"poundsInput\">Enter Pounds:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"poundsInput\" placeholder=\"Enter weight in Pounds\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilogramsOutput\">Kilograms:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"kilogramsOutput\" readonly>\r\n            </div>\r\n            <button class=\"btn btn-primary mb-3\" id=\"copyButton\">Copy Result</button>\r\n        </form>\r\n        <div id=\"resultContainer\"></div>', '', '<script>\r\n        const poundsInput = document.getElementById(\'poundsInput\');\r\n        const kilogramsOutput = document.getElementById(\'kilogramsOutput\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        const resultContainer = document.getElementById(\'resultContainer\'); // Container for result\r\n\r\n        // Function to convert Pounds to Kilograms\r\n        function convertPoundsToKilograms(pounds) {\r\n            return pounds / 2.20462;\r\n        }\r\n\r\n        // Update the result as the user types\r\n        poundsInput.addEventListener(\'input\', () => {\r\n            const poundsValue = parseFloat(poundsInput.value);\r\n            if (!isNaN(poundsValue)) {\r\n                const kilogramsValue = convertPoundsToKilograms(poundsValue);\r\n                kilogramsOutput.value = kilogramsValue.toFixed(2);\r\n                // Display the result in the container\r\n                resultContainer.innerHTML = `<h2>${kilogramsValue.toFixed(2)} kg</h2>`;\r\n            } else {\r\n                kilogramsOutput.value = \'\';\r\n                // Clear the result container\r\n                resultContainer.innerHTML = \'\';\r\n            }\r\n        });\r\n\r\n        // Copy the result to the clipboard\r\n        copyButton.addEventListener(\'click\', () => {\r\n            kilogramsOutput.select();\r\n            document.execCommand(\'copy\');\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(162, 2, 'HEXA to HSL Converter', 'hexa-to-hsl-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"hexa\">HEXA Color:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"hexa\" placeholder=\"Enter HEXA Color\">\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HSL Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert HEXA to HSL\r\n        function hexaToHsl(hexa) {\r\n            // Remove the \"#\" character if present\r\n            hexa = hexa.replace(/^#/, \'\');\r\n\r\n            // Parse the HEXA color components\r\n            const redHex = hexa.slice(0, 2);\r\n            const greenHex = hexa.slice(2, 4);\r\n            const blueHex = hexa.slice(4, 6);\r\n\r\n            // Convert HEX to decimal\r\n            const red = parseInt(redHex, 16);\r\n            const green = parseInt(greenHex, 16);\r\n            const blue = parseInt(blueHex, 16);\r\n\r\n            // Convert to HSL\r\n            const hsl = rgbToHsl(red, green, blue);\r\n\r\n            return `hsl(${hsl[0]}, ${hsl[1]}%, ${hsl[2]}%)`;\r\n        }\r\n\r\n        // Function to convert RGB to HSL\r\n        function rgbToHsl(r, g, b) {\r\n            r /= 255;\r\n            g /= 255;\r\n            b /= 255;\r\n\r\n            const max = Math.max(r, g, b);\r\n            const min = Math.min(r, g, b);\r\n            let h, s, l = (max + min) / 2;\r\n\r\n            if (max === min) {\r\n                h = s = 0; // achromatic\r\n            } else {\r\n                const d = max - min;\r\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n\r\n            h = Math.round(h * 360);\r\n            s = Math.round(s * 100);\r\n            l = Math.round(l * 100);\r\n\r\n            return [h, s, l];\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hexa = document.getElementById(\'hexa\').value;\r\n\r\n            if (isValidHexa(hexa)) {\r\n                const result = hexaToHsl(hexa);\r\n                document.getElementById(\'result\').textContent = result;\r\n            } else {\r\n                document.getElementById(\'result\').textContent = \'Invalid HEXA Color\';\r\n            }\r\n        }\r\n\r\n        // Function to check if a HEXA color is valid\r\n        function isValidHexa(hexa) {\r\n            const hexaPattern = /^#?([0-9A-Fa-f]{6})$/;\r\n            return hexaPattern.test(hexa);\r\n        }\r\n\r\n        // Attach event listener to input field for live update\r\n        const hexaInput = document.getElementById(\'hexa\');\r\n        hexaInput.addEventListener(\'input\', updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HSL Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HSL Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(163, 2, 'Number to Roman Numerals', 'number-to-roman-numerals', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"numberInput\">Enter Number:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"numberInput\" placeholder=\"Enter a positive integer\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"romanOutput\">Roman Numerals:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"romanOutput\" readonly>\r\n            </div>\r\n            <button class=\"btn btn-primary mb-3\" id=\"copyButton\">Copy Result</button>\r\n        </form>\r\n        <div id=\"resultContainer\"></div>', '', ' <script>\r\n        const numberInput = document.getElementById(\'numberInput\');\r\n        const romanOutput = document.getElementById(\'romanOutput\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        const resultContainer = document.getElementById(\'resultContainer\'); // Container for result\r\n\r\n        // Function to convert a Number to Roman Numerals\r\n        function numberToRoman(num) {\r\n            const romanNumerals = [\r\n                { value: 1000, numeral: \'M\' },\r\n                { value: 900, numeral: \'CM\' },\r\n                { value: 500, numeral: \'D\' },\r\n                { value: 400, numeral: \'CD\' },\r\n                { value: 100, numeral: \'C\' },\r\n                { value: 90, numeral: \'XC\' },\r\n                { value: 50, numeral: \'L\' },\r\n                { value: 40, numeral: \'XL\' },\r\n                { value: 10, numeral: \'X\' },\r\n                { value: 9, numeral: \'IX\' },\r\n                { value: 5, numeral: \'V\' },\r\n                { value: 4, numeral: \'IV\' },\r\n                { value: 1, numeral: \'I\' }\r\n            ];\r\n\r\n            let result = \'\';\r\n            for (const numeral of romanNumerals) {\r\n                while (num >= numeral.value) {\r\n                    result += numeral.numeral;\r\n                    num -= numeral.value;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        // Update the result as the user types\r\n        numberInput.addEventListener(\'input\', () => {\r\n            const inputValue = parseInt(numberInput.value);\r\n            if (!isNaN(inputValue) && inputValue > 0) {\r\n                const romanValue = numberToRoman(inputValue);\r\n                romanOutput.value = romanValue;\r\n                // Display the result in the container\r\n                resultContainer.innerHTML = `<h2>${romanValue}</h2>`;\r\n            } else {\r\n                romanOutput.value = \'\';\r\n                // Clear the result container\r\n                resultContainer.innerHTML = \'\';\r\n            }\r\n        });\r\n\r\n        // Copy the result to the clipboard\r\n        copyButton.addEventListener(\'click\', () => {\r\n            romanOutput.select();\r\n            document.execCommand(\'copy\');\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(164, 2, 'HEXA to HSV Converter', 'hexa-to-hsv-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"hexa\">HEXA Color:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"hexa\" placeholder=\"Enter HEXA Color\">\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HSV Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert HEXA to HSV\r\n        function hexaToHsv(hexa) {\r\n            // Remove the \"#\" character if present\r\n            hexa = hexa.replace(/^#/, \'\');\r\n\r\n            // Parse the HEXA color components\r\n            const redHex = hexa.slice(0, 2);\r\n            const greenHex = hexa.slice(2, 4);\r\n            const blueHex = hexa.slice(4, 6);\r\n\r\n            // Convert HEX to decimal\r\n            const red = parseInt(redHex, 16) / 255;\r\n            const green = parseInt(greenHex, 16) / 255;\r\n            const blue = parseInt(blueHex, 16) / 255;\r\n\r\n            // Calculate max and min values for RGB\r\n            const max = Math.max(red, green, blue);\r\n            const min = Math.min(red, green, blue);\r\n            const delta = max - min;\r\n\r\n            let h, s, v;\r\n\r\n            // Calculate hue (H)\r\n            if (delta === 0) {\r\n                h = 0; // Achromatic (gray)\r\n            } else if (max === red) {\r\n                h = ((green - blue) / delta) % 6;\r\n            } else if (max === green) {\r\n                h = ((blue - red) / delta) + 2;\r\n            } else {\r\n                h = ((red - green) / delta) + 4;\r\n            }\r\n\r\n            h = Math.round(h * 60);\r\n            if (h < 0) {\r\n                h += 360;\r\n            }\r\n\r\n            // Calculate saturation (S)\r\n            s = delta === 0 ? 0 : delta / max;\r\n\r\n            // Calculate value (V)\r\n            v = max;\r\n\r\n            return `hsv(${h}, ${Math.round(s * 100)}%, ${Math.round(v * 100)}%)`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hexa = document.getElementById(\'hexa\').value;\r\n\r\n            if (isValidHexa(hexa)) {\r\n                const result = hexaToHsv(hexa);\r\n                document.getElementById(\'result\').textContent = result;\r\n            } else {\r\n                document.getElementById(\'result\').textContent = \'Invalid HEXA Color\';\r\n            }\r\n        }\r\n\r\n        // Function to check if a HEXA color is valid\r\n        function isValidHexa(hexa) {\r\n            const hexaPattern = /^#?([0-9A-Fa-f]{6})$/;\r\n            return hexaPattern.test(hexa);\r\n        }\r\n\r\n        // Attach event listener to input field for live update\r\n        const hexaInput = document.getElementById(\'hexa\');\r\n        hexaInput.addEventListener(\'input\', updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HSV Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HSV Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(165, 2, 'Roman Numerals to Number ', 'roman-numerals-to-number-', '<form id=\"converterForm\">\r\n            <div class=\"form-group\">\r\n                <label for=\"romanInput\">Enter Roman Numerals:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"romanInput\" placeholder=\"Enter Roman Numerals\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"numberOutput\">Number:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"numberOutput\" readonly>\r\n            </div>\r\n            <button class=\"btn btn-primary mb-3\" id=\"copyButton\">Copy Result</button>\r\n        </form>\r\n        <div id=\"resultContainer\"></div>', '', '<script>\r\n        const romanInput = document.getElementById(\'romanInput\');\r\n        const numberOutput = document.getElementById(\'numberOutput\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        const resultContainer = document.getElementById(\'resultContainer\'); // Container for result\r\n\r\n        // Function to convert Roman Numerals to a Number\r\n        function romanToNumber(roman) {\r\n            const romanNumeralsMap = {\r\n                \'I\': 1,\r\n                \'V\': 5,\r\n                \'X\': 10,\r\n                \'L\': 50,\r\n                \'C\': 100,\r\n                \'D\': 500,\r\n                \'M\': 1000\r\n            };\r\n\r\n            let result = 0;\r\n            let prevValue = 0;\r\n\r\n            for (let i = roman.length - 1; i >= 0; i--) {\r\n                const current = romanNumeralsMap[roman[i]];\r\n                if (current < prevValue) {\r\n                    result -= current;\r\n                } else {\r\n                    result += current;\r\n                }\r\n                prevValue = current;\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        // Update the result as the user types\r\n        romanInput.addEventListener(\'input\', () => {\r\n            const inputValue = romanInput.value.toUpperCase();\r\n            const isValidRomanNumerals = /^[IVXLCDM]+$/.test(inputValue);\r\n            if (isValidRomanNumerals) {\r\n                const numberValue = romanToNumber(inputValue);\r\n                numberOutput.value = numberValue;\r\n                // Display the result in the container\r\n                resultContainer.innerHTML = `<h2>${numberValue}</h2>`;\r\n            } else {\r\n                numberOutput.value = \'\';\r\n                // Clear the result container\r\n                resultContainer.innerHTML = \'\';\r\n            }\r\n        });\r\n\r\n        // Copy the result to the clipboard\r\n        copyButton.addEventListener(\'click\', () => {\r\n            numberOutput.select();\r\n            document.execCommand(\'copy\');\r\n            alert(\'Result copied to clipboard\');\r\n        });\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(166, 2, 'HEXA to RGBA Converter', 'hexa-to-rgba-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"hexa\">HEXA Color:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"hexa\" placeholder=\"Enter HEXA Color\">\r\n            </div>\r\n        </form>\r\n\r\n        <h2>RGBA Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert HEXA to RGBA\r\n        function hexaToRgba(hexa) {\r\n            // Remove the \"#\" character if present\r\n            hexa = hexa.replace(/^#/, \'\');\r\n\r\n            // Parse the HEXA color components\r\n            const redHex = hexa.slice(0, 2);\r\n            const greenHex = hexa.slice(2, 4);\r\n            const blueHex = hexa.slice(4, 6);\r\n            const alphaHex = hexa.slice(6, 8);\r\n\r\n            // Convert HEX to decimal\r\n            const red = parseInt(redHex, 16);\r\n            const green = parseInt(greenHex, 16);\r\n            const blue = parseInt(blueHex, 16);\r\n            const alpha = parseInt(alphaHex, 16) / 255;\r\n\r\n            return `rgba(${red}, ${green}, ${blue}, ${alpha})`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hexa = document.getElementById(\'hexa\').value;\r\n\r\n            if (isValidHexa(hexa)) {\r\n                const result = hexaToRgba(hexa);\r\n                document.getElementById(\'result\').textContent = result;\r\n            } else {\r\n                document.getElementById(\'result\').textContent = \'Invalid HEXA Color\';\r\n            }\r\n        }\r\n\r\n        // Function to check if a HEXA color is valid\r\n        function isValidHexa(hexa) {\r\n            const hexaPattern = /^#?([0-9A-Fa-f]{8})$/;\r\n            return hexaPattern.test(hexa);\r\n        }\r\n\r\n        // Attach event listener to input field for live update\r\n        const hexaInput = document.getElementById(\'hexa\');\r\n        hexaInput.addEventListener(\'input\', updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>RGBA Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>RGBA Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(167, 2, 'HEXA to RGB Converter', 'hexa-to-rgb-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"hexa\">HEXA Color:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"hexa\" placeholder=\"Enter HEXA Color\">\r\n            </div>\r\n        </form>\r\n\r\n        <h2>RGB Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert HEXA to RGB\r\n        function hexaToRgb(hexa) {\r\n            // Remove the \"#\" character if present\r\n            hexa = hexa.replace(/^#/, \'\');\r\n\r\n            // Parse the HEXA color components\r\n            const redHex = hexa.slice(0, 2);\r\n            const greenHex = hexa.slice(2, 4);\r\n            const blueHex = hexa.slice(4, 6);\r\n\r\n            // Convert HEX to decimal\r\n            const red = parseInt(redHex, 16);\r\n            const green = parseInt(greenHex, 16);\r\n            const blue = parseInt(blueHex, 16);\r\n\r\n            return `rgb(${red}, ${green}, ${blue})`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hexa = document.getElementById(\'hexa\').value;\r\n\r\n            if (isValidHexa(hexa)) {\r\n                const result = hexaToRgb(hexa);\r\n                document.getElementById(\'result\').textContent = result;\r\n            } else {\r\n                document.getElementById(\'result\').textContent = \'Invalid HEXA Color\';\r\n            }\r\n        }\r\n\r\n        // Function to check if a HEXA color is valid\r\n        function isValidHexa(hexa) {\r\n            const hexaPattern = /^#?([0-9A-Fa-f]{6})$/;\r\n            return hexaPattern.test(hexa);\r\n        }\r\n\r\n        // Attach event listener to input field for live update\r\n        const hexaInput = document.getElementById(\'hexa\');\r\n        hexaInput.addEventListener(\'input\', updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>RGB Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>RGB Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 7, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(168, 2, 'HEXA to HEX Converter', 'hexa-to-hex-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"hexa\">HEXA Color:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"hexa\" placeholder=\"Enter HEXA Color\">\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HEX Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert HEXA to HEX\r\n        function hexaToHex(hexa) {\r\n            // Remove the \"#\" character if present\r\n            hexa = hexa.replace(/^#/, \'\');\r\n\r\n            // Keep only the first 6 characters (remove alpha channel)\r\n            hexa = hexa.slice(0, 6);\r\n\r\n            return `#${hexa}`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hexa = document.getElementById(\'hexa\').value;\r\n\r\n            if (isValidHexa(hexa)) {\r\n                const result = hexaToHex(hexa);\r\n                document.getElementById(\'result\').textContent = result;\r\n            } else {\r\n                document.getElementById(\'result\').textContent = \'Invalid HEXA Color\';\r\n            }\r\n        }\r\n\r\n        // Function to check if a HEXA color is valid\r\n        function isValidHexa(hexa) {\r\n            const hexaPattern = /^#?([0-9A-Fa-f]{6})([0-9A-Fa-f]{2})?$/;\r\n            return hexaPattern.test(hexa);\r\n        }\r\n\r\n        // Attach event listener to input field for live update\r\n        const hexaInput = document.getElementById(\'hexa\');\r\n        hexaInput.addEventListener(\'input\', updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HEX Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HEX Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(169, 2, 'HEX to HSLA Converter', 'hex-to-hsla-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"hex\">HEX Color:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"hex\" placeholder=\"Enter HEX Color\">\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HSLA Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert HEX to HSLA\r\n        function hexToHsla(hex) {\r\n            // Remove the \"#\" character if present\r\n            hex = hex.replace(/^#/, \'\');\r\n\r\n            // Parse the HEX color components\r\n            const red = parseInt(hex.slice(0, 2), 16) / 255;\r\n            const green = parseInt(hex.slice(2, 4), 16) / 255;\r\n            const blue = parseInt(hex.slice(4, 6), 16) / 255;\r\n\r\n            // Find the min and max values for RGB\r\n            const max = Math.max(red, green, blue);\r\n            const min = Math.min(red, green, blue);\r\n\r\n            let hue, saturation, lightness, alpha;\r\n\r\n            // Calculate the hue\r\n            if (max === min) {\r\n                hue = 0;\r\n            } else if (max === red) {\r\n                hue = ((green - blue) / (max - min)) % 6;\r\n            } else if (max === green) {\r\n                hue = (blue - red) / (max - min) + 2;\r\n            } else {\r\n                hue = (red - green) / (max - min) + 4;\r\n            }\r\n\r\n            hue = Math.round(hue * 60);\r\n\r\n            // Ensure hue is positive\r\n            if (hue < 0) {\r\n                hue += 360;\r\n            }\r\n\r\n            // Calculate the lightness\r\n            lightness = (max + min) / 2;\r\n\r\n            // Calculate the saturation\r\n            if (max === min) {\r\n                saturation = 0;\r\n            } else if (lightness <= 0.5) {\r\n                saturation = (max - min) / (2 * lightness);\r\n            } else {\r\n                saturation = (max - min) / (2 - 2 * lightness);\r\n            }\r\n\r\n            // Calculate alpha (default to 1 if not provided)\r\n            alpha = 1;\r\n\r\n            return `hsla(${hue}, ${Math.round(saturation * 100)}%, ${Math.round(lightness * 100)}%, ${alpha})`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hex = document.getElementById(\'hex\').value;\r\n\r\n            if (isValidHex(hex)) {\r\n                const result = hexToHsla(hex);\r\n                document.getElementById(\'result\').textContent = result;\r\n            } else {\r\n                document.getElementById(\'result\').textContent = \'Invalid HEX Color\';\r\n            }\r\n        }\r\n\r\n        // Function to check if a HEX color is valid\r\n        function isValidHex(hex) {\r\n            const hexPattern = /^#?([0-9A-Fa-f]{6})$/;\r\n            return hexPattern.test(hex);\r\n        }\r\n\r\n        // Attach event listener to input field for live update\r\n        const hexInput = document.getElementById(\'hex\');\r\n        hexInput.addEventListener(\'input\', updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HSLA Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HSLA Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(170, 2, 'HEX to HSL Converter', 'hex-to-hsl-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"hex\">HEX Color:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"hex\" placeholder=\"Enter HEX Color\">\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HSL Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert HEX to HSL\r\n        function hexToHsl(hex) {\r\n            // Remove the \"#\" character if present\r\n            hex = hex.replace(/^#/, \'\');\r\n\r\n            // Parse the HEX color components\r\n            const red = parseInt(hex.slice(0, 2), 16) / 255;\r\n            const green = parseInt(hex.slice(2, 4), 16) / 255;\r\n            const blue = parseInt(hex.slice(4, 6), 16) / 255;\r\n\r\n            // Find the min and max values for RGB\r\n            const max = Math.max(red, green, blue);\r\n            const min = Math.min(red, green, blue);\r\n\r\n            let hue, saturation, lightness;\r\n\r\n            // Calculate the hue\r\n            if (max === min) {\r\n                hue = 0;\r\n            } else if (max === red) {\r\n                hue = ((green - blue) / (max - min)) % 6;\r\n            } else if (max === green) {\r\n                hue = (blue - red) / (max - min) + 2;\r\n            } else {\r\n                hue = (red - green) / (max - min) + 4;\r\n            }\r\n\r\n            hue = Math.round(hue * 60);\r\n\r\n            // Ensure hue is positive\r\n            if (hue < 0) {\r\n                hue += 360;\r\n            }\r\n\r\n            // Calculate the lightness\r\n            lightness = (max + min) / 2;\r\n\r\n            // Calculate the saturation\r\n            if (max === min) {\r\n                saturation = 0;\r\n            } else if (lightness <= 0.5) {\r\n                saturation = (max - min) / (2 * lightness);\r\n            } else {\r\n                saturation = (max - min) / (2 - 2 * lightness);\r\n            }\r\n\r\n            return `hsl(${hue}, ${Math.round(saturation * 100)}%, ${Math.round(lightness * 100)}%)`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hex = document.getElementById(\'hex\').value;\r\n\r\n            if (isValidHex(hex)) {\r\n                const result = hexToHsl(hex);\r\n                document.getElementById(\'result\').textContent = result;\r\n            } else {\r\n                document.getElementById(\'result\').textContent = \'Invalid HEX Color\';\r\n            }\r\n        }\r\n\r\n        // Function to check if a HEX color is valid\r\n        function isValidHex(hex) {\r\n            const hexPattern = /^#?([0-9A-Fa-f]{6})$/;\r\n            return hexPattern.test(hex);\r\n        }\r\n\r\n        // Attach event listener to input field for live update\r\n        const hexInput = document.getElementById(\'hex\');\r\n        hexInput.addEventListener(\'input\', updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HSL Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HSL Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 6, 'publish'),
(171, 2, 'HEX to HSV Converter', 'hex-to-hsv-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"hex\">HEX Color:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"hex\" placeholder=\"Enter HEX Color\">\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HSV Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '\r\n    <script>\r\n        // Function to convert HEX to HSV\r\n        function hexToHsv(hex) {\r\n            // Remove the \"#\" character if present\r\n            hex = hex.replace(/^#/, \'\');\r\n\r\n            // Parse the HEX color components\r\n            const red = parseInt(hex.slice(0, 2), 16) / 255;\r\n            const green = parseInt(hex.slice(2, 4), 16) / 255;\r\n            const blue = parseInt(hex.slice(4, 6), 16) / 255;\r\n\r\n            // Find the maximum and minimum values for RGB\r\n            const max = Math.max(red, green, blue);\r\n            const min = Math.min(red, green, blue);\r\n\r\n            let hue, saturation, value;\r\n\r\n            // Calculate the hue\r\n            if (max === min) {\r\n                hue = 0;\r\n            } else if (max === red) {\r\n                hue = ((green - blue) / (max - min)) % 6;\r\n            } else if (max === green) {\r\n                hue = (blue - red) / (max - min) + 2;\r\n            } else {\r\n                hue = (red - green) / (max - min) + 4;\r\n            }\r\n\r\n            hue = Math.round(hue * 60);\r\n\r\n            // Ensure hue is positive\r\n            if (hue < 0) {\r\n                hue += 360;\r\n            }\r\n\r\n            // Calculate the value\r\n            value = Math.round(max * 100);\r\n\r\n            // Calculate the saturation\r\n            if (max === 0) {\r\n                saturation = 0;\r\n            } else {\r\n                saturation = Math.round(((max - min) / max) * 100);\r\n            }\r\n\r\n            return `HSV(${hue}, ${saturation}%, ${value}%)`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hex = document.getElementById(\'hex\').value;\r\n\r\n            if (isValidHex(hex)) {\r\n                const result = hexToHsv(hex);\r\n                document.getElementById(\'result\').textContent = result;\r\n            } else {\r\n                document.getElementById(\'result\').textContent = \'Invalid HEX Color\';\r\n            }\r\n        }\r\n\r\n        // Function to check if a HEX color is valid\r\n        function isValidHex(hex) {\r\n            const hexPattern = /^#?([0-9A-Fa-f]{6})$/;\r\n            return hexPattern.test(hex);\r\n        }\r\n\r\n        // Attach event listener to input field for live update\r\n        const hexInput = document.getElementById(\'hex\');\r\n        hexInput.addEventListener(\'input\', updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HSV Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HSV Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(172, 2, 'HEX to RGBA Converter', 'hex-to-rgba-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"hex\">HEX Color:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"hex\" placeholder=\"Enter HEX Color\">\r\n            </div>\r\n        </form>\r\n\r\n        <h2>RGBA Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert HEX to RGBA\r\n        function hexToRgba(hex, alpha) {\r\n            // Remove the \"#\" character if present\r\n            hex = hex.replace(/^#/, \'\');\r\n\r\n            // Parse the HEX color components\r\n            const red = parseInt(hex.slice(0, 2), 16);\r\n            const green = parseInt(hex.slice(2, 4), 16);\r\n            const blue = parseInt(hex.slice(4, 6), 16);\r\n\r\n            return `rgba(${red}, ${green}, ${blue}, ${alpha})`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hex = document.getElementById(\'hex\').value;\r\n            const alpha = 1.0; // You can change this value to customize the alpha channel\r\n\r\n            if (isValidHex(hex)) {\r\n                const result = hexToRgba(hex, alpha);\r\n                document.getElementById(\'result\').textContent = result;\r\n            } else {\r\n                document.getElementById(\'result\').textContent = \'Invalid HEX Color\';\r\n            }\r\n        }\r\n\r\n        // Function to check if a HEX color is valid\r\n        function isValidHex(hex) {\r\n            const hexPattern = /^#?([0-9A-Fa-f]{6})$/;\r\n            return hexPattern.test(hex);\r\n        }\r\n\r\n        // Attach event listener to input field for live update\r\n        const hexInput = document.getElementById(\'hex\');\r\n        hexInput.addEventListener(\'input\', updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>RGBA Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>RGBA Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(173, 2, 'HEX to RGB Converter', 'hex-to-rgb-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"hex\">HEX Color:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"hex\" placeholder=\"Enter HEX Color\">\r\n            </div>\r\n        </form>\r\n\r\n        <h2>RGB Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert HEX to RGB\r\n        function hexToRgb(hex) {\r\n            // Remove the \"#\" character if present\r\n            hex = hex.replace(/^#/, \'\');\r\n\r\n            // Parse the HEX color components\r\n            const red = parseInt(hex.slice(0, 2), 16);\r\n            const green = parseInt(hex.slice(2, 4), 16);\r\n            const blue = parseInt(hex.slice(4, 6), 16);\r\n\r\n            return `RGB(${red}, ${green}, ${blue})`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hex = document.getElementById(\'hex\').value;\r\n\r\n            if (isValidHex(hex)) {\r\n                const result = hexToRgb(hex);\r\n                document.getElementById(\'result\').textContent = result;\r\n            } else {\r\n                document.getElementById(\'result\').textContent = \'Invalid HEX Color\';\r\n            }\r\n        }\r\n\r\n        // Function to check if a HEX color is valid\r\n        function isValidHex(hex) {\r\n            const hexPattern = /^#?([0-9A-Fa-f]{6})$/;\r\n            return hexPattern.test(hex);\r\n        }\r\n\r\n        // Attach event listener to input field for live update\r\n        const hexInput = document.getElementById(\'hex\');\r\n        hexInput.addEventListener(\'input\', updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>RGB Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>RGB Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>\r\n', '', '', '', '', '', 9, 'publish'),
(174, 2, 'HEX to HEXA Converter', 'hex-to-hexa-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"hex\">HEX Color:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"hex\" placeholder=\"Enter HEX Color\">\r\n            </div>\r\n        </form>\r\n\r\n        <h2>HEXA Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert HEX to HEXA\r\n        function hexToHexa(hex) {\r\n            // Add default alpha value (100% opaque)\r\n            const hexa = hex + \"FF\";\r\n            return `#${hexa.toUpperCase()}`;\r\n        }\r\n\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const hex = document.getElementById(\'hex\').value;\r\n\r\n            if (isValidHex(hex)) {\r\n                const result = hexToHexa(hex);\r\n                document.getElementById(\'result\').textContent = result;\r\n            } else {\r\n                document.getElementById(\'result\').textContent = \'Invalid HEX Color\';\r\n            }\r\n        }\r\n\r\n        // Function to check if a HEX color is valid\r\n        function isValidHex(hex) {\r\n            const hexPattern = /^#?([0-9A-Fa-f]{6})$/;\r\n            return hexPattern.test(hex);\r\n        }\r\n\r\n        // Attach event listener to input field for live update\r\n        const hexInput = document.getElementById(\'hex\');\r\n        hexInput.addEventListener(\'input\', updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>HEXA Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>HEXA Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(175, 3, 'Color picker', 'color-picker', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"colorPicker\">Pick a Color:</label>\r\n                <input type=\"color\" class=\"form-control\" id=\"colorPicker\">\r\n            </div>\r\n        </form>\r\n\r\n        <h2>Converted Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to update the result\r\n        function updateResult() {\r\n            const colorPicker = document.getElementById(\'colorPicker\');\r\n            const result = colorPicker.value;\r\n            document.getElementById(\'result\').textContent = result;\r\n        }\r\n\r\n        // Attach event listener to color picker for live update\r\n        const colorPicker = document.getElementById(\'colorPicker\');\r\n        colorPicker.addEventListener(\'input\', updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n\r\n        // Function to open the result in a new window\r\n        function openResultInNewWindow() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const newWindow = window.open(\'\', \'Result\', \'width=300,height=100\');\r\n            newWindow.document.write(\'<html><head><title>Converted Result</title></head><body>\');\r\n            newWindow.document.write(\'<h2>Converted Result:</h2>\');\r\n            newWindow.document.write(\'<p>\' + resultText + \'</p>\');\r\n            newWindow.document.write(\'</body></html>\');\r\n            newWindow.document.close();\r\n        }\r\n\r\n        // Attach event listener to the \"Open in New Window\" button\r\n        const openInNewWindowButton = document.createElement(\'button\');\r\n        openInNewWindowButton.className = \'btn btn-secondary\';\r\n        openInNewWindowButton.textContent = \'Open in New Window\';\r\n        openInNewWindowButton.addEventListener(\'click\', openResultInNewWindow);\r\n        document.body.appendChild(openInNewWindowButton);\r\n    </script>', '', '', '', '', '', 0, 'publish'),
(176, 3, 'Exif reader', 'exif-reader', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"imageInput\">Select an Image:</label>\r\n                <input type=\"file\" accept=\"image/*\" class=\"form-control-file\" id=\"imageInput\">\r\n            </div>\r\n        </form>\r\n\r\n        <h2>Exif Data:</h2>\r\n        <pre id=\"result\"></pre>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script src=\"https://cdnjs.cloudflare.com/ajax/libs/exif-js/2.3.0/exif.js\"></script>\r\n    <script>\r\n        // Function to handle file input change\r\n        function handleImageUpload() {\r\n            const imageInput = document.getElementById(\'imageInput\');\r\n            const resultElement = document.getElementById(\'result\');\r\n\r\n            if (imageInput.files && imageInput.files[0]) {\r\n                const imageFile = imageInput.files[0];\r\n\r\n                // Use FileReader to read the image file\r\n                const reader = new FileReader();\r\n                reader.onload = function (e) {\r\n                    const imageSrc = e.target.result;\r\n\r\n                    // Use exif-js to parse Exif data\r\n                    EXIF.getData(imageFile, function() {\r\n                        const exifData = EXIF.getAllTags(this);\r\n                        resultElement.textContent = JSON.stringify(exifData, null, 2);\r\n                    });\r\n                };\r\n                reader.readAsDataURL(imageFile);\r\n            } else {\r\n                resultElement.textContent = \'No image selected.\';\r\n            }\r\n        }\r\n\r\n        // Attach event listener to file input for image upload\r\n        const imageInput = document.getElementById(\'imageInput\');\r\n        imageInput.addEventListener(\'change\', handleImageUpload);\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n    </script>\r\n', '', '', '', '', '', 38, 'publish'),
(177, 3, 'QR code reader', 'qr-code-reader', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"qrCodeInput\">Scan QR Code:</label>\r\n                <input type=\"file\" accept=\"image/*\" class=\"form-control-file\" id=\"qrCodeInput\">\r\n            </div>\r\n        </form>\r\n\r\n        <h2>QR Code Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '  <script src=\"https://cdn.rawgit.com/cozmo/jsQR/master/dist/jsQR.js\"></script>\r\n    <script>\r\n        // Function to handle file input change\r\n        async function handleQRCodeScan() {\r\n            const qrCodeInput = document.getElementById(\'qrCodeInput\');\r\n            const resultElement = document.getElementById(\'result\');\r\n\r\n            if (qrCodeInput.files && qrCodeInput.files[0]) {\r\n                const qrCodeFile = qrCodeInput.files[0];\r\n\r\n                // Use FileReader to read the QR code image\r\n                const reader = new FileReader();\r\n                reader.onload = async function (e) {\r\n                    const qrCodeImage = new Image();\r\n                    qrCodeImage.src = e.target.result;\r\n\r\n                    qrCodeImage.onload = async function() {\r\n                        // Create a canvas element to decode the QR code\r\n                        const canvas = document.createElement(\'canvas\');\r\n                        const context = canvas.getContext(\'2d\');\r\n                        canvas.width = qrCodeImage.width;\r\n                        canvas.height = qrCodeImage.height;\r\n                        context.drawImage(qrCodeImage, 0, 0, qrCodeImage.width, qrCodeImage.height);\r\n\r\n                        // Decode the QR code\r\n                        const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\r\n                        const code = jsQR(imageData.data, canvas.width, canvas.height);\r\n\r\n                        if (code) {\r\n                            resultElement.textContent = code.data;\r\n                        } else {\r\n                            resultElement.textContent = \'QR code not found.\';\r\n                        }\r\n                    };\r\n                };\r\n                reader.readAsDataURL(qrCodeFile);\r\n            } else {\r\n                resultElement.textContent = \'No QR code image selected.\';\r\n            }\r\n        }\r\n\r\n        // Attach event listener to file input for QR code scanning\r\n        const qrCodeInput = document.getElementById(\'qrCodeInput\');\r\n        qrCodeInput.addEventListener(\'change\', handleQRCodeScan);\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n    </script>', '', '', '', '', '', 100, 'publish'),
(178, 3, 'Image optimizer', 'image-optimizer', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"imageInput\">Select an Image:</label>\r\n                <input type=\"file\" accept=\"image/*\" class=\"form-control-file\" id=\"imageInput\">\r\n            </div>\r\n        </form>\r\n\r\n        <h2>Optimized Image:</h2>\r\n        <img id=\"optimizedImage\" src=\"\" alt=\"Optimized Image\">\r\n\r\n        <h2>Image URL:</h2>\r\n        <p id=\"result\"></p>\r\n\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to handle file input change and optimize the image\r\n        async function handleImageOptimization() {\r\n            const imageInput = document.getElementById(\'imageInput\');\r\n            const optimizedImage = document.getElementById(\'optimizedImage\');\r\n            const resultElement = document.getElementById(\'result\');\r\n\r\n            if (imageInput.files && imageInput.files[0]) {\r\n                const imageFile = imageInput.files[0];\r\n\r\n                // Create a FormData object to send the image to TinyPNG\r\n                const formData = new FormData();\r\n                formData.append(\'file\', imageFile);\r\n\r\n                // Replace \'YOUR_API_KEY\' with your actual TinyPNG API key\r\n                const apiKey = \'YOUR_API_KEY\';\r\n\r\n                try {\r\n                    const response = await fetch(`https://api.tinify.com/shrink`, {\r\n                        method: \'POST\',\r\n                        headers: {\r\n                            Authorization: `Basic ${btoa(`api:${apiKey}`)}`\r\n                        },\r\n                        body: formData\r\n                    });\r\n\r\n                    if (response.ok) {\r\n                        const result = await response.json();\r\n                        const optimizedImageUrl = result.output.url;\r\n                        optimizedImage.src = optimizedImageUrl;\r\n                        resultElement.textContent = optimizedImageUrl;\r\n                    } else {\r\n                        resultElement.textContent = \'Image optimization failed.\';\r\n                    }\r\n                } catch (error) {\r\n                    resultElement.textContent = \'An error occurred during optimization.\';\r\n                    console.error(error);\r\n                }\r\n            } else {\r\n                resultElement.textContent = \'No image selected.\';\r\n            }\r\n        }\r\n\r\n        // Attach event listener to file input for image optimization\r\n        const imageInput = document.getElementById(\'imageInput\');\r\n        imageInput.addEventListener(\'change\', handleImageOptimization);\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = document.getElementById(\'result\').textContent;\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n    </script>', '', '', '', '', '', 139, 'publish'),
(179, 3, 'YouTube Thumbnail Downloader', 'youtube-thumbnail-downloader', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"videoUrl\">Enter YouTube Video URL:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"videoUrl\" placeholder=\"E.g., https://www.youtube.com/watch?v=VIDEO_ID\">\r\n            </div>\r\n        </form>\r\n\r\n        <h2>Thumbnail URLs:</h2>\r\n        <ul id=\"thumbnailList\"></ul>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to fetch YouTube thumbnail URLs\r\n        async function fetchThumbnails() {\r\n            const videoUrlInput = document.getElementById(\'videoUrl\');\r\n            const thumbnailList = document.getElementById(\'thumbnailList\');\r\n            const videoUrl = videoUrlInput.value;\r\n\r\n            // Extract video ID from the URL\r\n            const videoId = extractVideoId(videoUrl);\r\n\r\n            if (!videoId) {\r\n                alert(\'Invalid YouTube URL. Please provide a valid YouTube video URL.\');\r\n                return;\r\n            }\r\n\r\n            // Replace \'YOUR_API_KEY\' with your actual YouTube Data API key\r\n            const apiKey = \'YOUR_API_KEY\';\r\n\r\n            try {\r\n                const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=${apiKey}&part=snippet`, {\r\n                    method: \'GET\',\r\n                });\r\n\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    const thumbnails = data.items[0].snippet.thumbnails;\r\n\r\n                    // Create a list of thumbnail URLs\r\n                    const thumbnailUrls = Object.values(thumbnails).map(thumbnail => thumbnail.url);\r\n\r\n                    // Clear previous results\r\n                    thumbnailList.innerHTML = \'\';\r\n\r\n                    // Display thumbnail URLs\r\n                    thumbnailUrls.forEach(url => {\r\n                        const listItem = document.createElement(\'li\');\r\n                        listItem.textContent = url;\r\n                        thumbnailList.appendChild(listItem);\r\n                    });\r\n                } else {\r\n                    alert(\'Failed to fetch thumbnails. Please check the video URL or try again later.\');\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n                alert(\'An error occurred while fetching thumbnails. Please try again later.\');\r\n            }\r\n        }\r\n\r\n        // Function to extract YouTube video ID from URL\r\n        function extractVideoId(url) {\r\n            const match = url.match(/[?&]v=([a-zA-Z0-9_-]{11})/);\r\n            return match ? match[1] : null;\r\n        }\r\n\r\n        // Attach event listener to input for fetching thumbnails\r\n        const videoUrlInput = document.getElementById(\'videoUrl\');\r\n        videoUrlInput.addEventListener(\'input\', fetchThumbnails);\r\n\r\n        // Function to copy the result to the clipboard\r\n        function copyResult() {\r\n            const resultText = Array.from(document.querySelectorAll(\'#thumbnailList li\')).map(li => li.textContent).join(\'\\n\');\r\n            const textArea = document.createElement(\'textarea\');\r\n            textArea.value = resultText;\r\n            document.body.appendChild(textArea);\r\n            textArea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textArea);\r\n            alert(\'Result copied to clipboard.\');\r\n        }\r\n\r\n        // Attach event listener to the \"Copy Result\" button\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n        copyButton.addEventListener(\'click\', copyResult);\r\n    </script>', '', '', 'YouTube Thumbnail Downloader', 'YouTube Thumbnail Downloader Meta Description', 'YouTube Thumbnail Downloader Meta Keywords', 102, 'draft'),
(180, 1, 'Dummy Image Generator', 'dummy-image-generator', '<form id=\"divForm\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"height\">Height (in pixels):</label>\r\n                        <input type=\"number\" class=\"form-control\" id=\"height\" min=\"0\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"width\">Width (in pixels):</label>\r\n                        <input type=\"number\" class=\"form-control\" id=\"width\" min=\"0\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"backgroundColor\">Background Color:</label>\r\n                        <input type=\"color\" class=\"form-control\" id=\"backgroundColor\">\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <h3>Generated Div</h3>\r\n                <div id=\"generatedDiv\"></div>\r\n            </div>\r\n          <br>\r\n           <button class=\"btn btn-primary\" id=\"downloadBtn\">Download as Image</button>', '', '<script src=\"https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.5.0-beta4/html2canvas.min.js\"></script>\r\n    \r\n    <script>\r\n        // Function to generate and update the div\r\n        function generateDiv() {\r\n            const height = document.getElementById(\'height\').value + \'px\';\r\n            const width = document.getElementById(\'width\').value + \'px\';\r\n            const backgroundColor = document.getElementById(\'backgroundColor\').value;\r\n            \r\n            const generatedDiv = document.getElementById(\'generatedDiv\');\r\n            generatedDiv.style.height = height;\r\n            generatedDiv.style.width = width;\r\n            generatedDiv.style.backgroundColor = backgroundColor;\r\n\r\n            generatedDiv.innerHTML = `Height: ${height}<br>Width: ${width}`;\r\n        }\r\n\r\n        // Event listener to update the div while typing\r\n        document.getElementById(\'divForm\').addEventListener(\'input\', generateDiv);\r\n\r\n        // Function to download the div as an image\r\n        document.getElementById(\'downloadBtn\').addEventListener(\'click\', function() {\r\n            const generatedDiv = document.getElementById(\'generatedDiv\');\r\n            \r\n            html2canvas(generatedDiv).then(canvas => {\r\n                const link = document.createElement(\'a\');\r\n                link.href = canvas.toDataURL();\r\n                link.download = \'generated_div.png\';\r\n                link.click();\r\n            });\r\n        });\r\n\r\n        // Initial div generation\r\n        generateDiv();\r\n    </script>', '', '', '', '', '', 44, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(181, 1, 'Border Radius Generator', 'border-radius-generator', '<div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <!-- Border Radius Input Form -->\r\n                <form id=\"borderRadiusForm\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"topLeft\">Top Left:</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"topLeft\" placeholder=\"0\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"topRight\">Top Right:</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"topRight\" placeholder=\"0\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"bottomLeft\">Bottom Left:</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"bottomLeft\" placeholder=\"0\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"bottomRight\">Bottom Right:</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"bottomRight\" placeholder=\"0\">\r\n                    </div>\r\n                </form>\r\n                <!-- Copy CSS Button -->\r\n                <button class=\"btn btn-primary\" id=\"copyCSS\">Copy CSS</button>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <!-- Live Preview Div -->\r\n                <div id=\"result\"></div>\r\n                <!-- CSS Code Display -->\r\n                <pre id=\"cssCode\"></pre>\r\n            </div>\r\n        </div>', ' <style>         #result {             width: 200px;             height: 200px;             background-color: #007bff;             border-radius: 0;             margin: 20px auto;         }     </style>', ' <script>\r\n        // Function to update the border-radius and display CSS code\r\n        function updateBorderRadius() {\r\n            const topLeft = $(\'#topLeft\').val() + \'px\';\r\n            const topRight = $(\'#topRight\').val() + \'px\';\r\n            const bottomLeft = $(\'#bottomLeft\').val() + \'px\';\r\n            const bottomRight = $(\'#bottomRight\').val() + \'px\';\r\n\r\n            const cssCode = `border-radius: ${topLeft} ${topRight} ${bottomRight} ${bottomLeft};`;\r\n            \r\n            // Update the live preview\r\n            $(\'#result\').css({\r\n                \'border-top-left-radius\': topLeft,\r\n                \'border-top-right-radius\': topRight,\r\n                \'border-bottom-left-radius\': bottomLeft,\r\n                \'border-bottom-right-radius\': bottomRight\r\n            });\r\n\r\n            // Display the CSS code\r\n            $(\'#cssCode\').text(cssCode);\r\n        }\r\n\r\n        // Copy CSS to clipboard\r\n        $(\'#copyCSS\').click(function () {\r\n            const cssCode = $(\'#cssCode\').text();\r\n            const textarea = document.createElement(\'textarea\');\r\n            textarea.value = cssCode;\r\n            document.body.appendChild(textarea);\r\n            textarea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textarea);\r\n            alert(\'CSS code copied to clipboard!\');\r\n        });\r\n\r\n        // Listen to input changes and update the preview\r\n        $(\'#borderRadiusForm input\').on(\'input\', updateBorderRadius);\r\n        \r\n        // Initial update\r\n        updateBorderRadius();\r\n    </script>', '', '', '', '', '', 25, 'publish'),
(182, 1, 'Border Generator', 'border-generator', '<div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <!-- Border Input Form -->\r\n                <form id=\"borderForm\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"borderWidth\">Border Width (px):</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"borderWidth\" placeholder=\"0\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"borderStyle\">Border Style:</label>\r\n                        <select class=\"form-control\" id=\"borderStyle\">\r\n                            <option value=\"solid\">Solid</option>\r\n                            <option value=\"dotted\">Dotted</option>\r\n                            <option value=\"dashed\">Dashed</option>\r\n                            <option value=\"double\">Double</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"borderColor\">Border Color:</label>\r\n                        <input type=\"color\" class=\"form-control\" id=\"borderColor\" value=\"#007bff\">\r\n                    </div>\r\n                </form>\r\n                <!-- Copy CSS Button -->\r\n                <button class=\"btn btn-primary\" id=\"copyCSS\">Copy CSS</button>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <!-- Live Preview Div -->\r\n                <div id=\"result\"></div>\r\n                <!-- CSS Code Display -->\r\n                <pre id=\"cssCode\"></pre>\r\n            </div>\r\n        </div>', '<style>\r\n        #result {\r\n            width: 200px;\r\n            height: 200px;\r\n            background-color: #007bff;\r\n            border: 0;\r\n            margin: 20px auto;\r\n        }\r\n    </style>', '<script>\r\n        // Function to update the border properties and display CSS code\r\n        function updateBorder() {\r\n            const borderWidth = $(\'#borderWidth\').val() + \'px\';\r\n            const borderStyle = $(\'#borderStyle\').val();\r\n            const borderColor = $(\'#borderColor\').val();\r\n\r\n            const cssCode = `border: ${borderWidth} ${borderStyle} ${borderColor};`;\r\n\r\n            // Update the live preview\r\n            $(\'#result\').css({\r\n                \'border-width\': borderWidth,\r\n                \'border-style\': borderStyle,\r\n                \'border-color\': borderColor\r\n            });\r\n\r\n            // Display the CSS code\r\n            $(\'#cssCode\').text(cssCode);\r\n        }\r\n\r\n        // Copy CSS to clipboard\r\n        $(\'#copyCSS\').click(function () {\r\n            const cssCode = $(\'#cssCode\').text();\r\n            const textarea = document.createElement(\'textarea\');\r\n            textarea.value = cssCode;\r\n            document.body.appendChild(textarea);\r\n            textarea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textarea);\r\n            alert(\'CSS code copied to clipboard!\');\r\n        });\r\n\r\n        // Listen to input changes and update the preview\r\n        $(\'#borderForm input, #borderStyle, #borderColor\').on(\'input\', updateBorder);\r\n\r\n        // Initial update\r\n        updateBorder();\r\n    </script>', '', '', '', '', '', 21, 'publish'),
(183, 1, 'CSS Flex Box Generator', 'css-flex-box-generator', '<div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <!-- Flexbox Input Form -->\r\n                <form id=\"flexboxForm\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"justifyContent\">Justify Content:</label>\r\n                        <select class=\"form-control\" id=\"justifyContent\">\r\n                            <option value=\"flex-start\">Flex Start</option>\r\n                            <option value=\"flex-end\">Flex End</option>\r\n                            <option value=\"center\">Center</option>\r\n                            <option value=\"space-between\">Space Between</option>\r\n                            <option value=\"space-around\">Space Around</option>\r\n                            <option value=\"space-evenly\">Space Evenly</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"alignItems\">Align Items:</label>\r\n                        <select class=\"form-control\" id=\"alignItems\">\r\n                            <option value=\"flex-start\">Flex Start</option>\r\n                            <option value=\"flex-end\">Flex End</option>\r\n                            <option value=\"center\">Center</option>\r\n                            <option value=\"baseline\">Baseline</option>\r\n                            <option value=\"stretch\">Stretch</option>\r\n                        </select>\r\n                    </div>\r\n                </form>\r\n                <!-- Copy CSS Button -->\r\n                <button class=\"btn btn-primary\" id=\"copyCSS\">Copy CSS</button>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <!-- Live Preview Div -->\r\n                <div id=\"result\">Flexbox</div>\r\n                <!-- CSS Code Display -->\r\n                <pre id=\"cssCode\"></pre>\r\n            </div>\r\n        </div>', '<style>\r\n        #result {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            width: 200px;\r\n            height: 200px;\r\n            background-color: #007bff;\r\n            border: 1px solid #000;\r\n            margin: 20px auto;\r\n        }\r\n    </style>', '<script>\r\n        // Function to update the flexbox properties and display CSS code\r\n        function updateFlexbox() {\r\n            const justifyContent = $(\'#justifyContent\').val();\r\n            const alignItems = $(\'#alignItems\').val();\r\n\r\n            const cssCode = `display: flex;\\njustify-content: ${justifyContent};\\nalign-items: ${alignItems};`;\r\n\r\n            // Update the live preview\r\n            $(\'#result\').css({\r\n                \'justify-content\': justifyContent,\r\n                \'align-items\': alignItems\r\n            });\r\n\r\n            // Display the CSS code\r\n            $(\'#cssCode\').text(cssCode);\r\n        }\r\n\r\n        // Copy CSS to clipboard\r\n        $(\'#copyCSS\').click(function () {\r\n            const cssCode = $(\'#cssCode\').text();\r\n            const textarea = document.createElement(\'textarea\');\r\n            textarea.value = cssCode;\r\n            document.body.appendChild(textarea);\r\n            textarea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textarea);\r\n            alert(\'CSS code copied to clipboard!\');\r\n        });\r\n\r\n        // Listen to input changes and update the preview\r\n        $(\'#flexboxForm select\').on(\'change\', updateFlexbox);\r\n\r\n        // Initial update\r\n        updateFlexbox();\r\n    </script>', '', '', '', '', '', 30, 'publish'),
(184, 1, 'CSS Box Model Generator', 'css-box-model-generator', ' <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <!-- Box Model Input Form -->\r\n                <form id=\"boxModelForm\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"margin\">Margin (px):</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"margin\" placeholder=\"0\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"padding\">Padding (px):</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"padding\" placeholder=\"0\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"borderWidth\">Border Width (px):</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"borderWidth\" placeholder=\"0\">\r\n                    </div>\r\n                </form>\r\n                <!-- Copy CSS Button -->\r\n                <button class=\"btn btn-primary\" id=\"copyCSS\">Copy CSS</button>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <!-- Live Preview Div -->\r\n                <div id=\"result\">Box Model</div>\r\n                <!-- CSS Code Display -->\r\n                <pre id=\"cssCode\"></pre>\r\n            </div>\r\n        </div>', ' <style>\r\n        #result {\r\n            width: 200px;\r\n            height: 200px;\r\n            background-color: #007bff;\r\n            border: 1px solid #000;\r\n            margin: 20px auto;\r\n        }\r\n    </style>', ' <script>\r\n        // Function to update the box model properties and display CSS code\r\n        function updateBoxModel() {\r\n            const margin = $(\'#margin\').val() + \'px\';\r\n            const padding = $(\'#padding\').val() + \'px\';\r\n            const borderWidth = $(\'#borderWidth\').val() + \'px\';\r\n\r\n            const cssCode = `margin: ${margin};\\npadding: ${padding};\\nborder-width: ${borderWidth};`;\r\n\r\n            // Update the live preview\r\n            $(\'#result\').css({\r\n                \'margin\': margin,\r\n                \'padding\': padding,\r\n                \'border-width\': borderWidth\r\n            });\r\n\r\n            // Display the CSS code\r\n            $(\'#cssCode\').text(cssCode);\r\n        }\r\n\r\n        // Copy CSS to clipboard\r\n        $(\'#copyCSS\').click(function () {\r\n            const cssCode = $(\'#cssCode\').text();\r\n            const textarea = document.createElement(\'textarea\');\r\n            textarea.value = cssCode;\r\n            document.body.appendChild(textarea);\r\n            textarea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textarea);\r\n            alert(\'CSS code copied to clipboard!\');\r\n        });\r\n\r\n        // Listen to input changes and update the preview\r\n        $(\'#boxModelForm input\').on(\'input\', updateBoxModel);\r\n\r\n        // Initial update\r\n        updateBoxModel();\r\n    </script>', '', '', '', '', '', 57, 'publish'),
(185, 1, 'CSS Button Generator', 'css-button-generator', '<div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <!-- Button Input Form -->\r\n                <form id=\"buttonForm\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"backgroundColor\">Background Color:</label>\r\n                        <input type=\"color\" class=\"form-control\" id=\"backgroundColor\" value=\"#007bff\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"textColor\">Text Color:</label>\r\n                        <input type=\"color\" class=\"form-control\" id=\"textColor\" value=\"#fff\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"padding\">Padding (px):</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"padding\" placeholder=\"10px 20px\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"borderWidth\">Border Width (px):</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"borderWidth\" placeholder=\"1px\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"borderRadius\">Border Radius (px):</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"borderRadius\" placeholder=\"5px\">\r\n                    </div>\r\n                </form>\r\n                <!-- Copy CSS Button -->\r\n                <button class=\"btn btn-primary\" id=\"copyCSS\">Copy CSS</button>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <!-- Live Preview Button -->\r\n                <button id=\"result\">Button</button>\r\n                <!-- CSS Code Display -->\r\n                <pre id=\"cssCode\"></pre>\r\n            </div>\r\n        </div>', ' <style>\r\n        #result {\r\n            display: inline-block;\r\n            padding: 10px 20px;\r\n            background-color: #007bff;\r\n            color: #fff;\r\n            border: 1px solid #0056b3;\r\n            border-radius: 5px;\r\n            margin: 20px;\r\n            cursor: pointer;\r\n        }\r\n    </style>', '<script>\r\n        // Function to update the button styles and display CSS code\r\n        function updateButtonStyles() {\r\n            const backgroundColor = $(\'#backgroundColor\').val();\r\n            const textColor = $(\'#textColor\').val();\r\n            const padding = $(\'#padding\').val();\r\n            const borderWidth = $(\'#borderWidth\').val() + \'px\';\r\n            const borderRadius = $(\'#borderRadius\').val() + \'px\';\r\n\r\n            const cssCode = `background-color: ${backgroundColor};\\ncolor: ${textColor};\\npadding: ${padding};\\nborder: ${borderWidth} solid #0056b3;\\nborder-radius: ${borderRadius};`;\r\n\r\n            // Update the live preview button\r\n            $(\'#result\').css({\r\n                \'background-color\': backgroundColor,\r\n                \'color\': textColor,\r\n                \'padding\': padding,\r\n                \'border-width\': borderWidth,\r\n                \'border-radius\': borderRadius\r\n            });\r\n\r\n            // Display the CSS code\r\n            $(\'#cssCode\').text(cssCode);\r\n        }\r\n\r\n        // Copy CSS to clipboard\r\n        $(\'#copyCSS\').click(function () {\r\n            const cssCode = $(\'#cssCode\').text();\r\n            const textarea = document.createElement(\'textarea\');\r\n            textarea.value = cssCode;\r\n            document.body.appendChild(textarea);\r\n            textarea.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textarea);\r\n            alert(\'CSS code copied to clipboard!\');\r\n        });\r\n\r\n        // Listen to input changes and update the preview\r\n        $(\'#buttonForm input, #padding, #borderWidth, #borderRadius\').on(\'input\', updateButtonStyles);\r\n\r\n        // Initial update\r\n        updateButtonStyles();\r\n    </script>', '', '', '', '', '', 139, 'publish'),
(186, 1, 'CSS Gradient Color Generator', 'css-gradient-color-generator', '<div id=\"gradient-container\">\r\n        Gradient\r\n    </div>\r\n    <div id=\"controls\">\r\n        <h3>Choose Parameters</h3>\r\n        <label for=\"startColor\">Start Color:</label>\r\n        <input type=\"color\" id=\"startColor\" value=\"#FF5733\">\r\n        <label for=\"endColor\">End Color:</label>\r\n        <input type=\"color\" id=\"endColor\" value=\"#FFC300\">\r\n        <label for=\"direction\">Gradient Direction:</label>\r\n        <select id=\"direction\">\r\n            <option value=\"to right\">Left to Right</option>\r\n            <option value=\"to left\">Right to Left</option>\r\n            <option value=\"to top\">Top to Bottom</option>\r\n            <option value=\"to bottom\">Bottom to Top</option>\r\n            <option value=\"to top right\">Top Right to Bottom Left</option>\r\n            <option value=\"to bottom right\">Bottom Right to Top Left</option>\r\n            <option value=\"to top left\">Top Left to Bottom Right</option>\r\n            <option value=\"to bottom left\">Bottom Left to Top Right</option>\r\n        </select>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyCSS\">Copy CSS</button>', ' #gradient-container {\r\n            width: 200px;\r\n            height: 200px;\r\n            background: linear-gradient(to right, #FF5733, #FFC300);\r\n            border-radius: 20px;\r\n        }\r\n\r\n        #controls {\r\n            text-align: center;\r\n            margin-top: 20px;\r\n        }\r\n\r\n        label {\r\n            display: block;\r\n            font-weight: bold;\r\n        }', '<script>\r\n        const container = document.getElementById(\'gradient-container\');\r\n        const startColorInput = document.getElementById(\'startColor\');\r\n        const endColorInput = document.getElementById(\'endColor\');\r\n        const directionSelect = document.getElementById(\'direction\');\r\n        const copyCSSButton = document.getElementById(\'copyCSS\');\r\n\r\n        function updateGradient() {\r\n            const startColor = startColorInput.value;\r\n            const endColor = endColorInput.value;\r\n            const direction = directionSelect.value;\r\n            const gradientValue = `linear-gradient(${direction}, ${startColor}, ${endColor})`;\r\n            container.style.background = gradientValue;\r\n        }\r\n\r\n        startColorInput.addEventListener(\'input\', updateGradient);\r\n        endColorInput.addEventListener(\'input\', updateGradient);\r\n        directionSelect.addEventListener(\'change\', updateGradient);\r\n\r\n        copyCSSButton.addEventListener(\'click\', function () {\r\n            const startColor = startColorInput.value;\r\n            const endColor = endColorInput.value;\r\n            const direction = directionSelect.value;\r\n            const cssCode = `background: linear-gradient(${direction}, ${startColor}, ${endColor});\\nborder-radius: 20px;`;\r\n            \r\n            // Create a textarea element to copy the code\r\n            const textarea = document.createElement(\'textarea\');\r\n            textarea.value = cssCode;\r\n            document.body.appendChild(textarea);\r\n            textarea.select();\r\n            \r\n            // Copy the code to the clipboard\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textarea);\r\n            \r\n            alert(\'CSS code copied to clipboard!\');\r\n        });\r\n\r\n        updateGradient(); // Initial update\r\n    </script>', '', '', '', '', '', 70, 'publish'),
(187, 1, 'CSS Box Shadow Generator', 'css-box-shadow-generator', '<div class=\"box-container\" id=\"box-container\">\r\n    </div>\r\n    <div id=\"controls\">\r\n        <h3>CSS Box Shadow Generator</h3>\r\n        <label for=\"horizontal\">Horizontal Offset:</label>\r\n        <input type=\"range\" id=\"horizontal\" min=\"-20\" max=\"20\" step=\"1\" value=\"0\">\r\n        <label for=\"vertical\">Vertical Offset:</label>\r\n        <input type=\"range\" id=\"vertical\" min=\"-20\" max=\"20\" step=\"1\" value=\"4\">\r\n        <label for=\"blur\">Blur Radius:</label>\r\n        <input type=\"range\" id=\"blur\" min=\"0\" max=\"20\" step=\"1\" value=\"6\">\r\n        <label for=\"spread\">Spread Radius:</label>\r\n        <input type=\"range\" id=\"spread\" min=\"0\" max=\"20\" step=\"1\" value=\"0\">\r\n        <label for=\"color\">Shadow Color:</label>\r\n        <input type=\"color\" id=\"color\" value=\"#000000\">\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyCSS\">Copy CSS</button>\r\n    </div>', '.box-container {\r\n            width: 200px;\r\n            height: 200px;\r\n            background-color: #f0f0f0;\r\n            border-radius: 20px;\r\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n            transition: box-shadow 0.3s ease-in-out;\r\n        }\r\n\r\n        #controls {\r\n            margin-top: 20px;\r\n        }\r\n\r\n        label {\r\n            font-weight: bold;\r\n        }', ' <script>\r\n        const boxContainer = document.getElementById(\'box-container\');\r\n        const horizontalInput = document.getElementById(\'horizontal\');\r\n        const verticalInput = document.getElementById(\'vertical\');\r\n        const blurInput = document.getElementById(\'blur\');\r\n        const spreadInput = document.getElementById(\'spread\');\r\n        const colorInput = document.getElementById(\'color\');\r\n        const copyCSSButton = document.getElementById(\'copyCSS\');\r\n\r\n        function updateBoxShadow() {\r\n            const horizontal = horizontalInput.value + \'px\';\r\n            const vertical = verticalInput.value + \'px\';\r\n            const blur = blurInput.value + \'px\';\r\n            const spread = spreadInput.value + \'px\';\r\n            const color = colorInput.value;\r\n\r\n            const boxShadowValue = `${horizontal} ${vertical} ${blur} ${spread} ${color}`;\r\n            boxContainer.style.boxShadow = boxShadowValue;\r\n        }\r\n\r\n        horizontalInput.addEventListener(\'input\', updateBoxShadow);\r\n        verticalInput.addEventListener(\'input\', updateBoxShadow);\r\n        blurInput.addEventListener(\'input\', updateBoxShadow);\r\n        spreadInput.addEventListener(\'input\', updateBoxShadow);\r\n        colorInput.addEventListener(\'input\', updateBoxShadow);\r\n\r\n        copyCSSButton.addEventListener(\'click\', function () {\r\n            const horizontal = horizontalInput.value + \'px\';\r\n            const vertical = verticalInput.value + \'px\';\r\n            const blur = blurInput.value + \'px\';\r\n            const spread = spreadInput.value + \'px\';\r\n            const color = colorInput.value;\r\n            const cssCode = `box-shadow: ${horizontal} ${vertical} ${blur} ${spread} ${color};\\nborder-radius: 20px;`;\r\n            \r\n            // Create a textarea element to copy the code\r\n            const textarea = document.createElement(\'textarea\');\r\n            textarea.value = cssCode;\r\n            document.body.appendChild(textarea);\r\n            textarea.select();\r\n            \r\n            // Copy the code to the clipboard\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(textarea);\r\n            \r\n            alert(\'CSS code copied to clipboard!\');\r\n        });\r\n\r\n        updateBoxShadow(); // Initial update\r\n    </script>', '', '', '', '', '', 94, 'publish'),
(188, 2, 'Liters to Gallons Converter', 'liters-to-gallons-converter', '<form id=\"converter-form\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"litersInput\">Enter Liters:</label>\r\n                        <input type=\"number\" class=\"form-control\" id=\"litersInput\" placeholder=\"Enter liters\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"result\">Result:</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"result\" readonly>\r\n                    </div>\r\n                    <button type=\"button\" class=\"btn btn-primary\" id=\"convertButton\">Convert</button>\r\n                    <button type=\"button\" class=\"btn btn-secondary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const litersInput = document.getElementById(\'litersInput\');\r\n        const resultInput = document.getElementById(\'result\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Conversion factor: 1 liter = 0.264172 gallons\r\n        const litersToGallons = 0.264172;\r\n\r\n        function convertLitersToGallons() {\r\n            const liters = parseFloat(litersInput.value);\r\n            if (!isNaN(liters)) {\r\n                const gallons = liters * litersToGallons;\r\n                resultInput.value = `${liters} liters = ${gallons.toFixed(2)} gallons`;\r\n            } else {\r\n                resultInput.value = \'Invalid input\';\r\n            }\r\n        }\r\n\r\n        function copyResultToClipboard() {\r\n            const resultText = resultInput.value;\r\n            \r\n            // Create a temporary input element\r\n            const tempInput = document.createElement(\'input\');\r\n            document.body.appendChild(tempInput);\r\n            tempInput.value = resultText;\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n\r\n            alert(\'Result copied to clipboard\');\r\n        }\r\n\r\n        convertButton.addEventListener(\'click\', convertLitersToGallons);\r\n        copyButton.addEventListener(\'click\', copyResultToClipboard);\r\n\r\n        // Convert on input change\r\n        litersInput.addEventListener(\'input\', convertLitersToGallons);\r\n\r\n        // Initial conversion\r\n        convertLitersToGallons();\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(189, 2, 'Gallons to Liters Converter', 'gallons-to-liters-converter', '<form id=\"converter-form\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"gallonsInput\">Enter Gallons:</label>\r\n                        <input type=\"number\" class=\"form-control\" id=\"gallonsInput\" placeholder=\"Enter gallons\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"result\">Result:</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"result\" readonly>\r\n                    </div>\r\n                    <button type=\"button\" class=\"btn btn-primary\" id=\"convertButton\">Convert</button>\r\n                    <button type=\"button\" class=\"btn btn-secondary\" id=\"copyButton\">Copy Result</button>\r\n                </form>', '', '<script>\r\n        const gallonsInput = document.getElementById(\'gallonsInput\');\r\n        const resultInput = document.getElementById(\'result\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Conversion factor: 1 gallon = 3.78541 liters\r\n        const gallonsToLiters = 3.78541;\r\n\r\n        function convertGallonsToLiters() {\r\n            const gallons = parseFloat(gallonsInput.value);\r\n            if (!isNaN(gallons)) {\r\n                const liters = gallons * gallonsToLiters;\r\n                resultInput.value = `${gallons} gallons = ${liters.toFixed(2)} liters`;\r\n            } else {\r\n                resultInput.value = \'Invalid input\';\r\n            }\r\n        }\r\n\r\n        function copyResultToClipboard() {\r\n            const resultText = resultInput.value;\r\n            \r\n            // Create a temporary input element\r\n            const tempInput = document.createElement(\'input\');\r\n            document.body.appendChild(tempInput);\r\n            tempInput.value = resultText;\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n\r\n            alert(\'Result copied to clipboard\');\r\n        }\r\n\r\n        convertButton.addEventListener(\'click\', convertGallonsToLiters);\r\n        copyButton.addEventListener(\'click\', copyResultToClipboard);\r\n\r\n        // Convert on input change\r\n        gallonsInput.addEventListener(\'input\', convertGallonsToLiters);\r\n\r\n        // Initial conversion\r\n        convertGallonsToLiters();\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(190, 2, 'Unix Timestamp to Date Converter', 'unix-timestamp-to-date-converter', '<form id=\"converter-form\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"timestampInput\">Enter Unix Timestamp:</label>\r\n                        <input type=\"number\" class=\"form-control\" id=\"timestampInput\" placeholder=\"Enter timestamp\">\r\n                    </div>\r\n                    <button type=\"button\" class=\"btn btn-primary\" id=\"convertButton\">Convert</button>\r\n                </form>\r\n                <div id=\"resultDiv\" class=\"mt-3\"></div>', '', '<script>\r\n        const timestampInput = document.getElementById(\'timestampInput\');\r\n        const convertButton = document.getElementById(\'convertButton\');\r\n        const resultDiv = document.getElementById(\'resultDiv\');\r\n\r\n        function convertTimestampToDate() {\r\n            const timestamp = parseInt(timestampInput.value);\r\n            if (!isNaN(timestamp)) {\r\n                const date = new Date(timestamp * 1000); // Convert seconds to milliseconds\r\n                const formattedDate = date.toUTCString();\r\n                const resultText = `Timestamp ${timestamp} corresponds to: ${formattedDate}`;\r\n                resultDiv.innerHTML = `<h2>${resultText}</h2>`;\r\n            } else {\r\n                resultDiv.innerHTML = \'<p class=\"text-danger\">Invalid input. Please enter a valid Unix Timestamp.</p>\';\r\n            }\r\n        }\r\n\r\n        convertButton.addEventListener(\'click\', convertTimestampToDate);\r\n\r\n        // Convert on input change\r\n        timestampInput.addEventListener(\'input\', convertTimestampToDate);\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(191, 2, 'Date to Unix Timestamp Converter', 'date-to-unix-timestamp-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputDate\">Enter a Date:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"inputDate\" placeholder=\"YYYY-MM-DD HH:MM:SS\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Unix Timestamp:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"result\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyResult\">Copy Result</button>', '', '<script>\r\n        // Function to convert a date string to a Unix timestamp\r\n        function dateToTimestamp(dateStr) {\r\n            const timestamp = Date.parse(dateStr);\r\n            return isNaN(timestamp) ? \"Invalid Date\" : Math.floor(timestamp / 1000);\r\n        }\r\n\r\n        // Function to update the result when the input changes\r\n        function updateResult() {\r\n            const inputDate = document.getElementById(\"inputDate\").value;\r\n            const result = document.getElementById(\"result\");\r\n            result.value = dateToTimestamp(inputDate);\r\n        }\r\n\r\n        // Add an event listener to update the result while typing\r\n        document.getElementById(\"inputDate\").addEventListener(\"input\", updateResult);\r\n\r\n        // Add an event listener to copy the result to the clipboard\r\n        document.getElementById(\"copyResult\").addEventListener(\"click\", function() {\r\n            const result = document.getElementById(\"result\");\r\n            result.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Result copied to clipboard: \" + result.value);\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(192, 2, 'Seconds to Minutes Converter', 'seconds-to-minutes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputSeconds\">Enter Seconds:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"inputSeconds\" placeholder=\"Enter seconds\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Minutes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"result\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyResult\">Copy Result</button>', '', '<script>\r\n        // Function to convert seconds to minutes\r\n        function secondsToMinutes(seconds) {\r\n            return (seconds / 60).toFixed(2);\r\n        }\r\n\r\n        // Function to update the result when the input changes\r\n        function updateResult() {\r\n            const inputSeconds = parseFloat(document.getElementById(\"inputSeconds\").value);\r\n            const result = document.getElementById(\"result\");\r\n            result.value = isNaN(inputSeconds) ? \"Invalid Input\" : secondsToMinutes(inputSeconds);\r\n        }\r\n\r\n        // Add an event listener to update the result while typing\r\n        document.getElementById(\"inputSeconds\").addEventListener(\"input\", updateResult);\r\n\r\n        // Add an event listener to copy the result to the clipboard\r\n        document.getElementById(\"copyResult\").addEventListener(\"click\", function() {\r\n            const result = document.getElementById(\"result\");\r\n            result.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Result copied to clipboard: \" + result.value);\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(193, 2, 'Seconds to Hours Converter', 'seconds-to-hours-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputSeconds\">Enter Seconds:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"inputSeconds\" placeholder=\"Enter seconds\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Hours:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"result\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyResult\">Copy Result</button>', '', '<script>\r\n        // Function to convert seconds to hours\r\n        function secondsToHours(seconds) {\r\n            return (seconds / 3600).toFixed(2);\r\n        }\r\n\r\n        // Function to update the result when the input changes\r\n        function updateResult() {\r\n            const inputSeconds = parseFloat(document.getElementById(\"inputSeconds\").value);\r\n            const result = document.getElementById(\"result\");\r\n            result.value = isNaN(inputSeconds) ? \"Invalid Input\" : secondsToHours(inputSeconds);\r\n        }\r\n\r\n        // Add an event listener to update the result while typing\r\n        document.getElementById(\"inputSeconds\").addEventListener(\"input\", updateResult);\r\n\r\n        // Add an event listener to copy the result to the clipboard\r\n        document.getElementById(\"copyResult\").addEventListener(\"click\", function() {\r\n            const result = document.getElementById(\"result\");\r\n            result.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Result copied to clipboard: \" + result.value);\r\n        });\r\n    </script>', '', '', '', '', '', 6, 'publish'),
(194, 2, 'Seconds to Days Converter', 'seconds-to-days-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputSeconds\">Enter Seconds:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"inputSeconds\" placeholder=\"Enter seconds\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Days:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"result\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyResult\">Copy Result</button>', '', '<script>\r\n        // Function to convert seconds to days\r\n        function secondsToDays(seconds) {\r\n            return (seconds / 86400).toFixed(2);\r\n        }\r\n\r\n        // Function to update the result when the input changes\r\n        function updateResult() {\r\n            const inputSeconds = parseFloat(document.getElementById(\"inputSeconds\").value);\r\n            const result = document.getElementById(\"result\");\r\n            result.value = isNaN(inputSeconds) ? \"Invalid Input\" : secondsToDays(inputSeconds);\r\n        }\r\n\r\n        // Add an event listener to update the result while typing\r\n        document.getElementById(\"inputSeconds\").addEventListener(\"input\", updateResult);\r\n\r\n        // Add an event listener to copy the result to the clipboard\r\n        document.getElementById(\"copyResult\").addEventListener(\"click\", function() {\r\n            const result = document.getElementById(\"result\");\r\n            result.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Result copied to clipboard: \" + result.value);\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(195, 2, 'Megabits to Yobibytes Converter', 'megabits-to-yobibytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '    <script>\r\n        // Function to convert Megabits to Yobibytes\r\n        function convertMegabitsToYobibytes(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInYobibyte = BigInt(Math.pow(1024, 8));\r\n\r\n            const bits = BigInt(megabits) * BigInt(bitsInMegabit);\r\n            const yobibytes = bits / bitsInYobibyte;\r\n\r\n            return yobibytes.toString() + \' Yib\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = megabitsInput.value;\r\n            const result = convertMegabitsToYobibytes(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(196, 2, 'Megabits to Yottabytes Converter', 'megabits-to-yottabytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '   <script>\r\n        // Function to convert Megabits to Yottabytes\r\n        function convertMegabitsToYottabytes(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInYottabyte = 1e24;\r\n\r\n            const bits = megabits * bitsInMegabit;\r\n            const yottabytes = bits / bitsInYottabyte;\r\n\r\n            return yottabytes.toFixed(9) + \' YB\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = parseFloat(megabitsInput.value || 0);\r\n            const result = convertMegabitsToYottabytes(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 6, 'publish'),
(197, 2, 'Seconds to Weeks Converter', 'seconds-to-weeks-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputSeconds\">Enter Seconds:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"inputSeconds\" placeholder=\"Enter seconds\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Weeks:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"result\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyResult\">Copy Result</button>', '', '<script>\r\n        // Function to convert seconds to weeks\r\n        function secondsToWeeks(seconds) {\r\n            return (seconds / 604800).toFixed(2);\r\n        }\r\n\r\n        // Function to update the result when the input changes\r\n        function updateResult() {\r\n            const inputSeconds = parseFloat(document.getElementById(\"inputSeconds\").value);\r\n            const result = document.getElementById(\"result\");\r\n            result.value = isNaN(inputSeconds) ? \"Invalid Input\" : secondsToWeeks(inputSeconds);\r\n        }\r\n\r\n        // Add an event listener to update the result while typing\r\n        document.getElementById(\"inputSeconds\").addEventListener(\"input\", updateResult);\r\n\r\n        // Add an event listener to copy the result to the clipboard\r\n        document.getElementById(\"copyResult\").addEventListener(\"click\", function() {\r\n            const result = document.getElementById(\"result\");\r\n            result.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Result copied to clipboard: \" + result.value);\r\n        });\r\n    </script>', '', '', '', '', '', 6, 'publish'),
(198, 2, 'Megabits to Yobibits Converter', 'megabits-to-yobibits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Megabits to Yobibits\r\n        function convertMegabitsToYobibits(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInYobibit = BigInt(Math.pow(1024, 8));\r\n\r\n            const bits = BigInt(megabits) * BigInt(bitsInMegabit);\r\n            const yobibits = bits / bitsInYobibit;\r\n\r\n            return yobibits.toString() + \' Yib\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = megabitsInput.value;\r\n            const result = convertMegabitsToYobibits(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(199, 2, 'Megabits to Yottabits Converter', 'megabits-to-yottabits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert Megabits to Yottabits\r\n        function convertMegabitsToYottabits(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInYottabit = 1e24;\r\n\r\n            const bits = megabits * bitsInMegabit;\r\n            const yottabits = bits / bitsInYottabit;\r\n\r\n            return yottabits.toFixed(9) + \' Yb\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = parseFloat(megabitsInput.value || 0);\r\n            const result = convertMegabitsToYottabits(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(200, 1, 'Seconds to Months Converter', 'seconds-to-months-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputSeconds\">Enter Seconds:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"inputSeconds\" placeholder=\"Enter seconds\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Months:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"result\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyResult\">Copy Result</button>', '', '<script>\r\n        // Function to convert seconds to months\r\n        function secondsToMonths(seconds) {\r\n            const secondsInAMonth = 30.44 * 24 * 60 * 60;\r\n            return (seconds / secondsInAMonth).toFixed(2);\r\n        }\r\n\r\n        // Function to update the result when the input changes\r\n        function updateResult() {\r\n            const inputSeconds = parseFloat(document.getElementById(\"inputSeconds\").value);\r\n            const result = document.getElementById(\"result\");\r\n            result.value = isNaN(inputSeconds) ? \"Invalid Input\" : secondsToMonths(inputSeconds);\r\n        }\r\n\r\n        // Add an event listener to update the result while typing\r\n        document.getElementById(\"inputSeconds\").addEventListener(\"input\", updateResult);\r\n\r\n        // Add an event listener to copy the result to the clipboard\r\n        document.getElementById(\"copyResult\").addEventListener(\"click\", function() {\r\n            const result = document.getElementById(\"result\");\r\n            result.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Result copied to clipboard: \" + result.value);\r\n        });\r\n    </script>', '', '', '', '', '', 86, 'publish'),
(201, 2, 'Megabits to Zebibytes Converter', 'megabits-to-zebibytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert Megabits to Zebibytes\r\n        function convertMegabitsToZebibytes(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInZebibyte = BigInt(Math.pow(1024, 7));\r\n\r\n            const bits = BigInt(megabits) * BigInt(bitsInMegabit);\r\n            const zebibytes = bits / bitsInZebibyte;\r\n\r\n            return zebibytes.toString() + \' ZiB\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = megabitsInput.value;\r\n            const result = convertMegabitsToZebibytes(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(202, 2, 'Seconds to Years Converter', 'seconds-to-years-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputSeconds\">Enter Seconds:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"inputSeconds\" placeholder=\"Enter seconds\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Years:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"result\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyResult\">Copy Result</button>', '', ' <script>\r\n        // Function to convert seconds to years\r\n        function secondsToYears(seconds) {\r\n            const secondsInAYear = 365.25 * 24 * 60 * 60;\r\n            return (seconds / secondsInAYear).toFixed(2);\r\n        }\r\n\r\n        // Function to update the result when the input changes\r\n        function updateResult() {\r\n            const inputSeconds = parseFloat(document.getElementById(\"inputSeconds\").value);\r\n            const result = document.getElementById(\"result\");\r\n            result.value = isNaN(inputSeconds) ? \"Invalid Input\" : secondsToYears(inputSeconds);\r\n        }\r\n\r\n        // Add an event listener to update the result while typing\r\n        document.getElementById(\"inputSeconds\").addEventListener(\"input\", updateResult);\r\n\r\n        // Add an event listener to copy the result to the clipboard\r\n        document.getElementById(\"copyResult\").addEventListener(\"click\", function() {\r\n            const result = document.getElementById(\"result\");\r\n            result.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Result copied to clipboard: \" + result.value);\r\n        });\r\n    </script>', '', '', '', '', '', 11, 'publish'),
(203, 2, 'Megabits to Zettabytes Converter', 'megabits-to-zettabytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert Megabits to Zettabytes\r\n        function convertMegabitsToZettabytes(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInZettabyte = 1e21;\r\n\r\n            const bits = megabits * bitsInMegabit;\r\n            const zettabytes = bits / bitsInZettabyte;\r\n\r\n            return zettabytes.toFixed(9) + \' ZB\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = parseFloat(megabitsInput.value || 0);\r\n            const result = convertMegabitsToZettabytes(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(204, 2, 'Megabits to Zebibits Converter', 'megabits-to-zebibits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert Megabits to Zebibits\r\n        function convertMegabitsToZebibits(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInZebibit = BigInt(Math.pow(1024, 7));\r\n\r\n            const bits = BigInt(megabits) * BigInt(bitsInMegabit);\r\n            const zebibits = bits / bitsInZebibit;\r\n\r\n            return zebibits.toString() + \' ZiB\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = megabitsInput.value;\r\n            const result = convertMegabitsToZebibits(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(205, 2, 'Megabits to Zettabits Converter', 'megabits-to-zettabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Megabits to Zettabits\r\n        function convertMegabitsToZettabits(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInZettabit = 1e21;\r\n\r\n            const bits = megabits * bitsInMegabit;\r\n            const zettabits = bits / bitsInZettabit;\r\n\r\n            return zettabits.toFixed(9) + \' Zb\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = parseFloat(megabitsInput.value || 0);\r\n            const result = convertMegabitsToZettabits(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(206, 2, 'Minutes to Seconds Converter', 'minutes-to-seconds-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputMinutes\">Enter Minutes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"inputMinutes\" placeholder=\"Enter minutes\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Seconds:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"result\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyResult\">Copy Result</button>', '', '<script>\r\n        // Function to convert minutes to seconds\r\n        function minutesToSeconds(minutes) {\r\n            return (minutes * 60).toFixed(2);\r\n        }\r\n\r\n        // Function to update the result when the input changes\r\n        function updateResult() {\r\n            const inputMinutes = parseFloat(document.getElementById(\"inputMinutes\").value);\r\n            const result = document.getElementById(\"result\");\r\n            result.value = isNaN(inputMinutes) ? \"Invalid Input\" : minutesToSeconds(inputMinutes);\r\n        }\r\n\r\n        // Add an event listener to update the result while typing\r\n        document.getElementById(\"inputMinutes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Add an event listener to copy the result to the clipboard\r\n        document.getElementById(\"copyResult\").addEventListener(\"click\", function() {\r\n            const result = document.getElementById(\"result\");\r\n            result.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Result copied to clipboard: \" + result.value);\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(207, 2, 'Megabits to Exbibytes Converter', 'megabits-to-exbibytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert Megabits to Exbibytes\r\n        function convertMegabitsToExbibytes(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInExbibyte = BigInt(Math.pow(1024, 6));\r\n\r\n            const bits = BigInt(megabits) * BigInt(bitsInMegabit);\r\n            const exbibytes = bits / bitsInExbibyte;\r\n\r\n            return exbibytes.toString() + \' EiB\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = megabitsInput.value;\r\n            const result = convertMegabitsToExbibytes(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>\r\n', '', '', '', '', '', 10, 'publish'),
(208, 2, 'Minutes to Seconds Converter', 'minutes-to-seconds-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputMinutes\">Enter Minutes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"inputMinutes\" placeholder=\"Enter minutes\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Seconds:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"result\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyResult\">Copy Result</button>', '', '  <script>\r\n        // Function to convert minutes to seconds\r\n        function minutesToSeconds(minutes) {\r\n            return (minutes * 60).toFixed(2);\r\n        }\r\n\r\n        // Function to update the result when the input changes\r\n        function updateResult() {\r\n            const inputMinutes = parseFloat(document.getElementById(\"inputMinutes\").value);\r\n            const result = document.getElementById(\"result\");\r\n            result.value = isNaN(inputMinutes) ? \"Invalid Input\" : minutesToSeconds(inputMinutes);\r\n        }\r\n\r\n        // Add an event listener to update the result while typing\r\n        document.getElementById(\"inputMinutes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Add an event listener to copy the result to the clipboard\r\n        document.getElementById(\"copyResult\").addEventListener(\"click\", function() {\r\n            const result = document.getElementById(\"result\");\r\n            result.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Result copied to clipboard: \" + result.value);\r\n        });\r\n    </script>', '', '', '', '', '', 0, 'publish'),
(209, 2, 'Megabits to Exabytes Converter', 'megabits-to-exabytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Megabits to Exabytes\r\n        function convertMegabitsToExabytes(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInExabyte = 8e18;\r\n\r\n            const bits = megabits * bitsInMegabit;\r\n            const exabytes = bits / bitsInExabyte;\r\n\r\n            return exabytes.toFixed(9) + \' EB\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = parseFloat(megabitsInput.value || 0);\r\n            const result = convertMegabitsToExabytes(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(210, 2, 'Megabits to Exbibits Converter', 'megabits-to-exbibits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Megabits to Exbibits\r\n        function convertMegabitsToExbibits(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInExbibit = BigInt(Math.pow(1024, 6));\r\n\r\n            const bits = BigInt(megabits) * BigInt(bitsInMegabit);\r\n            const exbibits = bits / bitsInExbibit;\r\n\r\n            return exbibits.toString() + \' EiB\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = megabitsInput.value;\r\n            const result = convertMegabitsToExbibits(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(211, 2, 'Megabits to Exabits Converter', 'megabits-to-exabits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert Megabits to Exabits\r\n        function convertMegabitsToExabits(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInExabit = 1e18;\r\n\r\n            const bits = megabits * bitsInMegabit;\r\n            const exabits = bits / bitsInExabit;\r\n\r\n            return exabits.toFixed(9) + \' Eb\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = parseFloat(megabitsInput.value || 0);\r\n            const result = convertMegabitsToExabits(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(212, 2, 'Megabits to Pebibits Converter', 'megabits-to-pebibits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Megabits to Pebibits\r\n        function convertMegabitsToPebibits(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInPebibit = BigInt(Math.pow(1024, 5));\r\n\r\n            const bits = BigInt(megabits) * BigInt(bitsInMegabit);\r\n            const pebibits = bits / bitsInPebibit;\r\n\r\n            return pebibits.toString() + \' PiB\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = megabitsInput.value;\r\n            const result = convertMegabitsToPebibits(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(213, 2, 'Minutes to Hours', 'minutes-to-hours', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputMinutes\">Enter Minutes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"inputMinutes\" placeholder=\"Enter minutes\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Hours:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"result\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyResult\">Copy Result</button>', '', '    <script>\r\n        // Function to convert minutes to hours\r\n        function minutesToHours(minutes) {\r\n            return (minutes / 60).toFixed(2);\r\n        }\r\n\r\n        // Function to update the result when the input changes\r\n        function updateResult() {\r\n            const inputMinutes = parseFloat(document.getElementById(\"inputMinutes\").value);\r\n            const result = document.getElementById(\"result\");\r\n            result.value = isNaN(inputMinutes) ? \"Invalid Input\" : minutesToHours(inputMinutes);\r\n        }\r\n\r\n        // Add an event listener to update the result while typing\r\n        document.getElementById(\"inputMinutes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Add an event listener to copy the result to the clipboard\r\n        document.getElementById(\"copyResult\").addEventListener(\"click\", function() {\r\n            const result = document.getElementById(\"result\");\r\n            result.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Result copied to clipboard: \" + result.value);\r\n        });\r\n    </script>', '', '', '', '', '', 15, 'publish'),
(214, 2, 'Megabits to Pebibytes Converter', 'megabits-to-pebibytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Megabits to Pebibytes\r\n        function convertMegabitsToPebibytes(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInPebibyte = BigInt(Math.pow(1024, 5));\r\n\r\n            const bits = BigInt(megabits) * BigInt(bitsInMegabit);\r\n            const pebibytes = bits / bitsInPebibyte;\r\n\r\n            return pebibytes.toString() + \' PiB\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = megabitsInput.value;\r\n            const result = convertMegabitsToPebibytes(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(215, 2, 'Minutes to Days Converter', 'minutes-to-days-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputMinutes\">Enter Minutes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"inputMinutes\" placeholder=\"Enter minutes\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Days:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"result\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyResult\">Copy Result</button>', '', '  <script>\r\n        // Function to convert minutes to days\r\n        function minutesToDays(minutes) {\r\n            return (minutes / (24 * 60)).toFixed(2);\r\n        }\r\n\r\n        // Function to update the result when the input changes\r\n        function updateResult() {\r\n            const inputMinutes = parseFloat(document.getElementById(\"inputMinutes\").value);\r\n            const result = document.getElementById(\"result\");\r\n            result.value = isNaN(inputMinutes) ? \"Invalid Input\" : minutesToDays(inputMinutes);\r\n        }\r\n\r\n        // Add an event listener to update the result while typing\r\n        document.getElementById(\"inputMinutes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Add an event listener to copy the result to the clipboard\r\n        document.getElementById(\"copyResult\").addEventListener(\"click\", function() {\r\n            const result = document.getElementById(\"result\");\r\n            result.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Result copied to clipboard: \" + result.value);\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(216, 2, 'Megabits to Petabytes Converter', 'megabits-to-petabytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Megabits to Petabytes\r\n        function convertMegabitsToPetabytes(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInPetabyte = 1e15;\r\n\r\n            const bits = megabits * bitsInMegabit;\r\n            const petabytes = bits / bitsInPetabyte;\r\n\r\n            return petabytes.toFixed(9) + \' PB\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = parseFloat(megabitsInput.value || 0);\r\n            const result = convertMegabitsToPetabytes(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(217, 2, 'Minutes to Weeks Converter', 'minutes-to-weeks-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputMinutes\">Enter Minutes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"inputMinutes\" placeholder=\"Enter minutes\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"result\">Weeks:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"result\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyResult\">Copy Result</button>', '', '  <script>\r\n        // Function to convert minutes to weeks\r\n        function minutesToWeeks(minutes) {\r\n            return (minutes / (60 * 24 * 7)).toFixed(2);\r\n        }\r\n\r\n        // Function to update the result when the input changes\r\n        function updateResult() {\r\n            const inputMinutes = parseFloat(document.getElementById(\"inputMinutes\").value);\r\n            const result = document.getElementById(\"result\");\r\n            result.value = isNaN(inputMinutes) ? \"Invalid Input\" : minutesToWeeks(inputMinutes);\r\n        }\r\n\r\n        // Add an event listener to update the result while typing\r\n        document.getElementById(\"inputMinutes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Add an event listener to copy the result to the clipboard\r\n        document.getElementById(\"copyResult\").addEventListener(\"click\", function() {\r\n            const result = document.getElementById(\"result\");\r\n            result.select();\r\n            document.execCommand(\"copy\");\r\n            alert(\"Result copied to clipboard: \" + result.value);\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(218, 2, 'Megabits to Petabits Converter', 'megabits-to-petabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Megabits to Petabits\r\n        function convertMegabitsToPetabits(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInPetabit = 1e15;\r\n\r\n            const bits = megabits * bitsInMegabit;\r\n            const petabits = bits / bitsInPetabit;\r\n\r\n            return petabits.toFixed(9) + \' Pb\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = parseFloat(megabitsInput.value || 0);\r\n            const result = convertMegabitsToPetabits(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(219, 2, 'Megabits to Tebibytes Converter', 'megabits-to-tebibytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert Megabits to Tebibytes\r\n        function convertMegabitsToTebibytes(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInTebibyte = BigInt(Math.pow(1024, 4));\r\n\r\n            const bits = BigInt(megabits) * BigInt(bitsInMegabit);\r\n            const tebibytes = bits / bitsInTebibyte;\r\n\r\n            return tebibytes.toString() + \' TiB\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = megabitsInput.value;\r\n            const result = convertMegabitsToTebibytes(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(220, 2, 'Megabits to Terabytes Converter', 'megabits-to-terabytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Megabits to Terabytes\r\n        function convertMegabitsToTerabytes(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInTerabyte = 1e12;\r\n\r\n            const bits = megabits * bitsInMegabit;\r\n            const terabytes = bits / bitsInTerabyte;\r\n\r\n            return terabytes.toFixed(9) + \' TB\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = parseFloat(megabitsInput.value || 0);\r\n            const result = convertMegabitsToTerabytes(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(221, 2, 'Megabits to Tebibits Converter', 'megabits-to-tebibits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Megabits to Tebibits\r\n        function convertMegabitsToTebibits(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInTebibit = BigInt(Math.pow(1024, 4));\r\n\r\n            const bits = BigInt(megabits) * BigInt(bitsInMegabit);\r\n            const tebibits = bits / bitsInTebibit;\r\n\r\n            return tebibits.toString() + \' Tib\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = megabitsInput.value;\r\n            const result = convertMegabitsToTebibits(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(222, 2, 'Megabits to Terabits Converter', 'megabits-to-terabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Megabits to Terabits\r\n        function convertMegabitsToTerabits(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInTerabit = 1e12;\r\n\r\n            const bits = megabits * bitsInMegabit;\r\n            const terabits = bits / bitsInTerabit;\r\n\r\n            return terabits.toFixed(9) + \' Tb\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = parseFloat(megabitsInput.value || 0);\r\n            const result = convertMegabitsToTerabits(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(223, 2, 'Megabits to Gibibytes Converter', 'megabits-to-gibibytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert Megabits to Gibibytes\r\n        function convertMegabitsToGibibytes(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInGibibyte = BigInt(Math.pow(1024, 3));\r\n\r\n            const bits = BigInt(megabits) * BigInt(bitsInMegabit);\r\n            const gibibytes = bits / bitsInGibibyte;\r\n\r\n            return gibibytes.toString() + \' GiB\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = megabitsInput.value;\r\n            const result = convertMegabitsToGibibytes(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(224, 2, 'Megabits to Gigabytes Converter', 'megabits-to-gigabytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Megabits to Gigabytes\r\n        function convertMegabitsToGigabytes(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInGigabyte = 1e9;\r\n\r\n            const bits = megabits * bitsInMegabit;\r\n            const gigabytes = bits / bitsInGigabyte;\r\n\r\n            return gigabytes.toFixed(9) + \' GB\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = parseFloat(megabitsInput.value || 0);\r\n            const result = convertMegabitsToGigabytes(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(225, 2, 'Megabits to Gibibits Converter', 'megabits-to-gibibits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert Megabits to Gibibits\r\n        function convertMegabitsToGibibits(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInGibibit = BigInt(Math.pow(1024, 3));\r\n\r\n            const bits = BigInt(megabits) * BigInt(bitsInMegabit);\r\n            const gibibits = bits / bitsInGibibit;\r\n\r\n            return gibibits.toString() + \' GiB\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = megabitsInput.value;\r\n            const result = convertMegabitsToGibibits(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(226, 2, 'Hours Converter', 'hours-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"inputHours\">Enter Hours:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"inputHours\" placeholder=\"Enter hours\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"resultSeconds\">Seconds:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"resultSeconds\" readonly>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"resultMinutes\">Minutes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"resultMinutes\" readonly>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"resultDays\">Days:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"resultDays\" readonly>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"resultWeeks\">Weeks:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"resultWeeks\" readonly>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"resultMonths\">Months:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"resultMonths\" readonly>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"resultYears\">Years:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"resultYears\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" id=\"copyResult\">Copy Result</button>', '', '<script>\r\n        // Function to convert hours to different units\r\n        function hoursConverter(hours) {\r\n            const seconds = (hours * 60 * 60).toFixed(2);\r\n            const minutes = (hours * 60).toFixed(2);\r\n            const days = (hours / 24).toFixed(2);\r\n            const weeks = (days / 7).toFixed(2);\r\n            const months = (days / 30.44).toFixed(2);\r\n            const years = (days / 365.25).toFixed(2);\r\n\r\n            return {\r\n                seconds,\r\n                minutes,\r\n                days,\r\n                weeks,\r\n                months,\r\n                years\r\n            };\r\n        }\r\n\r\n        // Function to update the results when the input changes\r\n        function updateResults() {\r\n            const inputHours = parseFloat(document.getElementById(\"inputHours\").value);\r\n            const results = hoursConverter(inputHours);\r\n            \r\n            document.getElementById(\"resultSeconds\").value = results.seconds;\r\n            document.getElementById(\"resultMinutes\").value = results.minutes;\r\n            document.getElementById(\"resultDays\").value = results.days;\r\n            document.getElementById(\"resultWeeks\").value = results.weeks;\r\n            document.getElementById(\"resultMonths\").value = results.months;\r\n            document.getElementById(\"resultYears\").value = results.years;\r\n        }\r\n\r\n        // Add an event listener to update the results while typing\r\n        document.getElementById(\"inputHours\").addEventListener(\"input\", updateResults);\r\n\r\n        // Add an event listener to copy the results to the clipboard\r\n        document.getElementById(\"copyResult\").addEventListener(\"click\", function() {\r\n            const results = [\r\n                \"Seconds: \" + document.getElementById(\"resultSeconds\").value,\r\n                \"Minutes: \" + document.getElementById(\"resultMinutes\").value,\r\n                \"Days: \" + document.getElementById(\"resultDays\").value,\r\n                \"Weeks: \" + document.getElementById(\"resultWeeks\").value,\r\n                \"Months: \" + document.getElementById(\"resultMonths\").value,\r\n                \"Years: \" + document.getElementById(\"resultYears\").value\r\n            ];\r\n            \r\n            const resultText = results.join(\"\\n\");\r\n            \r\n            const newWindow = window.open(\"\", \"Conversion Results\", \"width=400,height=400\");\r\n            newWindow.document.open();\r\n            newWindow.document.write(\"<pre>\" + resultText + \"</pre>\");\r\n            newWindow.document.close();\r\n        });\r\n    </script>', '', '', '', '', '', 13, 'publish'),
(227, 2, 'Megabits to Gigabits Converter', 'megabits-to-gigabits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Megabits to Gigabits\r\n        function convertMegabitsToGigabits(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInGigabit = 1e9;\r\n\r\n            const bits = megabits * bitsInMegabit;\r\n            const gigabits = bits / bitsInGigabit;\r\n\r\n            return gigabits.toFixed(9) + \' Gb\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = parseFloat(megabitsInput.value || 0);\r\n            const result = convertMegabitsToGigabits(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(228, 2, 'Megabits to Mebibytes Converter', 'megabits-to-mebibytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert Megabits to Mebibytes\r\n        function convertMegabitsToMebibytes(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInMebibyte = BigInt(Math.pow(1024, 2));\r\n\r\n            const bits = BigInt(megabits) * BigInt(bitsInMegabit);\r\n            const mebibytes = bits / bitsInMebibyte;\r\n\r\n            return mebibytes.toString() + \' MiB\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = megabitsInput.value;\r\n            const result = convertMegabitsToMebibytes(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(229, 2, 'Megabits to Megabytes Converter', 'megabits-to-megabytes-converter', 'form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        // Function to convert Megabits to Megabytes\r\n        function convertMegabitsToMegabytes(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bytesInMegabyte = 1e6;\r\n\r\n            const bits = megabits * bitsInMegabit;\r\n            const megabytes = bits / bytesInMegabyte;\r\n\r\n            return megabytes.toFixed(9) + \' MB\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = parseFloat(megabitsInput.value || 0);\r\n            const result = convertMegabitsToMegabytes(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(230, 2, 'Megabits to Mebibits Converter', 'megabits-to-mebibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabitsInput\">Enter Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabitsInput\" placeholder=\"Enter megabits\" min=\"0\">\r\n            </div>\r\n        </form>\r\n        <h2>Result:</h2>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Megabits to Mebibits\r\n        function convertMegabitsToMebibits(megabits) {\r\n            const bitsInMegabit = 1000000;\r\n            const bitsInMebibit = BigInt(Math.pow(1024, 2));\r\n\r\n            const bits = BigInt(megabits) * BigInt(bitsInMegabit);\r\n            const mebibits = bits / bitsInMebibit;\r\n\r\n            return mebibits.toString() + \' Mibit\';\r\n        }\r\n\r\n        // Get DOM elements\r\n        const megabitsInput = document.getElementById(\'megabitsInput\');\r\n        const resultDisplay = document.getElementById(\'result\');\r\n        const copyButton = document.getElementById(\'copyButton\');\r\n\r\n        // Event listener for input field changes\r\n        megabitsInput.addEventListener(\'input\', function () {\r\n            const megabits = megabitsInput.value;\r\n            const result = convertMegabitsToMebibits(megabits);\r\n            resultDisplay.textContent = result;\r\n        });\r\n\r\n        // Event listener for copy button\r\n        copyButton.addEventListener(\'click\', function () {\r\n            const resultText = resultDisplay.textContent;\r\n            const tempInput = document.createElement(\'input\');\r\n            tempInput.setAttribute(\'value\', resultText);\r\n            document.body.appendChild(tempInput);\r\n            tempInput.select();\r\n            document.execCommand(\'copy\');\r\n            document.body.removeChild(tempInput);\r\n            alert(\'Result copied to clipboard: \' + resultText);\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(231, 2, 'Megabits to Kilobytes Converter', 'megabits-to-kilobytes-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"megabits\">Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabits\" placeholder=\"Enter Megabits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Megabits to Kilobytes\r\n        function convertMegabitsToKilobytes(megabits) {\r\n            return megabits * 125; // 1 Megabit = 125 Kilobytes\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"megabits\").addEventListener(\"input\", function () {\r\n            const megabits = parseFloat(this.value);\r\n            if (!isNaN(megabits)) {\r\n                const kilobytes = convertMegabitsToKilobytes(megabits);\r\n                document.getElementById(\"result\").textContent = `${megabits} Megabits = ${kilobytes} Kilobytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(232, 2, 'Megabits to Kibibytes Converter', 'megabits-to-kibibytes-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"megabits\">Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabits\" placeholder=\"Enter Megabits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '  <script>\r\n        // Function to convert Megabits to Kibibytes\r\n        function convertMegabitsToKibibytes(megabits) {\r\n            return megabits * 122.07; // 1 Megabit = 122.07 Kibibytes (approximately)\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"megabits\").addEventListener(\"input\", function () {\r\n            const megabits = parseFloat(this.value);\r\n            if (!isNaN(megabits)) {\r\n                const kibibytes = convertMegabitsToKibibytes(megabits);\r\n                document.getElementById(\"result\").textContent = `${megabits} Megabits = ${kibibytes.toFixed(2)} Kibibytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(233, 2, 'Megabits to Kibibits Converter', 'megabits-to-kibibits-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"megabits\">Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabits\" placeholder=\"Enter Megabits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '  <script>\r\n        // Function to convert Megabits to Kibibits\r\n        function convertMegabitsToKibibits(megabits) {\r\n            return megabits * 976.563; // 1 Megabit = 976.563 Kibibits (approximately)\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"megabits\").addEventListener(\"input\", function () {\r\n            const megabits = parseFloat(this.value);\r\n            if (!isNaN(megabits)) {\r\n                const kibibits = convertMegabitsToKibibits(megabits);\r\n                document.getElementById(\"result\").textContent = `${megabits} Megabits = ${kibibits.toFixed(2)} Kibibits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(234, 2, 'Megabits to Kilobits Converter', 'megabits-to-kilobits-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"megabits\">Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabits\" placeholder=\"Enter Megabits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '    <script>\r\n        // Function to convert Megabits to Kilobits\r\n        function convertMegabitsToKilobits(megabits) {\r\n            return megabits * 1000; // 1 Megabit = 1000 Kilobits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"megabits\").addEventListener(\"input\", function () {\r\n            const megabits = parseFloat(this.value);\r\n            if (!isNaN(megabits)) {\r\n                const kilobits = convertMegabitsToKilobits(megabits);\r\n                document.getElementById(\"result\").textContent = `${megabits} Megabits = ${kilobits} Kilobits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(235, 2, 'Megabits to Bytes Converter', 'megabits-to-bytes-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"megabits\">Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabits\" placeholder=\"Enter Megabits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '   <script>\r\n        // Function to convert Megabits to Bytes\r\n        function convertMegabitsToBytes(megabits) {\r\n            return megabits * 125000; // 1 Megabit = 125,000 Bytes\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"megabits\").addEventListener(\"input\", function () {\r\n            const megabits = parseFloat(this.value);\r\n            if (!isNaN(megabits)) {\r\n                const bytes = convertMegabitsToBytes(megabits);\r\n                document.getElementById(\"result\").textContent = `${megabits} Megabits = ${bytes} Bytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(236, 2, 'Megabits to Nibbles Converter', 'megabits-to-nibbles-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"megabits\">Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabits\" placeholder=\"Enter Megabits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Megabits to Nibbles\r\n        function convertMegabitsToNibbles(megabits) {\r\n            return megabits * 125000; // 1 Megabit = 125,000 Nibbles\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"megabits\").addEventListener(\"input\", function () {\r\n            const megabits = parseFloat(this.value);\r\n            if (!isNaN(megabits)) {\r\n                const nibbles = convertMegabitsToNibbles(megabits);\r\n                document.getElementById(\"result\").textContent = `${megabits} Megabits = ${nibbles} Nibbles`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(237, 2, 'Megabits to Bits Converter', 'megabits-to-bits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"megabits\">Megabits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"megabits\" placeholder=\"Enter Megabits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Megabits to Bits\r\n        function convertMegabitsToBits(megabits) {\r\n            return megabits * 1000000; // 1 Megabit = 1,000,000 Bits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"megabits\").addEventListener(\"input\", function () {\r\n            const megabits = parseFloat(this.value);\r\n            if (!isNaN(megabits)) {\r\n                const bits = convertMegabitsToBits(megabits);\r\n                document.getElementById(\"result\").textContent = `${megabits} Megabits = ${bits} Bits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(238, 2, 'Kilobytes to Yobibytes Converter', 'kilobytes-to-yobibytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kilobytes to Yobibytes\r\n        function convertKilobytesToYobibytes(kilobytes) {\r\n            return kilobytes / 1180591620717411303424; // 1 Kilobyte = 1 / 1.180591620717411303424 Yobibytes\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const yobibytes = convertKilobytesToYobibytes(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${yobibytes.toFixed(20)} Yobibytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(239, 1, 'Kilobytes to Yottabytes Converter', 'kilobytes-to-yottabytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kilobytes to Yottabytes\r\n        function convertKilobytesToYottabytes(kilobytes) {\r\n            return kilobytes / 1e21; // 1 Kilobyte = 1e-21 Yottabytes\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const yottabytes = convertKilobytesToYottabytes(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${yottabytes} Yottabytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 126, 'publish'),
(240, 2, 'Kilobytes to Yobibits Converter', 'kilobytes-to-yobibits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kilobytes to Yobibits\r\n        function convertKilobytesToYobibits(kilobytes) {\r\n            return kilobytes * 8e-12; // 1 Kilobyte = 8e-12 Yobibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const yobibits = convertKilobytesToYobibits(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${yobibits.toFixed(12)} Yobibits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(241, 2, 'Kilobytes to Yottabits Converter', 'kilobytes-to-yottabits-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n          // Function to convert Kilobytes to Yottabits\r\n          function convertKilobytesToYottabits(kilobytes) {\r\n              return kilobytes * 8e-24; // 1 Kilobyte = 8e-24 Yottabits\r\n          }\r\n\r\n          // Function to update the result while typing\r\n          document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n              const kilobytes = parseFloat(this.value);\r\n              if (!isNaN(kilobytes)) {\r\n                  const yottabits = convertKilobytesToYottabits(kilobytes);\r\n                  document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${yottabits.toFixed(24)} Yottabits`;\r\n              } else {\r\n                  document.getElementById(\"result\").textContent = \"\";\r\n              }\r\n          });\r\n\r\n          // Function to copy the result to the clipboard\r\n          document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n              const resultText = document.getElementById(\"result\").textContent;\r\n              if (resultText) {\r\n                  const dummyInput = document.createElement(\"input\");\r\n                  dummyInput.value = resultText;\r\n                  document.body.appendChild(dummyInput);\r\n                  dummyInput.select();\r\n                  document.execCommand(\"copy\");\r\n                  document.body.removeChild(dummyInput);\r\n                  alert(\"Result copied to clipboard!\");\r\n              }\r\n          });\r\n      </script>', '', '', '', '', '', 9, 'publish'),
(242, 2, 'Kilobytes to Zebibytes Converter', 'kilobytes-to-zebibytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kilobytes to Zebibytes\r\n        function convertKilobytesToZebibytes(kilobytes) {\r\n            return kilobytes / 1.180591620717411303424e-11; // 1 Kilobyte = 1.180591620717411303424e-11 Zebibytes\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const zebibytes = convertKilobytesToZebibytes(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${zebibytes.toFixed(20)} Zebibytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(243, 2, 'Kilobytes to Zettabytes Converter', 'kilobytes-to-zettabytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kilobytes to Zettabytes\r\n        function convertKilobytesToZettabytes(kilobytes) {\r\n            return kilobytes / 1e12; // 1 Kilobyte = 1e-12 Zettabytes\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const zettabytes = convertKilobytesToZettabytes(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${zettabytes.toFixed(12)} Zettabytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(244, 2, 'Kilobytes to Zebibits Converter', 'kilobytes-to-zebibits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kilobytes to Zebibits\r\n        function convertKilobytesToZebibits(kilobytes) {\r\n            return kilobytes * 7.62939453125e-12; // 1 Kilobyte = 7.62939453125e-12 Zebibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const zebibits = convertKilobytesToZebibits(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${zebibits.toFixed(12)} Zebibits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(245, 2, 'Kilobytes to Zettabits Converter', 'kilobytes-to-zettabits-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kilobytes to Zettabits\r\n        function convertKilobytesToZettabits(kilobytes) {\r\n            return kilobytes * 8e-18; // 1 Kilobyte = 8e-18 Zettabits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const zettabits = convertKilobytesToZettabits(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${zettabits.toFixed(18)} Zettabits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(246, 2, 'Kilobytes to Exbibytes Converter', 'kilobytes-to-exbibytes-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kilobytes to Exbibytes\r\n        function convertKilobytesToExbibytes(kilobytes) {\r\n            return kilobytes / 1.1258999068426246e-17; // 1 Kilobyte = 1.1258999068426246e-17 Exbibytes\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const exbibytes = convertKilobytesToExbibytes(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${exbibytes.toFixed(17)} Exbibytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(247, 2, 'Kilobytes to Exabytes Converter', 'kilobytes-to-exabytes-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kilobytes to Exabytes\r\n        function convertKilobytesToExabytes(kilobytes) {\r\n            return kilobytes / 1e9; // 1 Kilobyte = 1e-9 Exabytes\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const exabytes = convertKilobytesToExabytes(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${exabytes.toFixed(9)} Exabytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(248, 2, 'Kilobytes to Exbibits Converter', 'kilobytes-to-exbibits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kilobytes to Exbibits\r\n        function convertKilobytesToExbibits(kilobytes) {\r\n            return kilobytes * 7.450580596923828e-9; // 1 Kilobyte = 7.450580596923828e-9 Exbibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const exbibits = convertKilobytesToExbibits(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${exbibits.toFixed(12)} Exbibits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(249, 2, 'Kilobytes to Exabits Converter', 'kilobytes-to-exabits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kilobytes to Exabits\r\n        function convertKilobytesToExabits(kilobytes) {\r\n            return kilobytes / 8e9; // 1 Kilobyte = 8e-9 Exabits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const exabits = convertKilobytesToExabits(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${exabits.toFixed(9)} Exabits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(250, 2, 'Kilobytes to Pebibits Converter', 'kilobytes-to-pebibits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '  <script>\r\n        // Function to convert Kilobytes to Pebibits\r\n        function convertKilobytesToPebibits(kilobytes) {\r\n            return kilobytes * 7.275957614183426e-12; // 1 Kilobyte = 7.275957614183426e-12 Pebibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const pebibits = convertKilobytesToPebibits(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${pebibits.toFixed(12)} Pebibits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(251, 2, 'Kilobytes to Pebibytes Converter', 'kilobytes-to-pebibytes-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kilobytes to Pebibytes\r\n        function convertKilobytesToPebibytes(kilobytes) {\r\n            return kilobytes / 8.881784197001252e-10; // 1 Kilobyte = 8.881784197001252e-10 Pebibytes\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const pebibytes = convertKilobytesToPebibytes(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${pebibytes.toFixed(10)} Pebibytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(252, 2, 'Kilobytes to Petabytes Converter', 'kilobytes-to-petabytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kilobytes to Petabytes\r\n        function convertKilobytesToPetabytes(kilobytes) {\r\n            return kilobytes / 1e6; // 1 Kilobyte = 1e-6 Petabytes\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const petabytes = convertKilobytesToPetabytes(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${petabytes.toFixed(6)} Petabytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(253, 2, 'Kilobytes to Petabits Converter', 'kilobytes-to-petabits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kilobytes to Petabits\r\n        function convertKilobytesToPetabits(kilobytes) {\r\n            return kilobytes * 8e6; // 1 Kilobyte = 8e6 Petabits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const petabits = convertKilobytesToPetabits(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${petabits.toFixed(6)} Petabits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(254, 2, 'Kilobytes to Tebibytes Converter', 'kilobytes-to-tebibytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kilobytes to Tebibytes\r\n        function convertKilobytesToTebibytes(kilobytes) {\r\n            return kilobytes / 9.313225746154785e-10; // 1 Kilobyte = 9.313225746154785e-10 Tebibytes\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const tebibytes = convertKilobytesToTebibytes(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${tebibytes.toFixed(12)} Tebibytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(255, 2, 'Kilobytes to Terabytes Converter', 'kilobytes-to-terabytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kilobytes to Terabytes\r\n        function convertKilobytesToTerabytes(kilobytes) {\r\n            return kilobytes / 1e6; // 1 Kilobyte = 1e-6 Terabytes\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const terabytes = convertKilobytesToTerabytes(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${terabytes.toFixed(6)} Terabytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(256, 2, 'Kilobytes to Tebibits Converter', 'kilobytes-to-tebibits-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '  <script>\r\n        // Function to convert Kilobytes to Tebibits\r\n        function convertKilobytesToTebibits(kilobytes) {\r\n            return kilobytes * 7.450580596923828e-6; // 1 Kilobyte = 7.450580596923828e-6 Tebibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const tebibits = convertKilobytesToTebibits(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${tebibits.toFixed(12)} Tebibits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(257, 2, 'Kilobytes to Terabits Converter', 'kilobytes-to-terabits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kilobytes to Terabits\r\n        function convertKilobytesToTerabits(kilobytes) {\r\n            return kilobytes * 8e-6; // 1 Kilobyte = 8e-6 Terabits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const terabits = convertKilobytesToTerabits(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${terabits.toFixed(6)} Terabits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(258, 2, 'Kilobytes to Gibibytes Converter', 'kilobytes-to-gibibytes-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '  <script>\r\n        // Function to convert Kilobytes to Gibibytes\r\n        function convertKilobytesToGibibytes(kilobytes) {\r\n            return kilobytes / 1048576; // 1 Kilobyte = 1 / 1048576 Gibibytes\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const gibibytes = convertKilobytesToGibibytes(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${gibibytes.toFixed(6)} Gibibytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(259, 2, 'Kilobytes to Gigabytes Converter', 'kilobytes-to-gigabytes-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kilobytes to Gigabytes\r\n        function convertKilobytesToGigabytes(kilobytes) {\r\n            return kilobytes / 1024 / 1024; // 1 Kilobyte = 1 / 1024 / 1024 Gigabytes\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const gigabytes = convertKilobytesToGigabytes(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${gigabytes.toFixed(6)} Gigabytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(260, 2, 'Kilobytes to Gibibits Converter', 'kilobytes-to-gibibits-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kilobytes to Gibibits\r\n        function convertKilobytesToGibibits(kilobytes) {\r\n            return kilobytes * 7.450580596923828e-9; // 1 Kilobyte = 7.450580596923828e-9 Gibibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const gibibits = convertKilobytesToGibibits(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${gibibits.toFixed(12)} Gibibits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(261, 2, 'Kilobytes to Gigabits Converter', 'kilobytes-to-gigabits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kilobytes to Gigabits\r\n        function convertKilobytesToGigabits(kilobytes) {\r\n            return kilobytes * 8e-6; // 1 Kilobyte = 8e-6 Gigabits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const gigabits = convertKilobytesToGigabits(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${gigabits.toFixed(6)} Gigabits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(262, 2, 'Kilobytes to Mebibytes Converter', 'kilobytes-to-mebibytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kilobytes to Mebibytes\r\n        function convertKilobytesToMebibytes(kilobytes) {\r\n            return kilobytes / 1024; // 1 Kilobyte = 1 / 1024 Mebibytes\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const mebibytes = convertKilobytesToMebibytes(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${mebibytes.toFixed(6)} Mebibytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(263, 2, 'Kilobytes to Megabytes Converter', 'kilobytes-to-megabytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kilobytes to Megabytes\r\n        function convertKilobytesToMegabytes(kilobytes) {\r\n            return kilobytes / 1024; // 1 Kilobyte = 1 / 1024 Megabytes\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const megabytes = convertKilobytesToMegabytes(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${megabytes.toFixed(6)} Megabytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(264, 2, 'Kilobytes to Mebibits Converter', 'kilobytes-to-mebibits-converter', '        <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kilobytes to Mebibits\r\n        function convertKilobytesToMebibits(kilobytes) {\r\n            return kilobytes * 8.000000953674316e-6; // 1 Kilobyte = 8.000000953674316e-6 Mebibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const mebibits = convertKilobytesToMebibits(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${mebibits.toFixed(12)} Mebibits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(265, 2, 'Kilobytes to Megabits Converter', 'kilobytes-to-megabits-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kilobytes to Megabits\r\n        function convertKilobytesToMegabits(kilobytes) {\r\n            return kilobytes * 0.008; // 1 Kilobyte = 0.008 Megabits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const megabits = convertKilobytesToMegabits(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${megabits.toFixed(3)} Megabits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(266, 2, 'Kilobytes to Kibibytes Converter', 'kilobytes-to-kibibytes-converter', '  <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '  <script>\r\n        // Function to convert Kilobytes to Kibibytes\r\n        function convertKilobytesToKibibytes(kilobytes) {\r\n            return kilobytes * 1024; // 1 Kilobyte = 1024 Kibibytes\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const kibibytes = convertKilobytesToKibibytes(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${kibibytes.toFixed(2)} Kibibytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(267, 2, 'Kilobytes to Kibibits Converter', 'kilobytes-to-kibibits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kilobytes to Kibibits\r\n        function convertKilobytesToKibibits(kilobytes) {\r\n            return kilobytes * 8 * 1024; // 1 Kilobyte = 8 Kibibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const kibibits = convertKilobytesToKibibits(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${kibibits.toFixed(2)} Kibibits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(268, 2, 'Kilobytes to Kilobits Converter', 'kilobytes-to-kilobits-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kilobytes to Kilobits\r\n        function convertKilobytesToKilobits(kilobytes) {\r\n            return kilobytes * 8 * 1024; // 1 Kilobyte = 8 Kilobits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const kilobits = convertKilobytesToKilobits(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${kilobits.toFixed(2)} Kilobits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(269, 2, 'Kilobytes to Bytes Converter', 'kilobytes-to-bytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kilobytes to Bytes\r\n        function convertKilobytesToBytes(kilobytes) {\r\n            return kilobytes * 1024; // 1 Kilobyte = 1024 Bytes\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const bytes = convertKilobytesToBytes(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${bytes.toFixed(2)} Bytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(270, 2, 'Kilobytes to Nibbles Converter', 'kilobytes-to-nibbles-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kilobytes to Nibbles\r\n        function convertKilobytesToNibbles(kilobytes) {\r\n            return kilobytes * 8192; // 1 Kilobyte = 8192 Nibbles\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const nibbles = convertKilobytesToNibbles(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${nibbles.toFixed(2)} Nibbles`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(271, 2, 'Kilobytes to Bits Converter', 'kilobytes-to-bits-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Kilobytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobytes\" placeholder=\"Enter Kilobytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kilobytes to Bits\r\n        function convertKilobytesToBits(kilobytes) {\r\n            return kilobytes * 8 * 1024 * 8; // 1 Kilobyte = 8 Kilobits, 1 Kilobit = 1024 Bits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kilobytes\").addEventListener(\"input\", function () {\r\n            const kilobytes = parseFloat(this.value);\r\n            if (!isNaN(kilobytes)) {\r\n                const bits = convertKilobytesToBits(kilobytes);\r\n                document.getElementById(\"result\").textContent = `${kilobytes} Kilobytes = ${bits.toFixed(2)} Bits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(272, 2, 'Kibibits to Yobibytes Converter', 'kibibits-to-yobibytes-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '\r\n    <script>\r\n        // Function to convert Kibibits to Yobibytes\r\n        function convertKibibitsToYobibytes(kibibits) {\r\n            return kibibits / (1024 * 1024 * 1024 * 1024 * 1024); // 1 Yobibyte = 2^80 bits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const yobibytes = convertKibibitsToYobibytes(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${yobibytes.toFixed(10)} Yobibytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(273, 2, 'Kibibits to Yottabytes Converter', 'kibibits-to-yottabytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kibibits to Yottabytes\r\n        function convertKibibitsToYottabytes(kibibits) {\r\n            return kibibits / (1024 * 1024 * 1024 * 1024 * 1024 * 1024); // 1 Yottabyte = 2^80 bits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const yottabytes = convertKibibitsToYottabytes(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${yottabytes.toFixed(10)} Yottabytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(274, 2, 'Kibibits to Yobibits Converter', 'kibibits-to-yobibits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kibibits to Yobibits\r\n        function convertKibibitsToYobibits(kibibits) {\r\n            return kibibits / (1024 * 1024 * 1024 * 1024 * 1024 * 1024); // 1 Yobibit = 2^80 bits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const yobibits = convertKibibitsToYobibits(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${yobibits.toFixed(10)} Yobibits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(275, 2, 'Kibibits to Yottabits Converter', 'kibibits-to-yottabits-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kibibits to Yottabits\r\n        function convertKibibitsToYottabits(kibibits) {\r\n            return kibibits / (1024 * 1024 * 1024 * 1024 * 1024); // 1 Yottabit = 2^80 bits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const yottabits = convertKibibitsToYottabits(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${yottabits.toFixed(10)} Yottabits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(276, 2, 'Kibibits to Zebibytes Converter', 'kibibits-to-zebibytes-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kibibits to Zebibytes\r\n        function convertKibibitsToZebibytes(kibibits) {\r\n            return kibibits / (1024 * 1024 * 1024 * 1024); // 1 Zebibyte = 2^70 bits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const zebibytes = convertKibibitsToZebibytes(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${zebibytes.toFixed(10)} Zebibytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(277, 2, 'Kibibits to Zettabytes Converter', 'kibibits-to-zettabytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kibibits to Zettabytes\r\n        function convertKibibitsToZettabytes(kibibits) {\r\n            return kibibits / (1024 * 1024 * 1024 * 1024); // 1 Zettabyte = 2^70 bits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const zettabytes = convertKibibitsToZettabytes(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${zettabytes.toFixed(10)} Zettabytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(278, 2, 'Kibibits to Zebibits Converter', 'kibibits-to-zebibits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kibibits to Zebibits\r\n        function convertKibibitsToZebibits(kibibits) {\r\n            return kibibits / (1024 * 1024 * 1024 * 1024); // 1 Zebibit = 2^40 bits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const zebibits = convertKibibitsToZebibits(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${zebibits.toFixed(10)} Zebibits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(279, 2, 'Kibibits to Zettabits Converter', 'kibibits-to-zettabits-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kibibits to Zettabits\r\n        function convertKibibitsToZettabits(kibibits) {\r\n            return kibibits / (1024 * 1024 * 1024 * 1024); // 1 Zettabit = 2^50 bits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const zettabits = convertKibibitsToZettabits(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${zettabits.toFixed(10)} Zettabits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(280, 2, 'Kibibits to Exbibytes Converter', 'kibibits-to-exbibytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kibibits to Exbibytes\r\n        function convertKibibitsToExbibytes(kibibits) {\r\n            return kibibits / (1024 * 1024 * 1024 * 1024 * 1024); // 1 Exbibyte = 2^60 bits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const exbibytes = convertKibibitsToExbibytes(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${exbibytes.toFixed(10)} Exbibytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(281, 2, 'Kibibits to Exabytes Converter', 'kibibits-to-exabytes-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kibibits to Exabytes\r\n        function convertKibibitsToExabytes(kibibits) {\r\n            return kibibits / (8 * 1024 * 1024 * 1024); // 1 Exabyte = 8 * 1024^3 bits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const exabytes = convertKibibitsToExabytes(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${exabytes.toFixed(10)} Exabytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(282, 2, 'Kibibits to Exbibits Converter', 'kibibits-to-exbibits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kibibits to Exbibits\r\n        function convertKibibitsToExbibits(kibibits) {\r\n            return kibibits / (1024 * 1024 * 1024); // 1 Exbibit = 2^30 bits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const exbibits = convertKibibitsToExbibits(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${exbibits.toFixed(10)} Exbibits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(283, 2, 'Kibibits to Exabits Converter', 'kibibits-to-exabits-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kibibits to Exabits\r\n        function convertKibibitsToExabits(kibibits) {\r\n            return kibibits / (1024 * 1024); // 1 Exabit = 2^20 bits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const exabits = convertKibibitsToExabits(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${exabits.toFixed(10)} Exabits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(284, 2, 'Kibibits to Pebibits Converter', 'kibibits-to-pebibits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kibibits to Pebibits\r\n        function convertKibibitsToPebibits(kibibits) {\r\n            return kibibits / (1024 * 1024); // 1 Pebibit = 2^20 bits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const pebibits = convertKibibitsToPebibits(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${pebibits.toFixed(10)} Pebibits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(285, 2, 'Kibibits to Pebibytes Converter', 'kibibits-to-pebibytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '  <script>\r\n        // Function to convert Kibibits to Pebibytes\r\n        function convertKibibitsToPebibytes(kibibits) {\r\n            return kibibits / (8 * 1024 * 1024); // 1 Pebibyte = 8 * 1024 * 1024 Kibibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const pebibytes = convertKibibitsToPebibytes(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${pebibytes.toFixed(10)} Pebibytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(286, 2, 'Kibibits to Petabytes Converter', 'kibibits-to-petabytes-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kibibits to Petabytes\r\n        function convertKibibitsToPetabytes(kibibits) {\r\n            return kibibits / (8 * 1024 * 1024 * 1024); // 1 Petabyte = 8 * 1024 * 1024 * 1024 Kibibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const petabytes = convertKibibitsToPetabytes(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${petabytes.toFixed(10)} Petabytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(287, 2, 'Kibibits to Petabits Converter', 'kibibits-to-petabits-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kibibits to Petabits\r\n        function convertKibibitsToPetabits(kibibits) {\r\n            return kibibits / (1024 * 1024 * 1024); // 1 Petabit = 1024 * 1024 * 1024 Kibibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const petabits = convertKibibitsToPetabits(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${petabits.toFixed(10)} Petabits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(288, 2, 'Kibibits to Tebibytes Converter', 'kibibits-to-tebibytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kibibits to Tebibytes\r\n        function convertKibibitsToTebibytes(kibibits) {\r\n            return kibibits / (8 * 1024 * 1024); // 1 Tebibyte = 8 * 1024 * 1024 Kibibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const tebibytes = convertKibibitsToTebibytes(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${tebibytes.toFixed(10)} Tebibytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(289, 2, 'Kibibits to Terabytes Converter', 'kibibits-to-terabytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kibibits to Terabytes\r\n        function convertKibibitsToTerabytes(kibibits) {\r\n            return kibibits / (8 * 1024 * 1024); // 1 Terabyte = 8 * 1024 * 1024 Kibibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const terabytes = convertKibibitsToTerabytes(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${terabytes.toFixed(10)} Terabytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(290, 2, 'Kibibits to Tebibits Converter', 'kibibits-to-tebibits-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kibibits to Tebibits\r\n        function convertKibibitsToTebibits(kibibits) {\r\n            return kibibits / 1024; // 1 Tebibit = 1024 Kibibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const tebibits = convertKibibitsToTebibits(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${tebibits.toFixed(10)} Tebibits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(291, 2, 'Kibibits to Terabits Converter', 'kibibits-to-terabits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kibibits to Terabits\r\n        function convertKibibitsToTerabits(kibibits) {\r\n            return kibibits / (1024 * 1024); // 1 Terabit = 1,048,576 Kibibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const terabits = convertKibibitsToTerabits(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${terabits.toFixed(10)} Terabits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(292, 2, 'Kibibits to Gibibytes Converter', 'kibibits-to-gibibytes-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kibibits to Gibibytes\r\n        function convertKibibitsToGibibytes(kibibits) {\r\n            return kibibits / (1024 * 1024); // 1 Gibibyte = 1,048,576 Kibibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const gibibytes = convertKibibitsToGibibytes(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${gibibytes.toFixed(10)} Gibibytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(293, 2, 'Kibibits to Gigabytes Converter', 'kibibits-to-gigabytes-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '  <script>\r\n        // Function to convert Kibibits to Gigabytes\r\n        function convertKibibitsToGigabytes(kibibits) {\r\n            return kibibits / (8 * 1024 * 1024); // 1 Gigabyte = 8,388,608 Kibibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const gigabytes = convertKibibitsToGigabytes(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${gigabytes.toFixed(10)} Gigabytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(294, 2, 'Kibibits to Gibibits Converter', 'kibibits-to-gibibits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '  <script>\r\n        // Function to convert Kibibits to Gibibits\r\n        function convertKibibitsToGibibits(kibibits) {\r\n            return kibibits / 1024; // 1 Gibibit = 1024 Kibibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const gibibits = convertKibibitsToGibibits(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${gibibits.toFixed(10)} Gibibits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(295, 2, 'Kibibits to Gigabits Converter', 'kibibits-to-gigabits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kibibits to Gigabits\r\n        function convertKibibitsToGigabits(kibibits) {\r\n            return kibibits / (1024 * 1024); // 1 Gigabit = 1,048,576 Kibibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const gigabits = convertKibibitsToGigabits(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${gigabits.toFixed(10)} Gigabits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(296, 2, 'Kibibits to Mebibytes Converter', 'kibibits-to-mebibytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kibibits to Mebibytes\r\n        function convertKibibitsToMebibytes(kibibits) {\r\n            return kibibits / 8192; // 1 Mebibyte = 8192 Kibibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const mebibytes = convertKibibitsToMebibytes(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${mebibytes.toFixed(10)} Mebibytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(297, 2, 'Kibibits to Megabytes Converter', 'kibibits-to-megabytes-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kibibits to Megabytes\r\n        function convertKibibitsToMegabytes(kibibits) {\r\n            return kibibits / 8192; // 1 Megabyte = 8192 Kibibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const megabytes = convertKibibitsToMegabytes(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${megabytes.toFixed(10)} Megabytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(298, 2, 'Kibibits to Mebibits Converter', 'kibibits-to-mebibits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kibibits to Mebibits\r\n        function convertKibibitsToMebibits(kibibits) {\r\n            return kibibits / 1024; // 1 Mebibit = 1024 Kibibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const mebibits = convertKibibitsToMebibits(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${mebibits.toFixed(6)} Mebibits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(299, 2, 'Kibibits to Megabits converter', 'kibibits-to-megabits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Kibibits to Megabits\r\n        function convertKibibitsToMegabits(kibibits) {\r\n            return kibibits / 1024; // 1 Megabit = 1024 Kibibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const megabits = convertKibibitsToMegabits(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${megabits.toFixed(6)} Megabits`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(300, 2, 'Kibibits to Kibibytes converter', 'kibibits-to-kibibytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '  <script>\r\n        // Function to convert Kibibits to Kibibytes\r\n        function convertKibibitsToKibibytes(kibibits) {\r\n            return kibibits / 8; // 1 Kibibyte = 8 Kibibits\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        document.getElementById(\"kibibits\").addEventListener(\"input\", function () {\r\n            const kibibits = parseFloat(this.value);\r\n            if (!isNaN(kibibits)) {\r\n                const kibibytes = convertKibibitsToKibibytes(kibibits);\r\n                document.getElementById(\"result\").textContent = `${kibibits} Kibibits = ${kibibytes.toFixed(6)} Kibibytes`;\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        });\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 11, 'publish'),
(301, 2, 'Kibibits to Kilobytes converter', 'kibibits-to-kilobytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Enter Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\" oninput=\"convertKibibits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Result in Kilobytes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"kilobytes\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', ' <script>\r\n        function convertKibibits() {\r\n            const kibibits = parseFloat(document.getElementById(\'kibibits\').value);\r\n            if (!isNaN(kibibits)) {\r\n                const kilobytes = kibibits * 0.125;\r\n                document.getElementById(\'kilobytes\').value = kilobytes + \' KB\';\r\n            } else {\r\n                document.getElementById(\'kilobytes\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const kilobytes = document.getElementById(\'kilobytes\');\r\n            if (kilobytes.value) {\r\n                kilobytes.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + kilobytes.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(302, 2, 'Kibibits to Kilobits Converter', 'kibibits-to-kilobits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Enter Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\" oninput=\"convertKibibits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Result in Kilobits:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"kilobits\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '  <script>\r\n        function convertKibibits() {\r\n            const kibibits = parseFloat(document.getElementById(\'kibibits\').value);\r\n            if (!isNaN(kibibits)) {\r\n                const kilobits = kibibits * 1024;\r\n                document.getElementById(\'kilobits\').value = kilobits + \' Kbps\';\r\n            } else {\r\n                document.getElementById(\'kilobits\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const kilobits = document.getElementById(\'kilobits\');\r\n            if (kilobits.value) {\r\n                kilobits.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + kilobits.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(303, 2, 'Kibibits to Bytes converter', 'kibibits-to-bytes-converter', '       <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Enter Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\" oninput=\"convertKibibits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Result in Bytes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"bytes\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '\r\n    <script>\r\n        function convertKibibits() {\r\n            const kibibits = parseFloat(document.getElementById(\'kibibits\').value);\r\n            if (!isNaN(kibibits)) {\r\n                const bytes = kibibits * 128;\r\n                document.getElementById(\'bytes\').value = bytes + \' bytes\';\r\n            } else {\r\n                document.getElementById(\'bytes\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const bytes = document.getElementById(\'bytes\');\r\n            if (bytes.value) {\r\n                bytes.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + bytes.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(304, 2, 'Kibibits to bits Converter', 'kibibits-to-bits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibits\">Enter Kibibits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kibibits\" placeholder=\"Enter Kibibits\" oninput=\"convertKibibits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"bits\">Result in Bits:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"bits\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', ' <script>\r\n        function convertKibibits() {\r\n            const kibibits = parseFloat(document.getElementById(\'kibibits\').value);\r\n            if (!isNaN(kibibits)) {\r\n                const bits = kibibits * 1024 * 8;\r\n                document.getElementById(\'bits\').value = bits + \' bits\';\r\n            } else {\r\n                document.getElementById(\'bits\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const bits = document.getElementById(\'bits\');\r\n            if (bits.value) {\r\n                bits.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + bits.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(305, 2, 'Kilobits to Yobibytes COnverter', 'kilobits-to-yobibytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"yobibytes\">Result in Yobibytes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"yobibytes\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '<script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const yobibytes = kilobits / (8 * Math.pow(1024, 8));\r\n                document.getElementById(\'yobibytes\').value = yobibytes + \' YiB\';\r\n            } else {\r\n                document.getElementById(\'yobibytes\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const yobibytes = document.getElementById(\'yobibytes\');\r\n            if (yobibytes.value) {\r\n                yobibytes.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + yobibytes.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(306, 2, 'Kilobits to Yottabytes Converter', 'kilobits-to-yottabytes-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"yottabytes\">Result in Yottabytes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"yottabytes\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '   <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const yottabytes = kilobits / (8 * Math.pow(1024, 8));\r\n                document.getElementById(\'yottabytes\').value = yottabytes + \' YB\';\r\n            } else {\r\n                document.getElementById(\'yottabytes\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const yottabytes = document.getElementById(\'yottabytes\');\r\n            if (yottabytes.value) {\r\n                yottabytes.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + yottabytes.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(307, 2, 'Kilobits to Yobibits Converter', 'kilobits-to-yobibits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"yobibits\">Result in Yobibits:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"yobibits\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '<script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const yobibits = kilobits / (1024 * 1024 * 1024 * 1024);\r\n                document.getElementById(\'yobibits\').value = yobibits + \' Yib\';\r\n            } else {\r\n                document.getElementById(\'yobibits\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const yobibits = document.getElementById(\'yobibits\');\r\n            if (yobibits.value) {\r\n                yobibits.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + yobibits.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(308, 2, 'Kilobits to Yottabits Converter', 'kilobits-to-yottabits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"yottabits\">Result in Yottabits:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"yottabits\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '  <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const yottabits = kilobits / (8 * Math.pow(1024, 8));\r\n                document.getElementById(\'yottabits\').value = yottabits + \' Yb\';\r\n            } else {\r\n                document.getElementById(\'yottabits\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const yottabits = document.getElementById(\'yottabits\');\r\n            if (yottabits.value) {\r\n                yottabits.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + yottabits.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(309, 2, 'Kilobits to Zebibytes Converter', 'kilobits-to-zebibytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"zebibytes\">Result in Zebibytes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"zebibytes\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '<script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const zebibytes = kilobits / (8 * Math.pow(1024, 7));\r\n                document.getElementById(\'zebibytes\').value = zebibytes + \' ZiB\';\r\n            } else {\r\n                document.getElementById(\'zebibytes\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const zebibytes = document.getElementById(\'zebibytes\');\r\n            if (zebibytes.value) {\r\n                zebibytes.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + zebibytes.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(310, 2, 'Kilobits to Zettabytes Converter', 'kilobits-to-zettabytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"zettabytes\">Result in Zettabytes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"zettabytes\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '\r\n    <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const zettabytes = kilobits / (8 * Math.pow(1024, 6));\r\n                document.getElementById(\'zettabytes\').value = zettabytes + \' ZB\';\r\n            } else {\r\n                document.getElementById(\'zettabytes\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const zettabytes = document.getElementById(\'zettabytes\');\r\n            if (zettabytes.value) {\r\n                zettabytes.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + zettabytes.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(311, 2, 'Kilobits to zebibits Converter', 'kilobits-to-zebibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"zebibits\">Result in Zebibits:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"zebibits\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '   <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const zebibits = kilobits / (1024 * 1024 * 1024 * 1024);\r\n                document.getElementById(\'zebibits\').value = zebibits + \' ZiB\';\r\n            } else {\r\n                document.getElementById(\'zebibits\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const zebibits = document.getElementById(\'zebibits\');\r\n            if (zebibits.value) {\r\n                zebibits.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + zebibits.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(312, 2, 'Kilobits to zettabits Converter', 'kilobits-to-zettabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"zettabits\">Result in Zettabits:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"zettabits\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '<script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const zettabits = kilobits / (8 * Math.pow(1024, 7));\r\n                document.getElementById(\'zettabits\').value = zettabits + \' Zb\';\r\n            } else {\r\n                document.getElementById(\'zettabits\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const zettabits = document.getElementById(\'zettabits\');\r\n            if (zettabits.value) {\r\n                zettabits.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + zettabits.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(313, 2, 'Kilobits to Exbibytes Converter', 'kilobits-to-exbibytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"exbibytes\">Result in Exbibytes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"exbibytes\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '<script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const exbibytes = kilobits / (8 * Math.pow(1024, 6));\r\n                document.getElementById(\'exbibytes\').value = exbibytes + \' EiB\';\r\n            } else {\r\n                document.getElementById(\'exbibytes\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const exbibytes = document.getElementById(\'exbibytes\');\r\n            if (exbibytes.value) {\r\n                exbibytes.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + exbibytes.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(314, 2, 'Kilobits to Exabytes Converter', 'kilobits-to-exabytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"exabytes\">Result in Exabytes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"exabytes\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '    <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const exabytes = kilobits / (8 * Math.pow(1024, 5));\r\n                document.getElementById(\'exabytes\').value = exabytes + \' EB\';\r\n            } else {\r\n                document.getElementById(\'exabytes\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const exabytes = document.getElementById(\'exabytes\');\r\n            if (exabytes.value) {\r\n                exabytes.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + exabytes.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(315, 2, 'Kilobits to Exbibits Converter', 'kilobits-to-exbibits-converter', '    <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"exbibits\">Result in Exbibits:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"exbibits\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', ' <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const exbibits = kilobits / (1024 * 1024 * 1024 * 1024);\r\n                document.getElementById(\'exbibits\').value = exbibits + \' EiB\';\r\n            } else {\r\n                document.getElementById(\'exbibits\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const exbibits = document.getElementById(\'exbibits\');\r\n            if (exbibits.value) {\r\n                exbibits.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + exbibits.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(316, 2, 'Kilobits to Exabits Converter', 'kilobits-to-exabits-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"exabits\">Result in Exabits:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"exabits\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '  <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const exabits = kilobits / (1024 * 1024 * 1024);\r\n                document.getElementById(\'exabits\').value = exabits + \' Eb\';\r\n            } else {\r\n                document.getElementById(\'exabits\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const exabits = document.getElementById(\'exabits\');\r\n            if (exabits.value) {\r\n                exabits.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + exabits.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(317, 2, 'Kilobits to Pebibits Converter', 'kilobits-to-pebibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"pebibits\">Result in Pebibits:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"pebibits\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '  <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const pebibits = kilobits / (1024 * 1024 * 1024 * 1024);\r\n                document.getElementById(\'pebibits\').value = pebibits + \' PiB\';\r\n            } else {\r\n                document.getElementById(\'pebibits\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const pebibits = document.getElementById(\'pebibits\');\r\n            if (pebibits.value) {\r\n                pebibits.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + pebibits.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(318, 2, 'Kilobits to Pebibytes Converter', 'kilobits-to-pebibytes-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"pebibytes\">Result in Pebibytes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"pebibytes\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '\r\n    <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const pebibytes = kilobits / (8 * Math.pow(1024, 4));\r\n                document.getElementById(\'pebibytes\').value = pebibytes + \' PiB\';\r\n            } else {\r\n                document.getElementById(\'pebibytes\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const pebibytes = document.getElementById(\'pebibytes\');\r\n            if (pebibytes.value) {\r\n                pebibytes.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + pebibytes.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(319, 2, 'Kilobits to Petabytes Converter', 'kilobits-to-petabytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"petabytes\">Result in Petabytes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"petabytes\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '<script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const petabytes = kilobits / (8 * Math.pow(1024, 3));\r\n                document.getElementById(\'petabytes\').value = petabytes + \' PB\';\r\n            } else {\r\n                document.getElementById(\'petabytes\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const petabytes = document.getElementById(\'petabytes\');\r\n            if (petabytes.value) {\r\n                petabytes.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + petabytes.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(320, 2, 'Kilobits to Petabits Converter', 'kilobits-to-petabits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"petabits\">Result in Petabits:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"petabits\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '\r\n    <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const petabits = kilobits / (1024 * 1024 * 1024);\r\n                document.getElementById(\'petabits\').value = petabits + \' Pb\';\r\n            } else {\r\n                document.getElementById(\'petabits\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const petabits = document.getElementById(\'petabits\');\r\n            if (petabits.value) {\r\n                petabits.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + petabits.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(321, 2, 'Kilobits to Tebibytes Converter', 'kilobits-to-tebibytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"tebibytes\">Result in Tebibytes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"tebibytes\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '  <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const tebibytes = kilobits / (8 * Math.pow(1024, 3));\r\n                document.getElementById(\'tebibytes\').value = tebibytes + \' TiB\';\r\n            } else {\r\n                document.getElementById(\'tebibytes\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const tebibytes = document.getElementById(\'tebibytes\');\r\n            if (tebibytes.value) {\r\n                tebibytes.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + tebibytes.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(322, 2, 'Kilobits to Terabytes Converter', 'kilobits-to-terabytes-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"terabytes\">Result in Terabytes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"terabytes\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '  <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const terabytes = kilobits / (8 * Math.pow(1024, 2));\r\n                document.getElementById(\'terabytes\').value = terabytes + \' TB\';\r\n            } else {\r\n                document.getElementById(\'terabytes\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const terabytes = document.getElementById(\'terabytes\');\r\n            if (terabytes.value) {\r\n                terabytes.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + terabytes.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(323, 2, 'Kilobits to Terabits Converter', 'kilobits-to-terabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"terabits\">Result in Terabits:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"terabits\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '<script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const terabits = kilobits / (1024 * 1024);\r\n                document.getElementById(\'terabits\').value = terabits + \' Tb\';\r\n            } else {\r\n                document.getElementById(\'terabits\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const terabits = document.getElementById(\'terabits\');\r\n            if (terabits.value) {\r\n                terabits.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + terabits.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(324, 2, 'Kilobits to Tebibits Converter', 'kilobits-to-tebibits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"tebibits\">Result in Tebibits:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"tebibits\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '  <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const tebibits = kilobits / (1024 * 1024 * 1024);\r\n                document.getElementById(\'tebibits\').value = tebibits + \' Tib\';\r\n            } else {\r\n                document.getElementById(\'tebibits\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const tebibits = document.getElementById(\'tebibits\');\r\n            if (tebibits.value) {\r\n                tebibits.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + tebibits.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(325, 2, 'Kilobits to Gibibytes Converter', 'kilobits-to-gibibytes-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"gibibytes\">Result in Gibibytes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"gibibytes\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '  <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const gibibytes = kilobits / (8 * Math.pow(1024, 1));\r\n                document.getElementById(\'gibibytes\').value = gibibytes + \' GiB\';\r\n            } else {\r\n                document.getElementById(\'gibibytes\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const gibibytes = document.getElementById(\'gibibytes\');\r\n            if (gibibytes.value) {\r\n                gibibytes.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + gibibytes.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(326, 2, 'Kilobits to Gigtabytes Converter', 'kilobits-to-gigtabytes-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"gigabytes\">Result in Gigabytes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"gigabytes\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '   <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const gigabytes = kilobits / (8 * Math.pow(1024, 2));\r\n                document.getElementById(\'gigabytes\').value = gigabytes + \' GB\';\r\n            } else {\r\n                document.getElementById(\'gigabytes\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const gigabytes = document.getElementById(\'gigabytes\');\r\n            if (gigabytes.value) {\r\n                gigabytes.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + gigabytes.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(327, 2, 'Kilobits to Gibibits Converter', 'kilobits-to-gibibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"gibibits\">Result in Gibibits:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"gibibits\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', ' <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const gibibits = kilobits / (1024 * 1024);\r\n                document.getElementById(\'gibibits\').value = gibibits + \' GiB\';\r\n            } else {\r\n                document.getElementById(\'gibibits\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const gibibits = document.getElementById(\'gibibits\');\r\n            if (gibibits.value) {\r\n                gibibits.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + gibibits.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(328, 2, 'Kilobits to Gigabits Converter', 'kilobits-to-gigabits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"gigabits\">Result in Gigabits:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"gigabits\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '    <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const gigabits = kilobits / 1000;\r\n                document.getElementById(\'gigabits\').value = gigabits + \' Gb\';\r\n            } else {\r\n                document.getElementById(\'gigabits\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const gigabits = document.getElementById(\'gigabits\');\r\n            if (gigabits.value) {\r\n                gigabits.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + gigabits.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(329, 2, 'Kilobits to Mebibytes Converter', 'kilobits-to-mebibytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"mebibytes\">Result in Mebibytes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"mebibytes\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '    <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const mebibytes = kilobits / (8 * Math.pow(1024, 2));\r\n                document.getElementById(\'mebibytes\').value = mebibytes + \' MiB\';\r\n            } else {\r\n                document.getElementById(\'mebibytes\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const mebibytes = document.getElementById(\'mebibytes\');\r\n            if (mebibytes.value) {\r\n                mebibytes.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + mebibytes.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(330, 2, 'Kilobits to Megabytes Converter', 'kilobits-to-megabytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabytes\">Result in Megabytes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"megabytes\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '   <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const megabytes = kilobits / (8 * Math.pow(1024, 1));\r\n                document.getElementById(\'megabytes\').value = megabytes + \' MB\';\r\n            } else {\r\n                document.getElementById(\'megabytes\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const megabytes = document.getElementById(\'megabytes\');\r\n            if (megabytes.value) {\r\n                megabytes.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + megabytes.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(331, 2, 'Kilobits to Mebibits Converter', 'kilobits-to-mebibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"mebibits\">Result in Mebibits:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"mebibits\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '  <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const mebibits = kilobits / (1024 * 1024);\r\n                document.getElementById(\'mebibits\').value = mebibits + \' Mib\';\r\n            } else {\r\n                document.getElementById(\'mebibits\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const mebibits = document.getElementById(\'mebibits\');\r\n            if (mebibits.value) {\r\n                mebibits.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + mebibits.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(332, 2, 'Kilobits to Megabits Converter', 'kilobits-to-megabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"megabits\">Result in Megabits:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"megabits\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '   <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const megabits = kilobits / 1000;\r\n                document.getElementById(\'megabits\').value = megabits + \' Mb\';\r\n            } else {\r\n                document.getElementById(\'megabits\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const megabits = document.getElementById(\'megabits\');\r\n            if (megabits.value) {\r\n                megabits.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + megabits.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(333, 2, 'Kilobits to Kibibytes Converter', 'kilobits-to-kibibytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"kibibytes\">Result in Kibibytes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"kibibytes\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '    <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const kibibytes = kilobits / 8;\r\n                document.getElementById(\'kibibytes\').value = kibibytes + \' KiB\';\r\n            } else {\r\n                document.getElementById(\'kibibytes\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const kibibytes = document.getElementById(\'kibibytes\');\r\n            if (kibibytes.value) {\r\n                kibibytes.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + kibibytes.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 11, 'publish'),
(334, 2, 'Kilobits to Kilobytes Converter', 'kilobits-to-kilobytes-converter', '   <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Enter Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\" oninput=\"convertKilobits()\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobytes\">Result in Kilobytes:</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"kilobytes\" readonly>\r\n            </div>\r\n        </form>\r\n        <button class=\"btn btn-primary\" onclick=\"copyResult()\">Copy Result</button>', '', '   <script>\r\n        function convertKilobits() {\r\n            const kilobits = parseFloat(document.getElementById(\'kilobits\').value);\r\n            if (!isNaN(kilobits)) {\r\n                const kilobytes = kilobits / 8;\r\n                document.getElementById(\'kilobytes\').value = kilobytes + \' KB\';\r\n            } else {\r\n                document.getElementById(\'kilobytes\').value = \'\';\r\n            }\r\n        }\r\n\r\n        function copyResult() {\r\n            const kilobytes = document.getElementById(\'kilobytes\');\r\n            if (kilobytes.value) {\r\n                kilobytes.select();\r\n                document.execCommand(\'copy\');\r\n                alert(\'Result copied to clipboard: \' + kilobytes.value);\r\n            }\r\n        }\r\n    </script>', '', '', '', '', '', 45, 'publish'),
(335, 2, 'Kilobits to Kibibits Converter', 'kilobits-to-kibibits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kilobits to Kibibits\r\n        function kilobitsToKibibits(kilobits) {\r\n            const kibibits = kilobits / 1.024;\r\n            return kibibits.toFixed(2);\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const kilobits = parseFloat(document.getElementById(\"kilobits\").value);\r\n\r\n            if (!isNaN(kilobits)) {\r\n                const kibibits = kilobitsToKibibits(kilobits);\r\n                document.getElementById(\"result\").textContent = kibibits + \" Kibibits\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"kilobits\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(336, 2, 'Kilobits to Bytes Converter', 'kilobits-to-bytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kilobits to Bytes\r\n        function kilobitsToBytes(kilobits) {\r\n            const bytes = kilobits * 125; // 1 Kilobit = 125 Bytes\r\n            return bytes.toFixed(2);\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const kilobits = parseFloat(document.getElementById(\"kilobits\").value);\r\n\r\n            if (!isNaN(kilobits)) {\r\n                const bytes = kilobitsToBytes(kilobits);\r\n                document.getElementById(\"result\").textContent = bytes + \" Bytes\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"kilobits\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(337, 2, 'Kilobits to Bits Converter', 'kilobits-to-bits-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"kilobits\">Kilobits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"kilobits\" placeholder=\"Enter Kilobits\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Kilobits to Bits\r\n        function kilobitsToBits(kilobits) {\r\n            const bits = kilobits * 1000; // 1 Kilobit = 1000 Bits\r\n            return bits;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const kilobits = parseFloat(document.getElementById(\"kilobits\").value);\r\n\r\n            if (!isNaN(kilobits)) {\r\n                const bits = kilobitsToBits(kilobits);\r\n                document.getElementById(\"result\").textContent = bits + \" Bits\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"kilobits\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(338, 2, 'Bytes to Yobibytes Converter', 'bytes-to-yobibytes-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '  <script>\r\n        // Function to convert Bytes to Yobibytes\r\n        function bytesToYobibytes(bytes) {\r\n            const yobibytes = bytes / Math.pow(2, 80); // 1 Byte = 2^(-80) Yobibytes\r\n            return yobibytes;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const yobibytes = bytesToYobibytes(bytes);\r\n                document.getElementById(\"result\").textContent = yobibytes + \" Yobibytes\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(339, 2, 'Bytes to Yottabytes Converter', 'bytes-to-yottabytes-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Bytes to Yottabytes\r\n        function bytesToYottabytes(bytes) {\r\n            const yottabytes = bytes / Math.pow(1024, 8); // 1 Byte = 2^(-8) Yottabytes\r\n            return yottabytes;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const yottabytes = bytesToYottabytes(bytes);\r\n                document.getElementById(\"result\").textContent = yottabytes + \" Yottabytes\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(340, 2, 'Bytes to Yobibits Converter', 'bytes-to-yobibits-converter', '<form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '  <script>\r\n        // Function to convert Bytes to Yobibits\r\n        function bytesToYobibits(bytes) {\r\n            const yobibits = bytes * 8 / Math.pow(1024, 8); // 1 Byte = 8 Yobibits\r\n            return yobibits;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const yobibits = bytesToYobibits(bytes);\r\n                document.getElementById(\"result\").textContent = yobibits + \" Yobibits\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(341, 2, 'Bytes to Yottabits Converter', 'bytes-to-yottabits-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '  <script>\r\n        // Function to convert Bytes to Yottabits\r\n        function bytesToYottabits(bytes) {\r\n            const yottabits = bytes * 8 / Math.pow(1024, 8); // 1 Byte = 8 Yottabits\r\n            return yottabits;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const yottabits = bytesToYottabits(bytes);\r\n                document.getElementById(\"result\").textContent = yottabits + \" Yottabits\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(342, 2, 'Bytes to Zebibytes Converter', 'bytes-to-zebibytes-converter', ' <form id=\"converter-form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Bytes to Zebibytes\r\n        function bytesToZebibytes(bytes) {\r\n            const zebibytes = bytes / Math.pow(1024, 7); // 1 Byte = 2^-70 Zebibytes\r\n            return zebibytes;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const zebibytes = bytesToZebibytes(bytes);\r\n                document.getElementById(\"result\").textContent = zebibytes + \" Zebibytes\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(343, 2, 'Bytes to Zettabytes Converter', 'bytes-to-zettabytes-converter', 'form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Bytes to Zettabytes\r\n        function bytesToZettabytes(bytes) {\r\n            const zettabytes = bytes / Math.pow(1024, 7); // 1 Byte = 2^-70 Zettabytes\r\n            return zettabytes;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const zettabytes = bytesToZettabytes(bytes);\r\n                document.getElementById(\"result\").textContent = zettabytes + \" Zettabytes\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(344, 2, 'Bytes to Zebibits Converter ', 'bytes-to-zebibits-converter-', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Bytes to Zebibits\r\n        function bytesToZebibits(bytes) {\r\n            const zebibits = bytes / Math.pow(1024, 7); // 1 Byte = 2^-70 Zebibits\r\n            return zebibits;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const zebibits = bytesToZebibits(bytes);\r\n                document.getElementById(\"result\").textContent = zebibits + \" Zebibits\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(345, 2, 'Bytes to Zettabits Converter', 'bytes-to-zettabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '  <script>\r\n        // Function to convert Bytes to Zettabits\r\n        function bytesToZettabits(bytes) {\r\n            const zettabits = bytes * 8 / Math.pow(10, 21); // 1 Byte = 8 Bits, 1 Zettabit = 10^21 Bits\r\n            return zettabits;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const zettabits = bytesToZettabits(bytes);\r\n                document.getElementById(\"result\").textContent = zettabits + \" Zettabits\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(346, 2, 'Bytes to Exbibytes Converter', 'bytes-to-exbibytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '    <script>\r\n        // Function to convert Bytes to Exbibytes\r\n        function bytesToExbibytes(bytes) {\r\n            const exbibytes = bytes / Math.pow(2, 60); // 1 Exbibyte = 2^60 Bytes\r\n            return exbibytes;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const exbibytes = bytesToExbibytes(bytes);\r\n                document.getElementById(\"result\").textContent = exbibytes + \" Exbibytes\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(347, 2, 'Bytes to Exabytes Converter', 'bytes-to-exabytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '    <script>\r\n        // Function to convert Bytes to Exbibytes\r\n        function bytesToExbibytes(bytes) {\r\n            const exbibytes = bytes / Math.pow(2, 60); // 1 Exbibyte = 2^60 Bytes\r\n            return exbibytes;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const exbibytes = bytesToExbibytes(bytes);\r\n                document.getElementById(\"result\").textContent = exbibytes + \" Exbibytes\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(348, 2, 'Bytes to Exbibits Converter', 'bytes-to-exbibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '   <script>\r\n        // Function to convert Bytes to Exbibits\r\n        function bytesToExbibits(bytes) {\r\n            const exbibits = bytes / Math.pow(2, 70); // 1 Exbibit = 2^70 Bytes\r\n            return exbibits;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const exbibits = bytesToExbibits(bytes);\r\n                document.getElementById(\"result\").textContent = exbibits + \" Exbibits\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(349, 2, 'Bytes to Exabits Converter', 'bytes-to-exabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Bytes to Exabits\r\n        function bytesToExabits(bytes) {\r\n            const exabits = bytes * 8 / Math.pow(10, 18); // 1 Exabit = 10^18 bits\r\n            return exabits;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const exabits = bytesToExabits(bytes);\r\n                document.getElementById(\"result\").textContent = exabits + \" Exabits\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(350, 2, 'Bytes to Pebibits Converter', 'bytes-to-pebibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '    <script>\r\n        // Function to convert Bytes to Pebibits\r\n        function bytesToPebibits(bytes) {\r\n            const pebibits = bytes * 8 / Math.pow(2, 50); // 1 Pebibit = 2^50 bits\r\n            return pebibits;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const pebibits = bytesToPebibits(bytes);\r\n                document.getElementById(\"result\").textContent = pebibits + \" Pebibits\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(351, 2, 'Bytes to Pebibytes Converter', 'bytes-to-pebibytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '    <script>\r\n        // Function to convert Bytes to Pebibytes\r\n        function bytesToPebibytes(bytes) {\r\n            const pebibytes = bytes / Math.pow(2, 50); // 1 Pebibyte = 2^50 bytes\r\n            return pebibytes;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const pebibytes = bytesToPebibytes(bytes);\r\n                document.getElementById(\"result\").textContent = pebibytes + \" Pebibytes\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(352, 2, 'Bytes to Petabytes Converter', 'bytes-to-petabytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '    <script>\r\n        // Function to convert Bytes to Petabytes\r\n        function bytesToPetabytes(bytes) {\r\n            const petabytes = bytes / Math.pow(10, 15); // 1 Petabyte = 10^15 bytes\r\n            return petabytes;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const petabytes = bytesToPetabytes(bytes);\r\n                document.getElementById(\"result\").textContent = petabytes + \" Petabytes\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(353, 2, 'Bytes to Petabits Converter', 'bytes-to-petabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '<script>\r\n        // Function to convert Bytes to Petabits\r\n        function bytesToPetabits(bytes) {\r\n            const petabits = bytes * 8 / Math.pow(10, 15); // 1 Petabit = 10^15 bits\r\n            return petabits;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const petabits = bytesToPetabits(bytes);\r\n                document.getElementById(\"result\").textContent = petabits + \" Petabits\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(354, 2, 'Bytes to Tebibytes Converter ', 'bytes-to-tebibytes-converter-', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Bytes to Tebibytes\r\n        function bytesToTebibytes(bytes) {\r\n            const tebibytes = bytes / Math.pow(1024, 4); // 1 Tebibyte = 1024^4 Bytes\r\n            return tebibytes;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const tebibytes = bytesToTebibytes(bytes);\r\n                document.getElementById(\"result\").textContent = tebibytes + \" Tebibytes\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(355, 2, 'Bytes to Tebibits Converter', 'bytes-to-tebibits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '    <script>\r\n        // Function to convert Bytes to Tebibits\r\n        function bytesToTebibits(bytes) {\r\n            const tebibits = bytes * 8 / Math.pow(1024, 4); // 1 Tebibit = 1024^4 bits\r\n            return tebibits;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const tebibits = bytesToTebibits(bytes);\r\n                document.getElementById(\"result\").textContent = tebibits + \" Tebibits\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(356, 2, 'Bytes to Terabytes Converter', 'bytes-to-terabytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', ' <script>\r\n        // Function to convert Bytes to Terabytes\r\n        function bytesToTerabytes(bytes) {\r\n            const terabytes = bytes / Math.pow(1024, 4); // 1 Terabyte = 1024^4 Bytes\r\n            return terabytes;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const terabytes = bytesToTerabytes(bytes);\r\n                document.getElementById(\"result\").textContent = terabytes.toFixed(6) + \" Terabytes\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(357, 2, 'Bytes to Terabits Converter', 'bytes-to-terabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '\r\n    <script>\r\n        // Function to convert Bytes to Terabits\r\n        function bytesToTerabits(bytes) {\r\n            const terabits = bytes * 8 / Math.pow(10, 12); // 1 Terabit = 10^12 bits\r\n            return terabits;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const terabits = bytesToTerabits(bytes);\r\n                document.getElementById(\"result\").textContent = terabits.toFixed(6) + \" Terabits\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(358, 2, 'Bytes to Gibibytes Converter', 'bytes-to-gibibytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '  <script>\r\n        // Function to convert Bytes to Gibibytes\r\n        function bytesToGibibytes(bytes) {\r\n            const gibibytes = bytes / Math.pow(2, 30); // 1 Gibibyte = 2^30 bytes\r\n            return gibibytes;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const gibibytes = bytesToGibibytes(bytes);\r\n                document.getElementById(\"result\").textContent = gibibytes.toFixed(6) + \" Gibibytes\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(359, 2, 'Bytes to Gibibits Converter', 'bytes-to-gibibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '   <script>\r\n        // Function to convert Bytes to Gibibits\r\n        function bytesToGibibits(bytes) {\r\n            const gibibits = (bytes * 8) / Math.pow(2, 30); // 1 Gibibit = 2^30 bits\r\n            return gibibits;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const gibibits = bytesToGibibits(bytes);\r\n                document.getElementById(\"result\").textContent = gibibits.toFixed(6) + \" Gibibits\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(360, 2, 'Bytes to Gigabytes Converter', 'bytes-to-gigabytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '\r\n    <script>\r\n        // Function to convert Bytes to Gigabytes\r\n        function bytesToGigabytes(bytes) {\r\n            const gigabytes = bytes / Math.pow(1024, 3); // 1 Gigabyte = 1024^3 bytes\r\n            return gigabytes;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const gigabytes = bytesToGigabytes(bytes);\r\n                document.getElementById(\"result\").textContent = gigabytes.toFixed(6) + \" Gigabytes\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(361, 2, 'Bytes to Gigabits Converter', 'bytes-to-gigabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '   <script>\r\n        // Function to convert Bytes to Gigabits\r\n        function bytesToGigabits(bytes) {\r\n            const gigabits = bytes * 8 / 1e9; // 1 Gigabit = 1,000,000,000 bits\r\n            return gigabits;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const gigabits = bytesToGigabits(bytes);\r\n                document.getElementById(\"result\").textContent = gigabits.toFixed(6) + \" Gigabits\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(362, 2, 'Bytes to Mebibytes Converter', 'bytes-to-mebibytes-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '\r\n    <script>\r\n        // Function to convert Bytes to Mebibytes\r\n        function bytesToMebibytes(bytes) {\r\n            const mebibytes = bytes / 1048576; // 1 Mebibyte = 1,048,576 Bytes\r\n            return mebibytes;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const mebibytes = bytesToMebibytes(bytes);\r\n                document.getElementById(\"result\").textContent = mebibytes.toFixed(6) + \" Mebibytes\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(363, 2, 'Bytes to Mebibits Converter', 'bytes-to-mebibits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '\r\n    <script>\r\n        // Function to convert Bytes to Mebibits\r\n        function bytesToMebibits(bytes) {\r\n            const mebibits = bytes * 8 / 1048576; // 1 Mebibit = 8 * 1024 * 1024 Bits\r\n            return mebibits;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const mebibits = bytesToMebibits(bytes);\r\n                document.getElementById(\"result\").textContent = mebibits.toFixed(6) + \" Mebibits\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(364, 2, 'Bytes to Megabytes Converter', 'bytes-to-megabytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '    <script>\r\n        // Function to convert Bytes to Megabytes\r\n        function bytesToMegabytes(bytes) {\r\n            const megabytes = bytes / 1024 / 1024;\r\n            return megabytes;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const megabytes = bytesToMegabytes(bytes);\r\n                document.getElementById(\"result\").textContent = megabytes.toFixed(6) + \" Megabytes\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(365, 2, 'Bytes to Megabits Converter', 'bytes-to-megabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '   <script>\r\n        // Function to convert Bytes to Megabits\r\n        function bytesToMegabits(bytes) {\r\n            const megabits = (bytes * 8) / 1000000;\r\n            return megabits;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const megabits = bytesToMegabits(bytes);\r\n                document.getElementById(\"result\").textContent = megabits.toFixed(6) + \" Megabits\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(366, 2, 'Bytes to Kibibytes Converter', 'bytes-to-kibibytes-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '    <script>\r\n        // Function to convert Bytes to Kibibytes\r\n        function bytesToKibibytes(bytes) {\r\n            const kibibytes = bytes / 1024;\r\n            return kibibytes;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const kibibytes = bytesToKibibytes(bytes);\r\n                document.getElementById(\"result\").textContent = kibibytes.toFixed(6) + \" Kibibytes\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(367, 2, 'Bytes to Kibibits Converter', 'bytes-to-kibibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytes\">Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytes\" placeholder=\"Enter Bytes\">\r\n            </div>\r\n        </form>\r\n        <h3>Result:</h3>\r\n        <p id=\"result\"></p>\r\n        <button class=\"btn btn-primary\" id=\"copy-result\">Copy Result</button>', '', '  <script>\r\n        // Function to convert Bytes to Kibibits\r\n        function bytesToKibibits(bytes) {\r\n            const kibibits = bytes * 8 / 1024;\r\n            return kibibits;\r\n        }\r\n\r\n        // Function to update the result while typing\r\n        function updateResult() {\r\n            const bytes = parseFloat(document.getElementById(\"bytes\").value);\r\n\r\n            if (!isNaN(bytes)) {\r\n                const kibibits = bytesToKibibits(bytes);\r\n                document.getElementById(\"result\").textContent = kibibits.toFixed(6) + \" Kibibits\";\r\n            } else {\r\n                document.getElementById(\"result\").textContent = \"\";\r\n            }\r\n        }\r\n\r\n        // Attach event listener to input field\r\n        document.getElementById(\"bytes\").addEventListener(\"input\", updateResult);\r\n\r\n        // Function to copy the result to the clipboard\r\n        document.getElementById(\"copy-result\").addEventListener(\"click\", function () {\r\n            const resultText = document.getElementById(\"result\").textContent;\r\n            if (resultText) {\r\n                const dummyInput = document.createElement(\"input\");\r\n                dummyInput.value = resultText;\r\n                document.body.appendChild(dummyInput);\r\n                dummyInput.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(dummyInput);\r\n                alert(\"Result copied to clipboard!\");\r\n            }\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(368, 2, 'Bytes to Kilobytes Converter', 'bytes-to-kilobytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytesInput\">Enter Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytesInput\" placeholder=\"Enter bytes\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 KB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const bytesInput = document.getElementById(\"bytesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bytesInput.addEventListener(\"input\", () => {\r\n            const bytes = parseFloat(bytesInput.value);\r\n            const kilobytes = bytes / 1024;\r\n            resultValue.textContent = kilobytes.toFixed(2) + \" KB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(369, 2, 'Bytes to Kilobits Converter', 'bytes-to-kilobits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytesInput\">Enter Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytesInput\" placeholder=\"Enter bytes\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Kbps</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '\r\n    <script>\r\n        const bytesInput = document.getElementById(\"bytesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bytesInput.addEventListener(\"input\", () => {\r\n            const bytes = parseFloat(bytesInput.value);\r\n            const kilobits = (bytes * 8) / 1000;\r\n            resultValue.textContent = kilobits.toFixed(2) + \" Kbps\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(370, 2, 'Bytes to Nibbles Converter', 'bytes-to-nibbles-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytesInput\">Enter Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytesInput\" placeholder=\"Enter bytes\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Nibbles</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const bytesInput = document.getElementById(\"bytesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bytesInput.addEventListener(\"input\", () => {\r\n            const bytes = parseInt(bytesInput.value);\r\n            const nibbles = bytes * 2; // 1 byte = 2 nibbles\r\n            resultValue.textContent = nibbles + \" Nibbles\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(371, 1, 'B', 'b', '', '', '', '', '', '', '', '', 34, 'draft'),
(372, 2, 'Bytes to Bits Converter', 'bytes-to-bits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bytesInput\">Enter Bytes:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bytesInput\" placeholder=\"Enter bytes\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 bits</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const bytesInput = document.getElementById(\"bytesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bytesInput.addEventListener(\"input\", () => {\r\n            const bytes = parseInt(bytesInput.value);\r\n            const bits = bytes * 8; // 1 byte = 8 bits\r\n            resultValue.textContent = bits + \" bits\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(373, 2, 'Nibbles to Yobibytes Converter', 'nibbles-to-yobibytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 YiB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const yobibytes = nibbles / (Math.pow(2, 80));\r\n            resultValue.textContent = yobibytes.toFixed(12) + \" YiB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(374, 2, 'Nibbles to Yobibits Converter', 'nibbles-to-yobibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Yibit</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const yobibits = nibbles / (Math.pow(2, 80));\r\n            resultValue.textContent = yobibits.toFixed(12) + \" Yibit\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(375, 2, 'Nibbles to Yottabytes Converter', 'nibbles-to-yottabytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 YB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const yottabytes = nibbles / (Math.pow(2, 80));\r\n            resultValue.textContent = yottabytes.toFixed(12) + \" YB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(376, 2, 'Nibbles to Yottabits Converter', 'nibbles-to-yottabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Yb</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const yottabits = nibbles * 4; // 1 nibble = 4 bits, 1 Yottabit = 1e24 bits\r\n            resultValue.textContent = yottabits.toFixed(12) + \" Yb\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(377, 2, 'Nibbles to Zebibytes Converter', 'nibbles-to-zebibytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 ZiB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const zebibytes = nibbles / (Math.pow(2, 70));\r\n            resultValue.textContent = zebibytes.toFixed(12) + \" ZiB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(378, 2, 'Nibbles to Zebibits Converter', 'nibbles-to-zebibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Zibit</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const zebibits = nibbles * 4; // 1 nibble = 4 bits, 1 Zebibit = 2^70 bits\r\n            resultValue.textContent = zebibits.toFixed(12) + \" Zibit\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(379, 2, 'Nibbles to Zettabytes Converter', 'nibbles-to-zettabytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 ZB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const zettabytes = nibbles / (Math.pow(2, 70));\r\n            resultValue.textContent = zettabytes.toFixed(12) + \" ZB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(380, 2, 'Nibbles to Zettabits Converter', 'nibbles-to-zettabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Zbit</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const zettabits = nibbles * 4; // 1 nibble = 4 bits, 1 Zettabit = 1e21 bits\r\n            resultValue.textContent = zettabits.toFixed(12) + \" Zbit\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(381, 2, 'Nibbles to Exbibytes Converter', 'nibbles-to-exbibytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 EiB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const exbibytes = nibbles / (Math.pow(2, 70));\r\n            resultValue.textContent = exbibytes.toFixed(12) + \" EiB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(382, 2, 'Nibbles to Exbibits Converter', 'nibbles-to-exbibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Eibit</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const exbibits = nibbles / (Math.pow(2, 70));\r\n            resultValue.textContent = exbibits.toFixed(12) + \" Eibit\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(383, 2, 'Nibbles to Exabytes Converter', 'nibbles-to-exabytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 EB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const exabytes = nibbles / (Math.pow(2, 60));\r\n            resultValue.textContent = exabytes.toFixed(12) + \" EB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(384, 2, 'Nibbles to Exabits Converter', 'nibbles-to-exabits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Ebit</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const exabits = nibbles * 4; // 1 nibble = 4 bits, 1 Exabit = 1e18 bits\r\n            resultValue.textContent = exabits.toFixed(12) + \" Ebit\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 9, 'publish'),
(385, 2, 'Nibbles to Pebibytes Converter', 'nibbles-to-pebibytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 PiB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const pebibytes = nibbles / (Math.pow(2, 50));\r\n            resultValue.textContent = pebibytes.toFixed(12) + \" PiB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(386, 2, 'Nibbles to Pebibits Converter', 'nibbles-to-pebibits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Pibit</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '\r\n    <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const pebibits = nibbles * 4; // 1 nibble = 4 bits, 1 Pebibit = 2^50 bits\r\n            resultValue.textContent = pebibits.toFixed(12) + \" Pibit\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(387, 2, 'Nibbles to Petabytes Converter', 'nibbles-to-petabytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 PB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const petabytes = nibbles / (Math.pow(2, 50));\r\n            resultValue.textContent = petabytes.toFixed(12) + \" PB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(388, 2, 'Nibbles to Petabits Converter', 'nibbles-to-petabits-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Pbit</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const petabits = nibbles * 4; // 1 nibble = 4 bits, 1 Petabit = 1e15 bits\r\n            resultValue.textContent = petabits.toFixed(12) + \" Pbit\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(389, 2, 'Nibbles to Tebibytes Converter', 'nibbles-to-tebibytes-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 TiB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const tebibytes = nibbles / (Math.pow(2, 40));\r\n            resultValue.textContent = tebibytes.toFixed(12) + \" TiB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 7, 'publish'),
(390, 2, 'Nibbles to Tebibits Converter', 'nibbles-to-tebibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Tibit</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const tebibits = nibbles * 4; // 1 nibble = 4 bits, 1 Tebibit = 2^40 bits\r\n            resultValue.textContent = tebibits.toFixed(12) + \" Tibit\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 8, 'publish'),
(391, 2, 'Nibbles to Terabytes Converter', 'nibbles-to-terabytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 TB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const terabytes = nibbles / (Math.pow(2, 40));\r\n            resultValue.textContent = terabytes.toFixed(12) + \" TB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 12, 'publish'),
(392, 2, 'Nibbles to Terabits Converter', 'nibbles-to-terabits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Tbit</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const terabits = nibbles * 4; // 1 nibble = 4 bits, 1 Terabit = 1e12 bits\r\n            resultValue.textContent = terabits.toFixed(12) + \" Tbit\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 12, 'publish'),
(393, 2, 'Nibbles to Gibibytes Converter', 'nibbles-to-gibibytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 GiB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const gibibytes = nibbles / (Math.pow(2, 30));\r\n            resultValue.textContent = gibibytes.toFixed(12) + \" GiB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 12, 'publish'),
(394, 2, 'Nibbles to Gibibits Converter', 'nibbles-to-gibibits-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Gibit</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const gibibits = nibbles * 4; // 1 nibble = 4 bits, 1 Gibibit = 2^30 bits\r\n            resultValue.textContent = gibibits.toFixed(12) + \" Gibit\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 14, 'publish'),
(395, 2, 'Nibbles to Gigabytes Converter', 'nibbles-to-gigabytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 GB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const gigabytes = nibbles / (Math.pow(2, 30));\r\n            resultValue.textContent = gigabytes.toFixed(12) + \" GB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 10, 'publish'),
(396, 2, 'Nibbles to Gigabits Converter', 'nibbles-to-gigabits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Gbit</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const gigabits = nibbles * 4; // 1 nibble = 4 bits, 1 Gigabit = 1e9 bits\r\n            resultValue.textContent = gigabits.toFixed(12) + \" Gbit\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 12, 'publish'),
(397, 2, 'Nibbles to Mebibytes Converter', 'nibbles-to-mebibytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 MiB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const mebibytes = nibbles / (Math.pow(2, 24));\r\n            resultValue.textContent = mebibytes.toFixed(12) + \" MiB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 19, 'publish'),
(398, 2, 'Nibbles to Mebibits Converter', 'nibbles-to-mebibits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Mibit</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const mebibits = nibbles * 4; // 1 nibble = 4 bits, 1 Mebibit = 2^20 bits\r\n            resultValue.textContent = mebibits.toFixed(12) + \" Mibit\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 12, 'publish'),
(399, 2, 'Nibbles to Megabytes Converter', 'nibbles-to-megabytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 MB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const megabytes = nibbles / (Math.pow(2, 23));\r\n            resultValue.textContent = megabytes.toFixed(12) + \" MB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 16, 'publish'),
(400, 2, 'Nibbles to Megabits Converter', 'nibbles-to-megabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Mbit</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const megabits = nibbles * 4; // 1 nibble = 4 bits, 1 Megabit = 1e6 bits\r\n            resultValue.textContent = megabits.toFixed(12) + \" Mbit\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 16, 'publish'),
(401, 2, 'Nibbles to Kibibytes Converter', 'nibbles-to-kibibytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 KiB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const kibibytes = nibbles / (Math.pow(2, 20));\r\n            resultValue.textContent = kibibytes.toFixed(12) + \" KiB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 16, 'publish'),
(402, 2, 'Nibbles to Kibibits Converter', 'nibbles-to-kibibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Kibit</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const kibibits = nibbles * 4; // 1 nibble = 4 bits, 1 Kibibit = 2^10 bits\r\n            resultValue.textContent = kibibits.toFixed(12) + \" Kibit\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 17, 'publish'),
(403, 2, 'Nibbles to Kilobytes Converter', 'nibbles-to-kilobytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 KB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const kilobytes = nibbles / (Math.pow(2, 20));\r\n            resultValue.textContent = kilobytes.toFixed(12) + \" KB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 17, 'publish'),
(404, 2, 'Nibbles to Kilobits Converter', 'nibbles-to-kilobits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Kbit</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '\r\n    <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const kilobits = nibbles * 4; // 1 nibble = 4 bits, 1 Kilobit = 1e3 bits\r\n            resultValue.textContent = kilobits.toFixed(12) + \" Kbit\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 12, 'publish'),
(405, 2, 'Nibbles to Bits Converter', 'nibbles-to-bits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 bits</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const bits = nibbles * 4; // 1 nibble = 4 bits\r\n            resultValue.textContent = bits.toFixed(12) + \" bits\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 20, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(406, 2, 'Nibbles to Bytes Converter', 'nibbles-to-bytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"nibblesInput\">Enter Nibbles:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"nibblesInput\" placeholder=\"Enter nibbles\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 bytes</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        const nibblesInput = document.getElementById(\"nibblesInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        nibblesInput.addEventListener(\"input\", () => {\r\n            const nibbles = parseFloat(nibblesInput.value);\r\n            const bytes = nibbles / 2; // 1 nibble = 2 bytes\r\n            resultValue.textContent = bytes.toFixed(12) + \" bytes\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 17, 'publish'),
(407, 2, 'Bits to Yobibytes Converter', 'bits-to-yobibytes-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Yibibytes</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const bytes = bits / 8;\r\n            const kibibytes = bytes / 1024;\r\n            const mebibytes = kibibytes / 1024;\r\n            const gibibytes = mebibytes / 1024;\r\n            const tebibytes = gibibytes / 1024;\r\n            const pebibytes = tebibytes / 1024;\r\n            const exbibytes = pebibytes / 1024;\r\n            const zebibytes = exbibytes / 1024;\r\n            const yobibytes = zebibytes / 1024;\r\n\r\n            resultValue.textContent = yobibytes.toFixed(12) + \" Yibibytes\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 15, 'publish'),
(408, 2, 'Bits to Yobibits Converter', 'bits-to-yobibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Yibits</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const kilobits = bits / 1000;\r\n            const megabits = kilobits / 1000;\r\n            const gigabits = megabits / 1000;\r\n            const terabits = gigabits / 1000;\r\n            const petabits = terabits / 1000;\r\n            const exabits = petabits / 1000;\r\n            const zettabits = exabits / 1000;\r\n            const yobibits = zettabits / 1000;\r\n\r\n            resultValue.textContent = yobibits.toFixed(12) + \" Yibits\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 18, 'publish'),
(409, 2, 'Bits to Yottabytes Converter', 'bits-to-yottabytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 YB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>\r\n', '', ' <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const bytes = bits / 8;\r\n            const kilobytes = bytes / 1024;\r\n            const megabytes = kilobytes / 1024;\r\n            const gigabytes = megabytes / 1024;\r\n            const terabytes = gigabytes / 1024;\r\n            const petabytes = terabytes / 1024;\r\n            const exabytes = petabytes / 1024;\r\n            const zettabytes = exabytes / 1024;\r\n            const yottabytes = zettabytes / 1024;\r\n\r\n            resultValue.textContent = yottabytes.toFixed(12) + \" YB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 18, 'publish'),
(410, 2, 'Bits to Yottabits Converter', 'bits-to-yottabits-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Yb</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const kilobits = bits / 1000;\r\n            const megabits = kilobits / 1000;\r\n            const gigabits = megabits / 1000;\r\n            const terabits = gigabits / 1000;\r\n            const petabits = terabits / 1000;\r\n            const exabits = petabits / 1000;\r\n            const zettabits = exabits / 1000;\r\n            const yottabits = zettabits / 1000;\r\n\r\n            resultValue.textContent = yottabits.toFixed(12) + \" Yb\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 16, 'publish'),
(411, 2, 'Bits to Zebibytes Converter', 'bits-to-zebibytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 ZiB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const bytes = bits / 8;\r\n            const kilobytes = bytes / 1024;\r\n            const megabytes = kilobytes / 1024;\r\n            const gigabytes = megabytes / 1024;\r\n            const terabytes = gigabytes / 1024;\r\n            const petabytes = terabytes / 1024;\r\n            const exabytes = petabytes / 1024;\r\n            const zebibytes = exabytes / 1024;\r\n\r\n            resultValue.textContent = zebibytes.toFixed(12) + \" ZiB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 19, 'publish'),
(412, 2, 'Bits to Zebibits Converter', 'bits-to-zebibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Zibits</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const kilobits = bits / 1000;\r\n            const megabits = kilobits / 1000;\r\n            const gigabits = megabits / 1000;\r\n            const terabits = gigabits / 1000;\r\n            const petabits = terabits / 1000;\r\n            const exabits = petabits / 1000;\r\n            const zebibits = exabits / 1000;\r\n\r\n            resultValue.textContent = zebibits.toFixed(12) + \" Zibits\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 16, 'publish'),
(413, 2, 'Bits to Zettabytes Converter', 'bits-to-zettabytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 ZB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const bytes = bits / 8;\r\n            const kilobytes = bytes / 1024;\r\n            const megabytes = kilobytes / 1024;\r\n            const gigabytes = megabytes / 1024;\r\n            const terabytes = gigabytes / 1024;\r\n            const zettabytes = terabytes / 1024;\r\n\r\n            resultValue.textContent = zettabytes.toFixed(12) + \" ZB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 16, 'publish'),
(414, 2, 'Bits to Zettabits Converter', 'bits-to-zettabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Zb</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const kilobits = bits / 1000;\r\n            const megabits = kilobits / 1000;\r\n            const gigabits = megabits / 1000;\r\n            const terabits = gigabits / 1000;\r\n            const petabits = terabits / 1000;\r\n            const zettabits = petabits / 1000;\r\n\r\n            resultValue.textContent = zettabits.toFixed(12) + \" Zb\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 17, 'publish'),
(415, 2, 'Bits to Exbibytes Converter', 'bits-to-exbibytes-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 EiB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const bytes = bits / 8;\r\n            const kibibytes = bytes / 1024;\r\n            const mebibytes = kibibytes / 1024;\r\n            const gibibytes = mebibytes / 1024;\r\n            const tebibytes = gibibytes / 1024;\r\n            const pebibytes = tebibytes / 1024;\r\n            const exbibytes = pebibytes / 1024;\r\n\r\n            resultValue.textContent = exbibytes.toFixed(12) + \" EiB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 16, 'publish'),
(416, 2, 'Bits to Exbibits Converter', 'bits-to-exbibits-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Eibits</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '\r\n    <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const kilobits = bits / 1000;\r\n            const megabits = kilobits / 1000;\r\n            const gigabits = megabits / 1000;\r\n            const terabits = gigabits / 1000;\r\n            const petabits = terabits / 1000;\r\n            const exabits = petabits / 1000;\r\n            const exbibits = exabits / 1024;\r\n\r\n            resultValue.textContent = exbibits.toFixed(12) + \" Eibits\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 15, 'publish'),
(417, 2, 'Bits to Exabytes Converter', 'bits-to-exabytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 EB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const bytes = bits / 8;\r\n            const kilobytes = bytes / 1024;\r\n            const megabytes = kilobytes / 1024;\r\n            const gigabytes = megabytes / 1024;\r\n            const terabytes = gigabytes / 1024;\r\n            const petabytes = terabytes / 1024;\r\n            const exabytes = petabytes / 1024;\r\n\r\n            resultValue.textContent = exabytes.toFixed(12) + \" EB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 15, 'publish'),
(418, 2, 'Bits to Exabits Converter', 'bits-to-exabits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Eb</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const kilobits = bits / 1000;\r\n            const megabits = kilobits / 1000;\r\n            const gigabits = megabits / 1000;\r\n            const terabits = gigabits / 1000;\r\n            const petabits = terabits / 1000;\r\n            const exabits = petabits / 1000;\r\n\r\n            resultValue.textContent = exabits.toFixed(12) + \" Eb\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 19, 'publish'),
(419, 2, 'Bits to Pebibytes Converter', 'bits-to-pebibytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 PiB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const bytes = bits / 8;\r\n            const kibibytes = bytes / 1024;\r\n            const mebibytes = kibibytes / 1024;\r\n            const gibibytes = mebibytes / 1024;\r\n            const tebibytes = gibibytes / 1024;\r\n            const pebibytes = tebibytes / 1024;\r\n\r\n            resultValue.textContent = pebibytes.toFixed(12) + \" PiB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 17, 'publish'),
(420, 2, 'Bits to Pebibits Converter', 'bits-to-pebibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Pibit</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const kilobits = bits / 1000;\r\n            const megabits = kilobits / 1000;\r\n            const gigabits = megabits / 1000;\r\n            const terabits = gigabits / 1000;\r\n            const petabits = terabits / 1000;\r\n            const exabits = petabits / 1000;\r\n            const zettabits = exabits / 1000;\r\n            const pebibits = zettabits / 1024;\r\n\r\n            resultValue.textContent = pebibits.toFixed(12) + \" Pibit\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 18, 'publish'),
(421, 2, 'Bits to Petabits Converter', 'bits-to-petabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Pb</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const petabits = bits / 1e15;\r\n\r\n            resultValue.textContent = petabits.toFixed(12) + \" Pb\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 16, 'publish'),
(422, 2, 'Bits to Petabits Converter', 'bits-to-petabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Pb</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const petabits = bits / 1e15;\r\n\r\n            resultValue.textContent = petabits.toFixed(12) + \" Pb\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 0, 'publish'),
(423, 2, 'Bits to Petabytes Converter', 'bits-to-petabytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 PB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const bytes = bits / 8;\r\n            const petabytes = bytes / 1e15;\r\n\r\n            resultValue.textContent = petabytes.toFixed(12) + \" PB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 15, 'publish'),
(424, 2, 'Bits to Tebibytes Converter', 'bits-to-tebibytes-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 TiB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const bytes = bits / 8;\r\n            const kibibytes = bytes / 1024;\r\n            const mebibytes = kibibytes / 1024;\r\n            const gibibytes = mebibytes / 1024;\r\n            const tebibytes = gibibytes / 1024;\r\n\r\n            resultValue.textContent = tebibytes.toFixed(12) + \" TiB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 18, 'publish'),
(425, 2, 'Bits to Tebibits Converter', 'bits-to-tebibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Tibit</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const kibibits = bits / 1024;\r\n            const mebibits = kibibits / 1024;\r\n            const gibibits = mebibits / 1024;\r\n            const tebibits = gibibits / 1024;\r\n\r\n            resultValue.textContent = tebibits.toFixed(12) + \" Tibit\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 14, 'publish'),
(426, 2, 'Bits to Terabytes Converter', 'bits-to-terabytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 TB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const bytes = bits / 8;\r\n            const kilobytes = bytes / 1024;\r\n            const megabytes = kilobytes / 1024;\r\n            const gigabytes = megabytes / 1024;\r\n            const terabytes = gigabytes / 1024;\r\n\r\n            resultValue.textContent = terabytes.toFixed(12) + \" TB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 16, 'publish'),
(427, 2, 'Bits to Terabits Converter', 'bits-to-terabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Tb</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const terabits = bits / 1e12;\r\n\r\n            resultValue.textContent = terabits.toFixed(12) + \" Tb\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 17, 'publish'),
(428, 2, 'Bits to Gibibytes Converter', 'bits-to-gibibytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 GiB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const bytes = bits / 8;\r\n            const gibibytes = bytes / Math.pow(1024, 3);\r\n\r\n            resultValue.textContent = gibibytes.toFixed(12) + \" GiB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 18, 'publish'),
(429, 2, 'Bits to Gibibits Converter', 'bits-to-gibibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Gibit</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const gibibits = bits / Math.pow(1024, 3);\r\n\r\n            resultValue.textContent = gibibits.toFixed(12) + \" Gibit\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 15, 'publish'),
(430, 2, 'Bits to Gigabytes Converter', 'bits-to-gigabytes-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 GB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const bytes = bits / 8;\r\n            const gigabytes = bytes / Math.pow(1024, 3);\r\n\r\n            resultValue.textContent = gigabytes.toFixed(12) + \" GB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 15, 'publish'),
(431, 2, 'Bits to Gigabits Converter', 'bits-to-gigabits-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Gb</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const gigabits = bits / Math.pow(10, 9);\r\n\r\n            resultValue.textContent = gigabits.toFixed(12) + \" Gb\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 18, 'publish'),
(432, 2, 'Bits to Mebibytes Converter', 'bits-to-mebibytes-converter', '<form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 MiB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const bytes = bits / 8;\r\n            const mebibytes = bytes / Math.pow(1024, 2);\r\n\r\n            resultValue.textContent = mebibytes.toFixed(12) + \" MiB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 17, 'publish'),
(433, 2, 'Bits to Mebibits Converter', 'bits-to-mebibits-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Mib</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '\r\n    <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const mebibits = bits / Math.pow(2, 20);\r\n\r\n            resultValue.textContent = mebibits.toFixed(12) + \" Mib\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 14, 'publish'),
(434, 2, 'Bits to Megabits Converter', 'bits-to-megabits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Mb</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '<script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const megabits = bits / Math.pow(10, 6);\r\n\r\n            resultValue.textContent = megabits.toFixed(12) + \" Mb\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 16, 'publish'),
(435, 2, 'Bits to Megabytes Converter', 'bits-to-megabytes-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 MB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const bytes = bits / 8;\r\n            const megabytes = bytes / Math.pow(1024, 2);\r\n\r\n            resultValue.textContent = megabytes.toFixed(12) + \" MB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 13, 'publish');
INSERT INTO `tool` (`tool_id`, `category_id`, `tool_name`, `tool_url`, `tool_html`, `tool_css`, `tool_js`, `tool_php`, `tool_content`, `tool_meta_title`, `tool_meta_description`, `tool_meta_keywords`, `tool_views`, `tool_status`) VALUES
(436, 2, 'Bits to Kilobytes Converter', 'bits-to-kilobytes-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 KB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const bytes = bits / 8;\r\n            const kilobytes = bytes / 1024;\r\n\r\n            resultValue.textContent = kilobytes.toFixed(12) + \" KB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 34, 'publish'),
(437, 2, 'Bits to Kilobits Converter', 'bits-to-kilobits-converter', '    <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Kbps</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const kilobits = bits / 1000;\r\n\r\n            resultValue.textContent = kilobits.toFixed(12) + \" Kbps\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 32, 'publish'),
(438, 2, 'Bits to Kibibytes Converter', 'bits-to-kibibytes-converter', '  <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 KiB</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '\r\n    <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const bytes = bits / 8;\r\n            const kibibytes = bytes / 1024;\r\n\r\n            resultValue.textContent = kibibytes.toFixed(12) + \" KiB\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 34, 'publish'),
(439, 2, 'Bits to Kibibits Converter', 'bits-to-kibibits-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Kibibits</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', '  <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const kibibits = bits / 1024;\r\n\r\n            resultValue.textContent = kibibits.toFixed(12) + \" Kibibits\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 39, 'publish'),
(440, 2, 'Bits to Bytes Converter', 'bits-to-bytes-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 bytes</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>', '', ' <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const bytes = bits / 8;\r\n\r\n            resultValue.textContent = bytes.toFixed(12) + \" bytes\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 46, 'publish'),
(441, 2, 'Bits to Nibbles Converter', 'bits-to-nibbles-converter', ' <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"bitsInput\">Enter Bits:</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"bitsInput\" placeholder=\"Enter bits\">\r\n            </div>\r\n        </form>\r\n        <div class=\"result mt-3\">\r\n            <h3>Result:</h3>\r\n            <p id=\"resultValue\">0 Nibbles</p>\r\n        </div>\r\n        <button class=\"btn btn-primary mt-3\" id=\"copyButton\">Copy Result</button>\r\n', '', '\r\n    <script>\r\n        const bitsInput = document.getElementById(\"bitsInput\");\r\n        const resultValue = document.getElementById(\"resultValue\");\r\n        const copyButton = document.getElementById(\"copyButton\");\r\n\r\n        bitsInput.addEventListener(\"input\", () => {\r\n            const bits = parseFloat(bitsInput.value);\r\n            const nibbles = bits / 4;\r\n\r\n            resultValue.textContent = nibbles.toFixed(12) + \" Nibbles\";\r\n        });\r\n\r\n        copyButton.addEventListener(\"click\", () => {\r\n            const resultText = resultValue.textContent;\r\n            const newWindow = window.open(\"\", \"_blank\");\r\n            newWindow.document.write(\"<html><head><title>Result</title></head><body><h1>Result:</h1><p>\" + resultText + \"</p></body></html>\");\r\n        });\r\n    </script>', '', '', '', '', '', 52, 'publish'),
(442, 4, 'Test ', 'test-', '', '', '', '', '', '', '', '', 20, 'publish');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `admin`
--
ALTER TABLE `admin`
  ADD PRIMARY KEY (`admin_id`);

--
-- Indexes for table `category`
--
ALTER TABLE `category`
  ADD PRIMARY KEY (`category_id`);

--
-- Indexes for table `contactform`
--
ALTER TABLE `contactform`
  ADD PRIMARY KEY (`contactform_id`);

--
-- Indexes for table `menu`
--
ALTER TABLE `menu`
  ADD PRIMARY KEY (`menu_id`);

--
-- Indexes for table `meta`
--
ALTER TABLE `meta`
  ADD PRIMARY KEY (`meta_id`);

--
-- Indexes for table `page`
--
ALTER TABLE `page`
  ADD PRIMARY KEY (`page_id`);

--
-- Indexes for table `post`
--
ALTER TABLE `post`
  ADD PRIMARY KEY (`post_id`);

--
-- Indexes for table `setting`
--
ALTER TABLE `setting`
  ADD PRIMARY KEY (`setting_id`);

--
-- Indexes for table `tool`
--
ALTER TABLE `tool`
  ADD PRIMARY KEY (`tool_id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `admin`
--
ALTER TABLE `admin`
  MODIFY `admin_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;

--
-- AUTO_INCREMENT for table `category`
--
ALTER TABLE `category`
  MODIFY `category_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;

--
-- AUTO_INCREMENT for table `contactform`
--
ALTER TABLE `contactform`
  MODIFY `contactform_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `menu`
--
ALTER TABLE `menu`
  MODIFY `menu_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;

--
-- AUTO_INCREMENT for table `meta`
--
ALTER TABLE `meta`
  MODIFY `meta_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT for table `page`
--
ALTER TABLE `page`
  MODIFY `page_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;

--
-- AUTO_INCREMENT for table `post`
--
ALTER TABLE `post`
  MODIFY `post_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;

--
-- AUTO_INCREMENT for table `setting`
--
ALTER TABLE `setting`
  MODIFY `setting_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `tool`
--
ALTER TABLE `tool`
  MODIFY `tool_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=443;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
